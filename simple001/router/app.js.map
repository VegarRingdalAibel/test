{"version":3,"sources":["samples/router/fuseHmrPlugin.ts","packages/core/src/requestRender.ts","packages/core/src/symbols.ts","packages/core/src/logger.ts","packages/core/src/property.ts","packages/core/src/prop.ts","packages/core/src/customElement.ts","packages/core/src/transmitter.ts","packages/core/src/disconnectedCallback.ts","packages/core/src/state.ts","packages/core/src/attribute.ts","packages/core/src/index.ts","packages/router/src/gotoURL.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/createRouteRegex.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/isVariable.ts","packages/router/src/getVariableName.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/routeMatch.ts","packages/router/src/getUrlVars.ts","packages/router/src/getVariables.ts","packages/router/src/getRouteParams.ts","packages/router/src/index.ts","samples/router/routes/settings.ts","samples/router/routes/home.ts","samples/router/routes/login.ts","samples/router/routes/routerConfig.ts","samples/router/routes/protected.ts","samples/router/routes/childrouter.ts","samples/router/app-root.ts","samples/router/hmr.ts","samples/router/index.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","ctx","isConnected","__wait","requestAnimationFrame","Promise","resolve","render","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","log","skipElements","symbols_1","WeakMap","skip","context","map","has","count","set","get","tag","indexOf","id","getID","registerLoggerContext","text","x","Math","floor","length","idOnly","y","console","Array","join","options","_class","prop","Object","defineProperty","tagName","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","configurable","elementName","extended","elementClass","value","prototype","isArray","concat","Base","constructor","renderCalled","call","result","template","then","templates","lit_html_1","eventContext","updated","connectedCallback","register","callers","push","disconnectedCallback","forEach","attributeChangedCallback","newValue","attribute","replace","toLowerCase","Map","nameProp","customElements","define","hmrCache","channel","args","i","len","func","apply","setTimeout","events","filter","event","state","keys","Set","addEventListener","newState","obj","part","assign","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","path","params","query","substr","urls","split","newUrl","val","undefined","urlparams","URLSearchParams","k","append","location","hash","toString","AsyncTask","update","_setValue","importStatement","htmlTemplate","routeMatch_1","exports","pathPattern","openEnd","regex","pattern","index","PATH_SLASH_REGEX_1","substring","urlPattern","paths","pathsConfig","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","locationhash","parseUrlPattern_1","regexString","createRouteRegex_1","RegExp","test","string","vars","_m","_paths","_query","getUrlVars_1","getVariables_1","HASH_RENDER_EVENT","core_1","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","promise","oldhash","isBackEvent","hashChange","cleanUp","handleEvent","removeEventListener","HTMLElement","locked","router_1","counter","alert","clicker","loggedin","src_1","click","isAuthenticted","home","href","title","load","html","isNav","settings","login","unknown","child","children","subHome","subSettings","protected","router","childRoutes","param","cool","login_1","childRoute","routerConfig_1","route","router_2","document","body","innerHTML","custom_elements_hmr_polyfill_1","NONE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACe,2BAAUA,SAAqBC;SAClCC,WAAYF;EAEpBG,OAAOC,kBAAkBC,YAAY;MAEjCJ,OAAOK;IACPL,OAAOM,aAAaL;IAEpBD,OAAOO;IAEPP,OAAOQ,YAAYP;;IAEnBD,OAAOS;IACPT,OAAOO;IAEPP,OAAOU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfR,uBAAuBC;MACtBA,IAAIC;QACAD,IAAIE;MAEJF,IAAIE,SAAS;MACbC,sBAAsB;cACZC,QAAQC,QAAQ;QACtBL,IAAIM;QACJN,IAAIE,SAAS;;;;;;;;;;;ACTtB;OACGK,WAAmBC;IACpBD,WAAmBC;IACnBD,WAAmBE;;;;AAIrB;OACGF,WAAmBC,YAAYE;IAChCH,WAAmBC,YAAYE,wBAAwBC,OAAO;WACvDJ,WAAmBC,YAAYE;;WAE/BH,WAAmBC,YAAYE;;;;AAIxC;OACGH,WAAmBC,YAAYI;IAChCL,WAAmBC,YAAYI,qBAAqBD,OAAO;WACpDJ,WAAmBC,YAAYI;;WAE/BL,WAAmBC,YAAYI;;;;AAIxC,uBAAuBC;OACpBN,WAAmBE,iBAAiBI;IACrCN,WAAmBE,iBAAiBI,QAAQF,OAAOE;WAC5CN,WAAmBE,iBAAiBI;;WAEpCN,WAAmBE,iBAAiBI;;;;AAI7C;OACGN,WAAmBC,YAAYM;IAChCP,WAAmBC,YAAYM,SAASH,OAAO;WACxCJ,WAAmBC,YAAYM;;WAE/BP,WAAmBC,YAAYM;;;;AAIxC;OACGP,WAAmBC,YAAYO;IAChCR,WAAmBC,YAAYO,cAAcJ,OAAO;WAC7CJ,WAAmBC,YAAYO;;WAE/BR,WAAmBC,YAAYO;;;;AAIxC;OACGR,WAAmBC,YAAYQ;IAChCT,WAAmBC,YAAYQ,cAAcL,OAAO;WAC7CJ,WAAmBC,YAAYQ;;WAE/BT,WAAmBC,YAAYQ;;;;AAI/CC;;;;;;;;ICxDIC,MAAM;IACNC;KAEEZ,WAAmBa;EACpBb,WAAmBa,mCAAyBC;EAC5Cd,WAAmBa,oCAA0B;;AAG3C,8BAA8BE;EACjCH,eAAeG;EACfJ,MAAM;;;AAGH;EACHA,MAAM;;;AAGV,+BAA+BK;MACvBL;UACMM,MAAOjB,WAAmBa;QAC5BI,IAAIC,IAAIF;YACF;;UAGJG,QAASnB,WAAmBa,oCAA0B;IAC3Db,WAAmBa,oCAA0BM;IAE9CF,IAAIG,IAAIJ,SAASG;;;AAIzB,eAAe1B;MACPkB;UACMM,MAAOjB,WAAmBa;WACzBI,IAAII,IAAI5B;;;AAIhB,gBAAgBa,MAAcb,KAAU6B;MACvCX,OAAOC,aAAaW,QAAQD,UAAU;QAClCE,KAAKC,MAAMhC;SACV+B;MACDE,sBAAsBjC;;IAE1B+B,KAAKC,MAAMhC;UAKLkC,OAAOrB,QAAQ,OAAO,MAAMkB,MAAM;UAClCI,IAAI,KAAKC,KAAKC,MAAMH,KAAKI;UAGzBC,SAAS,MAAMR,MAAM;UACrBS,IAAI,IAAIJ,KAAKC,MAAME,OAAOD;IAGhCG,QAAQvB,2BACmBL,OAAO6B,MAAMP,GAAGQ,KAAK,YAAYZ,MAAM,MAAMW,MAAMF,GAAGG,KACzE,sBACe3C,OAAOA,IAAIC,gBAAgB,OAAO,MAAM,UAAU4B;;;;;;;;;;;;;ACzD1E,kBAAkBe;SACd,aAAaC,QAAkBC;IAClCC,OAAOC,eAAeH,QAAQC;MAC1BlB,KAAK;eACM,KAAKR,wBAAc,KAAK6B,UAAU,MAAMH;;MAEnDnB,KAAK,UAAUQ;QACXe,gBAAO,gBAAgB,MAAM,KAAKD;cAE5BE,WAAW,KAAK/B,wBAAc,KAAK6B,UAAU,MAAMH;QACzD,KAAK1B,wBAAc,KAAK6B,UAAU,MAAMH,SAASX;YAC7C,KAAKiB,iBAAiBD,aAAahB;UACnC,KAAKiB,cAAc,YAAYN,MAAMK,UAAUhB;;YAE/CgB,aAAahB,MAAMS,QAAQS;UAC3BC,8BAAc;;;MAGtBC,cAAc;;;;;;;;;;;;AClBnB;SACI,aAAaV,QAAkBC;IAClCC,OAAOC,eAAeH,QAAQC;MAC1BlB,KAAK;eACM,KAAKR,wBAAc,KAAK6B,UAAU,MAAMH;;MAEnDnB,KAAK,UAAUQ;QACX,KAAKf,wBAAc,KAAK6B,UAAU,MAAMH,SAASX;eAC1C;;MAEXoB,cAAc;;;;;;;;;;;;;;ACVnB,uBAAuBC,aAAqBC;SACxC,aAAaC;UACV9C,qBAAqB8C,aAAa9C;IACxCmC,OAAOC,eAAeU,cAAc;MAChC/B,KAAK,UAAUgC;QACXD,aAAaE,UAAUxC,2CAAiCuC;eACjD;;MAEX/B,KAAK;eACM8B,aAAaE,UAAUxC;;MAElCmC,cAAc;;QAGdb,MAAMmB,QAAQjD,uBAAuB8B,MAAMmB,QAAQH,aAAa9C;MAChE8C,aAAa9C,qBAAqB8C,aAAa9C,mBAAmBkD,OAC9DlD;;QAIJ8B,MAAMmB,QAAQjD,wBAAwB8B,MAAMmB,QAAQH,aAAa9C;MACjE8C,aAAa9C,qBAAqBA;;UAGhCmD,OAAY,cAAcL;MAC5BM;QACI;QACAd,gBAAO,eAAe,MAAM,MAAMD;;MAGtCgB;YACQ,MAAMA;UACN,MAAMA,aAAaC,KAAK;;;MAIhC5D,UAAU6D;YACF,MAAM7D;UACN4C,gBAAO,UAAU,MAAM,MAAMD;gBACvBmB,WAAW,MAAM9D,OAAO4D,KAAK,SAASC;UAC5C/D,QAAQC,QAAQ+D,UAAUC,KAAK,AAACC;YAC5BC,kBAAOD,WAAW;cAAeE,cAAc;;gBAC3C,MAAMC;cAENtE,sBAAsB;gBAClB,MAAMsE;;;;;QAKtB,KAAKR;;MAETS;QACIxB,gBAAO,qBAAqB,MAAM,MAAMD;YACpC,MAAMyB;UACN,MAAMA,kBAAkBR,KAAK;;QAEjC,KAAK5D,OAAO;;MAGhBqE,SAAST;YACD,KAAKU;UACL,KAAKA,QAAQC,KAAKX;;UAElB,KAAKU;UACL,KAAKA,QAAQC,KAAKX;;;MAI1BY;QACI5B,gBAAO,wBAAwB,MAAM,MAAMD;YACvC,KAAK2B;UACL,KAAKA,QAAQG,QAAQ,AAACb,QAAmBA;;QAE7C,KAAKU;YACD,MAAME;UACN,MAAMA,qBAAqBZ,KAAK;;;MAGxCc,yBAAyBnE,MAAcsC,UAAkB8B;QACrD/B,gBAAO,4BAA4B,MAAM,MAAMD;aAG1C,KAAK7B;gBACA8D,YAAYrE,KACbsE,QAAQ,mBAAmB,SAC3BA,QAAQ,QAAQ,KAChBC;UACL,KAAKhE,kDAAwCiE;UAC7C,KAAKjE,4CAAkCO,IAAIuD,WAAWrE;;cAGpDyE,WAAW,KAAKlE,4CAAkCQ,IAAIf;QAC5D,KAAKyE,YAAYL,YAAY;YAEzB,MAAMD;UACN,MAAMA,yBAAyBd,KAAK,MAAMrD,MAAMsC,UAAU8B;;YAG1D,MAAM7B;UACN,MAAMA,cAAc,aAAavC,MAAMsC,UAAU8B;;;;SAIxDM,eAAe3D,IAAI4B;UAChBC;QACA8B,eAAeC,OAAOhC,aAAaO,MAAMN;;QAEzC8B,eAAeC,OAAOhC,aAAaO;;;UAGlCxD,WAAmBkF;YAChBhC;UACA8B,eAAeC,OAAOhC,aAAaO,MAAMN;;UAEzC8B,eAAeC,OAAOhC,aAAaO;;;;;;;;;;;;;;KCxHjDxD,WAAmBa;EACpBb,WAAmBa;;AAGxB;SACYb,WAAmBa;;AAIxB,iBAAiBsE,YAAoBC;EACxCvF,QAAQC,UAAUgE,KAAK;QACf3B,MAAMmB,QAAQ7C,cAAc0E;eACnBE,IAAI,GAAGC,MAAM7E,cAAc0E,SAASpD,QAAQsD,IAAIC,KAAKD;cACpD5F,MAAMgB,cAAc0E,SAASE,GAAG5F;QACtCgB,cAAc0E,SAASE,GAAGE,KAAKC,MAAM/F,KAAK2F;;;;;;AAOnD,qBAAqBD,YAAoBC;MACxCjD,MAAMmB,QAAQ7C,cAAc0E;aACnBE,IAAI,GAAGC,MAAM7E,cAAc0E,SAASpD,QAAQsD,IAAIC,KAAKD;YACpD5F,MAAMgB,cAAc0E,SAASE,GAAG5F;MACtCgB,cAAc0E,SAASE,GAAGE,KAAKC,MAAM/F,KAAK2F;;;;;AAM/C,qBAAqBD,YAAoBC;EAC5CK,WAAW;QACHtD,MAAMmB,QAAQ7C,cAAc0E;eACnBE,IAAI,GAAGC,MAAM7E,cAAc0E,SAASpD,QAAQsD,IAAIC,KAAKD;cACpD5F,MAAMgB,cAAc0E,SAASE,GAAG5F;QACtCgB,cAAc0E,SAASE,GAAGE,KAAKC,MAAM/F,KAAK2F;;;KAGnD;;;AAIA,qBAAqBD,SAAiB1F;MACrC0C,MAAMmB,QAAQ7C,cAAc0E;UACtBO,SAASjF,cAAc0E,SAASQ,OAAO,AAACC;UACtCA,MAAMnG,QAAQA;eACP;;eAEA;;;IAGfgB,cAAc0E,WAAWO;;;;AAK1B,mBAAmBP,SAAiB1F,KAAU8F;OAC5CpD,MAAMmB,QAAQ7C,cAAc0E;IAC7B1E,cAAc0E;;EAElB1E,cAAc0E,SAASb;IAAO7E,KAAKA;IAAK8F,MAAMA;;;;;;;;;AC3D3C,8BAA8B9F,KAAkBkE;EAClDlE,IAAY2E,SAAST;;;;;;;;;;ICJtBkC,QAAS7G,OAAe6G;MACtBC,WAAWC;KAIX/G,OAAe6G;EACjB7G,OAAOgH,iBAAiB,eAAe;IAClChH,OAAe6G,QAAQA;IACxB3D,QAAQvB,IAAI,eAAgB3B,OAAe6G;;;AAU5C;EACHA;;;AAOG,kBAAqBI;EACxBJ,QAAQI;;;AAGL,qBAA2CC,KAAQC;SAC/C3D,OAAO4D,OAAOF,KAAKC;;;AASvB,wBACHE,KACAC,cACAC;OAGKV,MAAMW,eAAeH;IACtBR,MAAMQ,OAAOC;;QAGXG,eAAkBZ,MAAMQ;QACxBK,SAAS,UAAUtD;IACrByC,MAAMQ,OAAOjD;;QAGXuD,aAAa,UAAUvD;IACzBsD,OAAOtD;IACPwD,aAAQP,KAAKjD;;UAGTqD,cAAcF,yBAAyBG,SAASC;;;AAOrD,qBAAqBN;MACpBP,KAAK5E,IAAImF;cACCQ;;IAEVf,KAAKgB,IAAIT;WACFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DR,mBAAmBhE;SACf,aAAaC,QAAaC;IAC7BC,OAAOC,eAAeH,QAAQC;MAC1BlB,KAAK;eACM,KAAKR,wBAAc,KAAK6B,UAAU,MAAMH;;MAEnDnB,KAAK,UAAUQ;QACXe,gBAAO,iBAAiB,MAAM,KAAKD;cAE7BE,WAAW,KAAK/B,wBAAc,KAAK6B,UAAU,MAAMH;QACzD,KAAK1B,wBAAc,KAAK6B,UAAU,MAAMH,SAASX;YAC7C,KAAKiB,iBAAiBD,aAAahB;UACnC,KAAKiB,cAAc,YAAYN,MAAMK,UAAUhB;;YAE/CgB,aAAahB,MAAMS,QAAQS;UAC3BC,8BAAc;;;MAGtBC,cAAc;;UAIZ2B,YAAYpC,KACbqC,QAAQ,mBAAmB,SAC3BA,QAAQ,QAAQ,KAChBC;SAGAvC,OAAOzB;MACRyB,OAAOzB,kDAAwCiE;;IAEnDxC,OAAOzB,4CAAkCO,IAAIuD,WAAWpC;QAGpDD,OAAOzB;MACPyB,OAAOzB,yCAA+ByD,KAAKK;;MAE3CrC,OAAOzB;MACPyB,OAAOzB,yCAA+ByD,KAAKK;;;;;;;;;;ACnDvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;kBC5BuB,UAAUoC,MAAcC,aAAkBC,QAAa;MACtEF,KAAK,OAAO;IACZA,OAAOA,KAAKG,OAAO,GAAGH,KAAKhF;;QAGzBoF,OAAOJ,KAAKK,MAAM,KAAKzB,OAAO,AAAC/D,KAAOA,IAAI,OAAO;MACnDyF,SAAS;EACbF,KAAK3C,QAAQ,CAAC8C,KAAKjC;QACXiC,IAAI,OAAO,OAAON,OAAOM,IAAIJ,OAAO,GAAGI,IAAIvF,aAAawF;MACxDF,SAASA,SAASL,OAAOM,IAAIJ,OAAO,GAAGI,IAAIvF;;MAE3CsF,SAASA,YAAYC;;QAErBH,KAAKpF,SAAS,MAAMsD;MACpBgC,SAASA;;;EAKjBA,aAAaA;MAETG;MACAP;IACAO,gBAAgBC;eACLC,KAAKT;UACRA,MAAMS;QACNF,UAAUG,OAAOD,GAAGT,MAAMS;;;IAGlCE,SAASC,UAAUR,UAAUG,UAAUM;;IAEvCF,SAASC,OAAOR;;;;;;;;;;;MC5BlBU,YAAY,cAAc/D;EAC5BjE;WACW;;EAEXiI,OAAO7B,MAAWf;IACdvF,QAAQC,QAAQsF,KAAK,IAAItB,KAAK;MAC1BqC,KAAK8B,UAAU7C,KAAK;;;;yBAIFpB,qBAAU+D;0BAET,UAC3BF,OAAO,IACPK,iBACAC;MAEIC,wBAAWP;WAGJQ,uBAAeH,mBAAmBC;;WAElC;;;;;;;;;2BCzBiB;;;;;;;;ACGzB,0BAA0BG,aAAgCC;MACzDC,QAAQ;EACZF,YAAY9D,QAAQ,CAACiE,SAASC;QACrBJ,YAAYvG,SAAS,KAAK2G,UAAU,KAAMJ,YAAYvG,WAAW;MAClEyG,QAAQ,MAAMC,QAAQD;;UAElBC,QAAQD,UAAUG;QAClBH,QAAQA,QAAQC,QAAQD;;QAExBA,QAAQA,QAAQG,sCAAmBF,QAAQD;;;SAG9CD,WAAWD,YAAYvG,SAAS,MAAM2G;MACvCF,QAAQA,QAAQ;;;SAGjBA;;;;;;;;;8BCnBwB;;;;;;ACG5B,oBAAoBzB;MACnBA,eAAeA,SAAS,YAAYA,KAAK,OAAO;WACzC;;WAEA;;;;;;;;;ACPR,yBAAyBA;SACrBA,KAAK6B,UAAU,GAAG7B,KAAKhF;;;;;;;;;;;;;ACK3B,yBAAyB8G;QACtBC,QAAQD,WAAWzB,MAAM;QACzB2B;EACND,MAAMtE,QAAQ,CAACuC,MAAM2B;QAEbA,UAAUI,MAAM/G,SAAS,KACzBgF,SAAS,MACT8B,WAAWA,WAAW9G,SAAS,OAAO4G;MAGtCI,YAAYzE;QACR0E,aAAaC,wBAAWlC;QACxBmC,UAAUD,wBAAWlC,QAAQoC,kCAAgBpC,QAAQ;QACrDyB,OAAOS,wBAAWlC,QAAQqC,4CAAsBrC;;;;SAIrDgC;;;;;;;;;;;qBCpBe,UAAUlB,OAAO,IAAIwB,eAAerK,OAAO4I,SAASC;OACrEA,SAASwB,iBAAiB,MAAMA,iBAAiB;WAC3C;;MAGPA,aAAa9H,QAAQ,UAAU;IAC/B8H,eAAeA,aAAajC,MAAM,KAAK;;MAGvCmB,UAAU;MACVV,KAAKA,KAAK9F,SAAS,OAAO;IAC1B8F,OAAOA,KAAKe,UAAU,GAAGf,KAAK9F,SAAS;IACvCwG,UAAU;;QAERE,UAAUa,kCAAgBzB;QAC1B0B,cAAcC,oCAAiBf,SAASF;QACxCC,YAAYiB,OAAOF;SAClBf,MAAMkB,KAAKL;;;;;;;ACpBf,oBAAoBM;QACjBC;EAGND,OAAO/E,QAAQ,2BAA2B,CAACiF,IAAIxD,KAAKjD;IAChDwG,KAAKvD,OAAOjD;;SAETwG;;;;;;;;;;ACJJ,sBAAsBtB,aAAgCG;QAEnDK,QAAQL,QAAQrB,MAAM,KAAK,GAAGA,MAAM;QACpChC;IAAc0E;;EACpBhB,MAAMtE,QAAQ,CAACuC,MAAM1B;QACbiD,YAAYjD,MAAMiD,YAAYjD,GAAG6D;MACjC9D,KAAKkD,YAAYjD,GAAG6D,YAAYnC;;QAEhC1B,KAAKiD,YAAYvG,SAAS;MAC1BqD,KAAK0E,OAAOxF,KAAKyC;;;EAGzB3B,KAAK2E,SAASC,wBAAWvB;SAClBrD;;;;;;;;;;;yBCbmB,UAAUyC,MAAcwB,eAAerK,OAAO4I,SAASC;QAC3EY,UAAUa,kCAAgBzB;SACzBoC,4BAAaxB,SAASY;;;;;;;;;;;;;;;;;MCM3Ba,oBAAoB;AACnB,4BAA4BzK,KAAUkE;EACzCwG,iBAAUD,mBAAmBzK,KAAKkE;;;AAG/B,8BAA8BlE;EACjC0K,mBAAYD,mBAAmBzK;;;AAG5B;EACH0K,eAAQD;;;MAONE,uBAAuB;AACtB,qCAAqC3K,KAAUkE;EAClDwG,iBAAUC,sBAAsB3K,KAAKkE;;;AAGlC,uCAAuClE;EAC1C0K,mBAAYC,sBAAsB3K;;;AAG/B;EACH0K,eAAQC;;;;MAINC,gBAAgB;aACPxK,QAAQ,MAAOC;IACtBuI;IACAiC;IAEA7E,WAAW;UACH7B,SAAS;eACJyB,IAAI,GAAGA,IAAIgD,6BAAqBtG,QAAQsD;cACvCpD,UAAUpC,QAAQC,QAAQuI,6BAAqBhD;YACjDpD,MAAM;UACN2B,SAAS3B;;;MAGjBnC,QAAQ8D;OACT;;;4BAKsB,UAAU2G;EACvClC,6BAAqB/D,KAAKiG;;AAOvB;MACCC,UAAUxL,OAAO4I,SAASC;MAC1B4C,cAAc;QAEZC,aAAa;SACVD;MACDJ,gBAAgBvG,KAAK,AAACF;YACdA;UACA4G,UAAUxL,OAAO4I,SAASC;UAC1BsC,eAAQD;;UAERO,cAAc;UACdzL,OAAO4I,SAASC,OAAO2C;;;;MAI/BC,cAAc;;;EAItBzL,OAAOgH,iBAAiB,cAAc0E;QAGhCC;IACFC,aAAa;MACT5L,OAAO6L,oBAAoB,eAAeF;MAC1C3L,OAAO6L,oBAAoB,cAAcH;;;EAIjD1L,OAAOgH,iBAAiB,eAAe2E;;;;;;;;;;;;;wBC1F5B,gCAAcG;;;SACjBC,SAAS;;EAEjB5G;IACI6G,qCAA4B,MAAM;MAC9B9I,QAAQvB,IAAI,0BAA0B,KAAKsK;MAC3CD,+BACQnL,QAAQ,AAACC;YACL,KAAKiL;UACLG,MAAM;UACNpL,QAAQ;;UAERA,QAAQ;;QAEZoC,QAAQvB,IAAI;;;;EAK5B4D;IACIyG,uCAA8B;;EAGlCG;IACI,KAAKJ,SAAS,KAAKA,SAAS,QAAQ;;EAGjChL;WACIiE;;;;sKAIwC,KAAKmH,oBAAoB,KAAKJ;;;;;uCAjCpFZ,qBAAc;;;;;;;;;;;wBCJA,gCAAcW;EAClB/K;WACIiE;;;uCAHdmG,qBAAc;;;;;;;;;;;;ICCXiB,WAAW;AACR;SACIA;;;AAGJ;EACHA,WAAW;EACXC,cAAQ;;;wBAIG,gCAAcP;EAClBQ;IACHF,WAAWA,WAAW,QAAQ;IAC9BC,cAAQ;;EAGLtL;WACIiE;;;;;oPAKc,KAAKsH;;wSAEZC,mBAAmB,WAAW;;;;;;uCAfnDpB,qBAAc;;;;;;;;;;ACZfa;;EAGIQ;IACIzE,MAAM;IACN0E,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,MAAM5H;IACN6H,OAAO;;EAEXC;IACI/E,MAAM;IACN0E,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,MAAM5H;IACN6H,OAAO;;EAEXE;IACIhF,MAAM;IACN0E,MAAM;IACNC,OAAO;IACPC,MAAM;IACNC,MAAM5H;IACN6H,OAAO;;EAEXG;IACIjF,MAAM;IACN0E,MAAM;IACNC,OAAO;IACPG,OAAO;;EAEXI;IACIlF,MAAM;IACN0E,MAAM;IACNC,OAAO;IACPG,OAAO;IACPK;MACIC;QACIpF,MAAM;QACN0E,MAAM;QACNC,OAAO;QACPG,OAAO;;MAEXO;QACIrF,MAAM;QACN0E,MAAM;QACNC,OAAO;QACPG,OAAO;;MAEXQ;QACItF,MAAM;QACN0E,MAAM;QACNC,OAAO;QACPG,OAAO;;;;;AAMhB,cAAcS;MACbA,WAAW;WACJ9J,OAAOsD,KAAKuC,sBAAcpH,IAAI,AAACoF,OAAQgC,qBAAahC;;UAErDkG,cAAclE,qBAAa4D,MAAMC;WAChC1J,OAAOsD,KAAKyG,aAAatL,IAAI,AAACoF,OAAQkG,YAAYlG;;;;AAI1D,cAAcmG;SACVA;;;;;;;;;;;;;;wBCnEI,gCAAc1B;;;SACb2B,OAAO;;EAEnBtI;SACSuI;MACDrB,cAAQ;;;EAITtL;WACIiE;;;mBATVmG;uCAFJA,qBAAc;;;;;;;;;;;;;MCATwC,aAAaC,4BAAaX,MAAMC;wBAGvB,gCAAcpB;EACzB3G;IACI6G,4BAAmB,MAAM;MACrB,KAAKjL;;;EAGbwE;IACIyG,8BAAqB;;EAGlBjL;WACIiE;;oGAEG4I,oBAAK,OAAO3L,IAAI,AAAC4L;UACXA,MAAMhB;eACC7H;;kKAEmD6I,MAAMpB;uNACjDoB,MAAMnB;;;;;eAKd;;;;;4CAKjBV,yBACE2B,WAAWR,QAAQpF,MACnB,mDACA/C;+MAEFgH,yBACE2B,WAAWP,YAAYrF,MACvB,mDACA/C;8XAEFgH,yBACE2B,WAAWN,UAAUtF,MACrB,mDACA/C;;;;uCA1CfmG,qBAAc;;;;;;;;;;;;;;;wBCCA,gCAAcW;EACzB3G;IACI6G,4BAAmB,MAAM;MACrB,KAAKjL;;;EAGbwE;IACIyG,8BAAqB;;EAGlBjL;WACIiE;;8FAEG4I,oBAAK,QAAQ3L,IAAI,AAAC4L;UACZA,MAAMhB;eACC7H;;kKAEmD6I,MAAMpB;uNACjDoB,MAAMnB;;;;;aAKlB;;;;;;qMAMM;UACDgB;QACAA;;QAEA1B,iBAAQ;UAAYjE,MAAM;;;;;yDAIhC2F,2BAAmB,WAAW;;;;;;8PAM1CI,yBACEF,4BAAapB,KAAKzE,MAClB6F,4BAAapB,KAAKG,MAClBiB,4BAAapB,KAAKI;4ZAEpBkB,yBACEF,4BAAad,SAAS/E,MACtB6F,4BAAad,SAASH,MACtBiB,4BAAad,SAASF;skBAExBkB,yBACEF,4BAAab,MAAMhF,MACnB6F,4BAAab,MAAMJ,MACnBiB,4BAAab,MAAMH;;;uyBAIrBkB,yBACE,YACA,mDACA9I;;;;uCAhEfmG,qBAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICLX4C,SAASC;EAETD,SAASC,KAAKC,YAAY;EAC1BxH,WAAW;IACPsH,SAASC,KAAKC,YAAY;KAC3B;;AAGPC,6CAAcA,8CAAeC;;;;;;;;;;;;ACJ7BhD","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\r\nexport default function (payload: HMRPayload, helper: HMRHelper) {\r\n    const { updates } = payload;\r\n\r\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\r\n\r\n    if (helper.isStylesheeetUpdate) {\r\n        helper.flushModules(updates);\r\n\r\n        helper.updateModules();\r\n\r\n        helper.callModules(updates);\r\n    } else {\r\n        helper.flushAll();\r\n        helper.updateModules();\r\n\r\n        helper.callEntries();\r\n    }\r\n}\r\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\nimport { logger } from './logger';\n\n/**\n * @customElement- decorator\n *\n */\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\n    return function reg(elementClass: any) {\n        const observedAttributes = elementClass.observedAttributes;\n        Object.defineProperty(elementClass, 'observedAttributes', {\n            set: function (value) {\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\n                return true;\n            },\n            get: function () {\n                return elementClass.prototype[getObservedAttributesSymbol()];\n            },\n            configurable: true\n        });\n\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\n                observedAttributes\n            );\n        }\n        // if @attribute is not used we just use the standard if any\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = observedAttributes;\n        }\n\n        const Base: any = class extends elementClass {\n            constructor() {\n                super();\n                logger('constructor', this, super.tagName);\n            }\n\n            renderCalled() {\n                if (super.renderCalled) {\n                    super.renderCalled.call(this);\n                }\n            }\n\n            render(...result: any[]) {\n                if (super.render) {\n                    logger('render', this, super.tagName);\n                    const template = super.render.call(this, ...result);\n                    Promise.resolve(template).then((templates) => {\n                        render(templates, this as any, { eventContext: this as any });\n                        if (super.updated) {\n                            //delay so it actually get a chance to update\n                            requestAnimationFrame(() => {\n                                super.updated();\n                            });\n                        }\n                    });\n                }\n                this.renderCalled();\n            }\n            connectedCallback() {\n                logger('connectedCallback', this, super.tagName);\n                if (super.connectedCallback) {\n                    super.connectedCallback.call(this);\n                }\n                this.render(this);\n            }\n\n            register(call: Function) {\n                if (this.callers) {\n                    this.callers.push(call);\n                } else {\n                    this.callers = [];\n                    this.callers.push(call);\n                }\n            }\n\n            disconnectedCallback() {\n                logger('disconnectedCallback', this, super.tagName);\n                if (this.callers) {\n                    this.callers.forEach((call: Function) => call());\n                }\n                this.callers = [];\n                if (super.disconnectedCallback) {\n                    super.disconnectedCallback.call(this);\n                }\n            }\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n                logger('attributeChangedCallback', this, super.tagName);\n                //get map\n\n                if (!this[getObservedAttributesMapSymbol()]) {\n                    const attribute = name\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\n                        .replace(/\\s+/g, '-')\n                        .toLowerCase();\n                    this[getObservedAttributesMapSymbol()] = new Map();\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\n                }\n\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\n                this[nameProp] = newValue || '';\n                // if normal attributeChanged is set\n                if (super.attributeChangedCallback) {\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\n                }\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\n                if (super.valuesChanged) {\n                    super.valuesChanged('attribute', name, oldValue, newValue);\n                }\n            }\n        };\n        if (!customElements.get(elementName)) {\n            if (extended) {\n                customElements.define(elementName, Base, extended);\n            } else {\n                customElements.define(elementName, Base);\n            }\n        } else {\n            if ((globalThis as any).hmrCache) {\n                if (extended) {\n                    customElements.define(elementName, Base, extended);\n                } else {\n                    customElements.define(elementName, Base);\n                }\n            }\n        }\n    };\n}\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { publish } from '.';\n\nlet state = (window as any).state || {};\nconst keys = new Set();\ntype valueSetter<T> = (value: T) => void;\n\n// helper for fusebox hmr event\nif (!(window as any).state) {\n    window.addEventListener('HMR-FUSEBOX', () => {\n        (window as any).state = state;\n        console.log('HMR-FUSEBOX', (window as any).state);\n    });\n}\n\nexport type stateResult<T> = [T, valueSetter<T>];\n\n/**\n * Get current glabal state\n * great for saving state for next time user opens website\n */\nexport function getState() {\n    state;\n}\n\n/**\n * overide current state\n * great for restoring state time user opens website\n */\nexport function setState<T>(newState: T) {\n    state = newState;\n}\n\nexport function assignState<T, K extends keyof T>(obj: T, part: Pick<T, K>) {\n    return Object.assign(obj, part);\n}\n\n/**\n * simple state container\n * @param key key used in state container and event\n * @param defaultValue default state value\n * @param customPublishedTrigger if you do not want it to publish update event\n */\nexport function stateContainer<T>(\n    key: string,\n    defaultValue: T,\n    customPublishedTrigger?: boolean\n): stateResult<T> {\n    //set default value if not set\n    if (!state.hasOwnProperty(key)) {\n        state[key] = defaultValue;\n    }\n\n    const currentState: T = state[key];\n    const setter = function (value: T) {\n        state[key] = value;\n    };\n\n    const middleware = function (value: any) {\n        setter(value);\n        publish(key, value);\n    };\n\n    return [currentState, customPublishedTrigger ? setter : middleware];\n}\n\n/**\n * simple warning if you reuse a key by accident\n * @param key\n */\nexport function validateKey(key: string) {\n    if (keys.has(key)) {\n        throw new Error(`state key used allready, use another name`);\n    } else {\n        keys.add(key);\n        return key;\n    }\n}\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import 'tslib';\nexport { attribute } from './attribute';\nexport { prop } from './prop';\nexport { enableInternalLogger, disableInternalLogger } from './logger';\nexport { property } from './property';\nexport { customElement } from './customElement';\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\nexport { validateKey, stateContainer, stateResult, assignState } from './state';\nexport { requestRender } from './requestRender';\nexport { disconnectedCallback } from './disconnectedCallback';\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","import { TemplateResult, directive, Directive } from 'lit-html';\r\nimport { routeMatch } from './routeMatch';\r\n\r\nconst AsyncTask = class extends Directive {\r\n    render() {\r\n        return '';\r\n    }\r\n    update(part: any, args: any) {\r\n        Promise.resolve(args[0]).then(() => {\r\n            part._setValue(args[1]);\r\n        });\r\n    }\r\n};\r\nexport const resolvePromise = directive(AsyncTask);\r\n\r\nexport const routeMatchAsync = function (\r\n    hash = '',\r\n    importStatement: () => Promise<any>,\r\n    htmlTemplate: TemplateResult\r\n) {\r\n    if (routeMatch(hash)) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        //@ts-ignore\r\n        return resolvePromise(importStatement(), htmlTemplate);\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n","export const PATH_SLASH_REGEX = '\\\\/';\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function getVariableName(path: string) {\r\n    return path.substring(1, path.length);\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { createRouteRegex } from './createRouteRegex';\r\n\r\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\r\n    if (!hash && (locationhash === '' || locationhash === '#')) {\r\n        return true;\r\n    }\r\n\r\n    if (locationhash.indexOf('?') !== -1) {\r\n        locationhash = locationhash.split('?')[0];\r\n    }\r\n\r\n    let openEnd = false;\r\n    if (hash[hash.length - 1] === '*') {\r\n        hash = hash.substring(0, hash.length - 1);\r\n        openEnd = true;\r\n    }\r\n    const pattern = parseUrlPattern(hash);\r\n    const regexString = createRouteRegex(pattern, openEnd);\r\n    const regex = new RegExp(regexString);\r\n    return regex.test(locationhash);\r\n};\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport {\r\n    subscribeCanDeactivateEvent,\r\n    unSubscribeCanDeactivateEvent,\r\n    stopCanDeactivate\r\n} from '@simple-html/router';\r\n\r\n@customElement('settings-route')\r\nexport default class extends HTMLElement {\r\n    private locked = false;\r\n\r\n    connectedCallback() {\r\n        subscribeCanDeactivateEvent(this, function () {\r\n            console.log('trigger settings event', this.counter);\r\n            stopCanDeactivate(\r\n                new Promise((resolve) => {\r\n                    if (this.locked) {\r\n                        alert('sorry');\r\n                        resolve(false);\r\n                    } else {\r\n                        resolve(true);\r\n                    }\r\n                    console.log('stopevent');\r\n                })\r\n            );\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeCanDeactivateEvent(this);\r\n    }\r\n\r\n    clicker() {\r\n        this.locked = this.locked ? false : true;\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <section>\r\n                <h1>Settings</h1>\r\n                <br />\r\n                Locked:<input type=\"checkbox\" @click=${this.clicker} .checked=${this.locked} />\r\n            </section>\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\n\r\n@customElement('home-route')\r\nexport default class extends HTMLElement {\r\n    public render() {\r\n        return html` <section><h1>home</h1></section> `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\nimport { customElement } from '@simple-html/core';\nimport { gotoURL } from '@simple-html/router/src';\n\nlet loggedin = false;\nexport function isAuthenticted() {\n    return loggedin;\n}\n\nexport function logout() {\n    loggedin = false;\n    gotoURL(''); // goto home is a good place\n}\n\n@customElement('login-route')\nexport default class extends HTMLElement {\n    public click() {\n        loggedin = loggedin ? false : true;\n        gotoURL('#child/protected'); //or somewhere else..\n    }\n\n    public render() {\n        return html`\n            <section>\n                <h1>Auth component</h1>\n                <button\n                    class=\"m-3 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                    @click=${this.click}\n                >\n                    ${isAuthenticted() ? 'logout' : 'login'}\n                </button>\n            </section>\n        `;\n    }\n}\n","import { init } from '@simple-html/router';\nimport { html } from 'lit-html';\ninit();\n\nexport const routerConfig = {\n    home: {\n        path: '',\n        href: '#',\n        title: 'Home',\n        load: () => import('./home'),\n        html: html` <home-route></home-route> `,\n        isNav: true\n    },\n    settings: {\n        path: '#settings',\n        href: '#settings',\n        title: 'Settings',\n        load: () => import('./settings'),\n        html: html` <settings-route></settings-route> `,\n        isNav: true\n    },\n    login: {\n        path: '#login',\n        href: '#login',\n        title: 'Auth',\n        load: () => import('./login'),\n        html: html` <login-route></login-route>`,\n        isNav: false\n    },\n    unknown: {\n        path: 'unknown',\n        href: 'unknown',\n        title: 'Unknown',\n        isNav: false\n    },\n    child: {\n        path: '#child/*',\n        href: '#child/',\n        title: 'ChildRoute',\n        isNav: true,\n        children: {\n            subHome: {\n                path: '#child/',\n                href: '#child/',\n                title: 'SubHome',\n                isNav: true\n            },\n            subSettings: {\n                path: '#child/settings',\n                href: '#child/settings',\n                title: 'Sub Settings',\n                isNav: true\n            },\n            protected: {\n                path: '#child/protected',\n                href: '#child/protected',\n                title: 'sub Protected',\n                isNav: true\n            }\n        }\n    }\n};\n\nexport function navs(router: 'sub' | 'main') {\n    if (router === 'main') {\n        return Object.keys(routerConfig).map((key) => routerConfig[key]);\n    } else {\n        const childRoutes = routerConfig.child.children;\n        return Object.keys(childRoutes).map((key) => childRoutes[key]);\n    }\n}\n\nexport function href(param: string) {\n    return param;\n}\n","import { html } from 'lit-html';\nimport { customElement, property } from '@simple-html/core';\nimport { isAuthenticted } from './login';\nimport { gotoURL } from '@simple-html/router/src';\n\n@customElement('protected-route')\nexport default class extends HTMLElement {\n    @property() cool = 1;\n\n    connectedCallback() {\n        if (!isAuthenticted()) {\n            gotoURL('#login');\n        }\n    }\n\n    public render() {\n        return html` <section><h1>Welcome to the inner circle :-)</h1></section> `;\n    }\n}\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport { navs, routerConfig } from './routerConfig';\r\nimport { routeMatchAsync, subscribeHashEvent, unSubscribeHashEvent } from '@simple-html/router';\r\n\r\nconst childRoute = routerConfig.child.children;\r\n\r\n@customElement('childrouter-route')\r\nexport default class extends HTMLElement {\r\n    connectedCallback() {\r\n        subscribeHashEvent(this, () => {\r\n            this.render();\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeHashEvent(this);\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <ul class=\"ani flex bg-indigo-500 p-6\">\r\n                ${navs('sub').map((route) => {\r\n                    if (route.isNav) {\r\n                        return html`\r\n                            <li class=\"mr-6\">\r\n                                <a class=\"text-teal-200 hover:text-white\" href=\"${route.href}\"\r\n                                    >${route.title}</a\r\n                                >\r\n                            </li>\r\n                        `;\r\n                    } else {\r\n                        return '';\r\n                    }\r\n                })}\r\n            </ul>\r\n\r\n            ${routeMatchAsync(\r\n                childRoute.subHome.path,\r\n                () => import('./home'),\r\n                html` <home-route></home-route> `\r\n            )}\r\n            ${routeMatchAsync(\r\n                childRoute.subSettings.path,\r\n                () => import('./settings'),\r\n                html` <settings-route></settings-route> `\r\n            )}\r\n            ${routeMatchAsync(\r\n                childRoute.protected.path,\r\n                () => import('./protected'),\r\n                html` <protected-route></protected-route> `\r\n            )}\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport { navs, routerConfig } from './routes/routerConfig';\r\nimport { subscribeHashEvent, unSubscribeHashEvent, gotoURL } from '@simple-html/router';\r\nimport { routeMatchAsync } from '@simple-html/router';\r\nimport { isAuthenticted, logout } from './routes/login';\r\n\r\n@customElement('app-root')\r\nexport default class extends HTMLElement {\r\n    connectedCallback() {\r\n        subscribeHashEvent(this, () => {\r\n            this.render();\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeHashEvent(this);\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <ul class=\"flex bg-teal-500 p-6\">\r\n                ${navs('main').map((route: any) => {\r\n                    if (route.isNav) {\r\n                        return html`\r\n                            <li class=\"mr-6\">\r\n                                <a class=\"text-teal-200 hover:text-white\" href=\"${route.href}\"\r\n                                    >${route.title}</a\r\n                                >\r\n                            </li>\r\n                        `;\r\n                    }\r\n                    return '';\r\n                })}\r\n\r\n                <li style=\"margin-left: auto;\" class=\"mr-6\">\r\n                    <span\r\n                        class=\"text-teal-200 hover:text-white\"\r\n                        @click=${() => {\r\n                            if (isAuthenticted()) {\r\n                                logout();\r\n                            } else {\r\n                                gotoURL('#:path', { path: 'login' });\r\n                            }\r\n                        }}\r\n                    >\r\n                        ${isAuthenticted() ? 'Logout' : 'Login'}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n\r\n            <!--  if you want you could show more then 1 -->\r\n            ${routeMatchAsync(\r\n                routerConfig.home.path,\r\n                routerConfig.home.load,\r\n                routerConfig.home.html\r\n            )}\r\n            ${routeMatchAsync(\r\n                routerConfig.settings.path,\r\n                routerConfig.settings.load,\r\n                routerConfig.settings.html\r\n            )}\r\n            ${routeMatchAsync(\r\n                routerConfig.login.path,\r\n                routerConfig.login.load,\r\n                routerConfig.login.html\r\n            )}\r\n\r\n            <!--  if you want you could show more then 1 -->\r\n            ${routeMatchAsync(\r\n                '#child/*' /**use * in the end since there will be sub modules  */,\r\n                () => import('./routes/childrouter'),\r\n                html` <childrouter-route></childrouter-route> `\r\n            )}\r\n        `;\r\n    }\r\n}\r\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\r\n\r\nif (document.body) {\r\n    // I just want every thing to be rebuild from main element during hmr\r\n    document.body.innerHTML = '';\r\n    setTimeout(() => {\r\n        document.body.innerHTML = '<app-root></app-root>';\r\n    }, 0);\r\n}\r\n\r\napplyPolyfill(ReflowStrategy.NONE);\r\n","import './hmr';\nimport './index.css';\nimport './routes/routerConfig';\nimport './app-root';\n\nimport { enableInternalLogger } from '@simple-html/core';\nenableInternalLogger();\n"]}