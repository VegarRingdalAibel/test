{"version":3,"sources":["samples/splitter/fuseHmrPlugin.ts","packages/core/src/symbols.ts","packages/core/src/logger.ts","packages/core/src/customElement.ts","packages/core/src/requestRender.ts","packages/core/src/attribute.ts","packages/core/src/property.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/disconnectedCallback.ts","packages/core/src/prop.ts","packages/core/src/index.ts","packages/router/src/gotoURL.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/createRouteRegex.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/getVariableName.ts","packages/router/src/isVariable.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/getUrlVars.ts","packages/router/src/getVariables.ts","packages/router/src/getRouteParams.ts","packages/router/src/index.ts","samples/splitter/elements/app-root.ts","samples/splitter/elements/sample-default.ts","samples/splitter/elements/sample-no1.ts","samples/splitter/elements/sample-no2.ts","samples/splitter/elements/sample-no3.ts","samples/splitter/elements/sample-no4.ts","packages/splitter/src/simple-split-horz.ts","packages/splitter/src/simple-split-vert.ts","packages/splitter/src/index.ts","samples/splitter/hmr.ts","samples/splitter/index.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","log","skipElements","symbols_1","WeakMap","skip","context","map","has","count","set","ctx","get","tag","indexOf","id","getID","registerLoggerContext","text","x","Math","floor","length","idOnly","y","console","Array","join","isConnected","elementName","extended","elementClass","Object","defineProperty","value","prototype","configurable","isArray","concat","Base","constructor","logger_1","tagName","renderCalled","call","render","result","template","Promise","resolve","then","templates","lit_html_1","eventContext","updated","requestAnimationFrame","connectedCallback","register","callers","push","disconnectedCallback","forEach","attributeChangedCallback","oldValue","newValue","attribute","replace","toLowerCase","Map","nameProp","valuesChanged","customElements","define","hmrCache","__wait","options","_class","prop","skipRender","requestRender_1","channel","args","i","len","func","apply","setTimeout","events","filter","event","state","keys","Set","addEventListener","newState","obj","part","assign","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","path","params","query","substr","urls","split","newUrl","val","undefined","urlparams","URLSearchParams","k","append","location","hash","toString","pathPattern","openEnd","regex","pattern","index","PATH_SLASH_REGEX_1","substring","urlPattern","paths","pathsConfig","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","locationhash","parseUrlPattern_1","regexString","createRouteRegex_1","RegExp","test","promise","htmlTemplate","setValue","commit","importStatement","routeMatch_1","exports","string","vars","_m","_paths","_query","getUrlVars_1","getVariables_1","HASH_RENDER_EVENT","core_1","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","oldhash","isBackEvent","hashChange","cleanUp","handleEvent","removeEventListener","HTMLElement","elements","element","router_1","formState","active","stateName","style","width","height","display","first","children","node","toUpperCase","previousElementWidth","procent","mainWidth","nextElementWidth","cursor","refEle","nextElement","previousElement","e","preventDefault","type","mousedown","mousemove","mouseup","_state","setState","target","parentNode","clientWidth","nextElementSibling","previousElementSibling","screenX","screenY","change","abs","flexDirection","previousElementHeight","mainHeight","nextElementHeight","stopPropagation","clientHeight","document","body","innerHTML","custom_elements_hmr_polyfill_1","NONE"],"mappings":"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","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\n\nexport default function (payload: HMRPayload, helper: HMRHelper) {\n    const { updates } = payload;\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\n\n    if (helper.isStylesheeetUpdate) {\n        helper.flushModules(updates);\n\n        helper.updateModules();\n\n        helper.callModules(updates);\n    } else {\n        helper.flushAll();\n        helper.updateModules();\n\n        helper.callEntries();\n    }\n}\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","import { render } from 'lit-html';\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\nimport { logger } from './logger';\n\n/**\n * @customElement- decorator\n *\n */\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\n    return function reg(elementClass: any) {\n        const observedAttributes = elementClass.observedAttributes;\n        Object.defineProperty(elementClass, 'observedAttributes', {\n            set: function (value) {\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\n                return true;\n            },\n            get: function () {\n                return elementClass.prototype[getObservedAttributesSymbol()];\n            },\n            configurable: true\n        });\n\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\n                observedAttributes\n            );\n        }\n        // if @attribute is not used we just use the standard if any\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = observedAttributes;\n        }\n\n        const Base: any = class extends elementClass {\n            constructor() {\n                super();\n                logger('constructor', this, super.tagName);\n            }\n\n            renderCalled() {\n                if (super.renderCalled) {\n                    super.renderCalled.call(this);\n                }\n            }\n\n            render(...result: any[]) {\n                if (super.render) {\n                    logger('render', this, super.tagName);\n                    const template = super.render.call(this, ...result);\n                    Promise.resolve(template).then((templates) => {\n                        render(templates, this as any, { eventContext: this as any });\n                        if (super.updated) {\n                            //delay so it actually get a chance to update\n                            requestAnimationFrame(() => {\n                                super.updated();\n                            });\n                        }\n                    });\n                }\n                this.renderCalled();\n            }\n            connectedCallback() {\n                logger('connectedCallback', this, super.tagName);\n                if (super.connectedCallback) {\n                    super.connectedCallback.call(this);\n                }\n                this.render(this);\n            }\n\n            register(call: Function) {\n                if (this.callers) {\n                    this.callers.push(call);\n                } else {\n                    this.callers = [];\n                    this.callers.push(call);\n                }\n            }\n\n            disconnectedCallback() {\n                logger('disconnectedCallback', this, super.tagName);\n                if (this.callers) {\n                    this.callers.forEach((call: Function) => call());\n                }\n                this.callers = [];\n                if (super.disconnectedCallback) {\n                    super.disconnectedCallback.call(this);\n                }\n            }\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n                logger('attributeChangedCallback', this, super.tagName);\n                //get map\n\n                if (!this[getObservedAttributesMapSymbol()]) {\n                    const attribute = name\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\n                        .replace(/\\s+/g, '-')\n                        .toLowerCase();\n                    this[getObservedAttributesMapSymbol()] = new Map();\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\n                }\n\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\n                this[nameProp] = newValue || '';\n                // if normal attributeChanged is set\n                if (super.attributeChangedCallback) {\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\n                }\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\n                if (super.valuesChanged) {\n                    super.valuesChanged('attribute', name, oldValue, newValue);\n                }\n            }\n        };\n        if (!customElements.get(elementName)) {\n            if (extended) {\n                customElements.define(elementName, Base, extended);\n            } else {\n                customElements.define(elementName, Base);\n            }\n        } else {\n            if ((globalThis as any).hmrCache) {\n                if (extended) {\n                    customElements.define(elementName, Base, extended);\n                } else {\n                    customElements.define(elementName, Base);\n                }\n            }\n        }\n    };\n}\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\n\nlet state = (window as any).state || {};\nconst keys = new Set();\ntype valueSetter<T> = (value: T) => void;\n\n// helper for fusebox hmr event\nif (!(window as any).state) {\n    window.addEventListener('HMR-FUSEBOX', () => {\n        (window as any).state = state;\n        console.log('HMR-FUSEBOX', (window as any).state);\n    });\n}\n\nexport type stateResult<T> = [T, valueSetter<T>];\n\n/**\n * Get current glabal state\n * great for saving state for next time user opens website\n */\nexport function getState() {\n    state;\n}\n\n/**\n * overide current state\n * great for restoring state time user opens website\n */\nexport function setState<T>(newState: T) {\n    state = newState;\n}\n\nexport function assignState<T, K extends keyof T>(obj: T, part: Pick<T, K>) {\n    return Object.assign(obj, part);\n}\n\n/**\n * simple state container\n * @param key key used in state container and event\n * @param defaultValue default state value\n * @param customPublishedTrigger if you do not want it to publish update event\n */\nexport function stateContainer<T>(\n    key: string,\n    defaultValue: T,\n    customPublishedTrigger?: boolean\n): stateResult<T> {\n    //set default value if not set\n    if (!state.hasOwnProperty(key)) {\n        state[key] = defaultValue;\n    }\n\n    const currentState: T = state[key];\n    const setter = function (value: T) {\n        state[key] = value;\n    };\n\n    const middleware = function (value: any) {\n        setter(value);\n        publish(key, value);\n    };\n\n    return [currentState, customPublishedTrigger ? setter : middleware];\n}\n\n/**\n * simple warning if you reuse a key by accident\n * @param key\n */\nexport function validateKey(key: string) {\n    if (keys.has(key)) {\n        throw new Error(`state key used allready, use another name`);\n    } else {\n        keys.add(key);\n        return key;\n    }\n}\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import 'tslib';\r\nexport { attribute } from './attribute';\r\nexport { prop } from './prop';\r\nexport { enableInternalLogger, disableInternalLogger } from './logger';\r\nexport { property } from './property';\r\nexport { customElement } from './customElement';\r\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\r\nexport { validateKey, stateContainer, stateResult } from './state';\r\nexport { requestRender } from './requestRender';\r\nexport { disconnectedCallback } from './disconnectedCallback';\r\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","export const PATH_SLASH_REGEX = '\\\\/';\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\n","export function getVariableName(path: string) {\r\n    return path.substring(1, path.length);\r\n}\r\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { createRouteRegex } from './createRouteRegex';\r\n\r\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\r\n    if (!hash && (locationhash === '' || locationhash === '#')) {\r\n        return true;\r\n    }\r\n\r\n    if (locationhash.indexOf('?') !== -1) {\r\n        locationhash = locationhash.split('?')[0];\r\n    }\r\n\r\n    let openEnd = false;\r\n    if (hash[hash.length - 1] === '*') {\r\n        hash = hash.substring(0, hash.length - 1);\r\n        openEnd = true;\r\n    }\r\n    const pattern = parseUrlPattern(hash);\r\n    const regexString = createRouteRegex(pattern, openEnd);\r\n    const regex = new RegExp(regexString);\r\n    return regex.test(locationhash);\r\n};\r\n","import { TemplateResult, directive } from 'lit-html';\r\nimport { routeMatch } from './routeMatch';\r\n\r\nexport const resolvePromise = directive(\r\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\r\n        Promise.resolve(promise).then(() => {\r\n            part.setValue(htmlTemplate);\r\n            part.commit();\r\n        });\r\n    }\r\n);\r\n\r\nexport const routeMatchAsync = function (\r\n    hash = '',\r\n    importStatement: () => Promise<any>,\r\n    htmlTemplate: TemplateResult\r\n) {\r\n    if (routeMatch(hash)) {\r\n        return resolvePromise(importStatement(), htmlTemplate);\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { customElement, requestRender } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { routeMatch } from '@simple-html/router';\n\n@customElement('app-root')\nexport default class extends HTMLElement {\n    elements = ['#default', '#sample1', '#sample2', '#sample3', '#sample4'];\n\n    render() {\n        return html`<section class=\"flex flex-row flex-grow h-full\">\n            <!-- our simple navigation  -->\n            <div class=\"bg-gray-200 flex flex-col\">\n                ${this.elements.map((element) => {\n                    return html`<a\n                       class=\"p-2 m-2 bg-indigo-300\"\n                       href=${element}\n                       @click=${() => requestRender(this)}>\n                        ${element}\n                    </button>`;\n                })}\n            </div>\n\n            <!--  our routes -->\n            ${routeMatch('#default')\n                ? html`<sample-default class=\"flex-grow\"></sample-default>`\n                : ''}\n            ${routeMatch('#sample1') ? html`<sample-no1 class=\"flex-grow\"></sample-no1>` : ''}\n            ${routeMatch('#sample2') ? html`<sample-no2 class=\"flex-grow\"></sample-no2>` : ''}\n            ${routeMatch('#sample3') ? html`<sample-no3 class=\"flex-grow\"></sample-no3>` : ''}\n            ${routeMatch('#sample4') ? html`<sample-no4 class=\"flex-grow\"></sample-no4>` : ''}\n        </section>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-default')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample default `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no1')\nexport default class extends HTMLElement {\n    render() {\n        return html`<!-- html-->\n\n            <simple-split-horz .stateName=${'101'} class=\"bg-indigo-500\">\n                <simple-split-part class=\"bg-indigo-200 block flex\">\n                    <div class=\"bg-yellow-200 flex-1\"></div>\n                    <div class=\"bg-yellow-300 flex-1\"></div>\n                    <div class=\"bg-yellow-400 flex-1\"></div>\n                </simple-split-part>\n\n                <simple-split-handle class=\"bg-indigo-300 block\"></simple-split-handle>\n\n                <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                    <div class=\"bg-yellow-200 flex-1\"></div>\n                    <div class=\"bg-yellow-300 flex-1\"></div>\n                    <div class=\"bg-yellow-400 flex-1\"></div>\n                </simple-split-part>\n            </simple-split-horz> `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no2')\nexport default class extends HTMLElement {\n    render() {\n        return html`<!-- html-->\n\n            <simple-split-vert .stateName=${'102'} class=\"bg-indigo-500\">\n                <simple-split-part class=\"bg-indigo-200 block flex\">\n                    <div class=\"bg-yellow-200 flex-1\"></div>\n                    <div class=\"bg-yellow-300 flex-1\"></div>\n                    <div class=\"bg-yellow-400 flex-1\"></div>\n                </simple-split-part>\n\n                <simple-split-handle class=\"bg-indigo-300 block\"></simple-split-handle>\n\n                <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                    <div class=\"bg-yellow-200 flex-1\"></div>\n                    <div class=\"bg-yellow-300 flex-1\"></div>\n                    <div class=\"bg-yellow-400 flex-1\"></div>\n                </simple-split-part>\n            </simple-split-vert> `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no3')\nexport default class extends HTMLElement {\n    render() {\n        return html`<!-- html-->\n\n            <simple-split-vert .stateName=${'01'} class=\"bg-indigo-500\">\n                <simple-split-part class=\"bg-indigo-200 block flex\">\n                    <simple-split-vert .stateName=${'02'} class=\"bg-indigo-500\">\n                        <simple-split-part class=\"bg-indigo-200 block flex\">\n                            <div class=\"bg-yellow-200 flex-1\"></div>\n                            <div class=\"bg-yellow-300 flex-1\"></div>\n                            <div class=\"bg-yellow-400 flex-1\"></div>\n                        </simple-split-part>\n\n                        <simple-split-handle class=\"bg-indigo-300 block\"></simple-split-handle>\n\n                        <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                            <simple-split-horz .stateName=${'03'} class=\"bg-indigo-500\">\n                                <simple-split-part class=\"bg-indigo-200 block flex\">\n                                    <div class=\"bg-yellow-200 flex-1\"></div>\n                                    <div class=\"bg-yellow-300 flex-1\"></div>\n                                    <div class=\"bg-yellow-400 flex-1\"></div>\n                                </simple-split-part>\n\n                                <simple-split-handle\n                                    class=\"bg-indigo-300 block\"\n                                ></simple-split-handle>\n\n                                <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                                    <div class=\"bg-yellow-200 flex-1\"></div>\n                                    <div class=\"bg-yellow-300 flex-1\"></div>\n                                    <div class=\"bg-yellow-400 flex-1\"></div>\n                                </simple-split-part>\n                            </simple-split-horz>\n                        </simple-split-part>\n                    </simple-split-vert>\n                </simple-split-part>\n\n                <simple-split-handle class=\"bg-indigo-300 block\"></simple-split-handle>\n\n                <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                    <simple-split-horz .stateName=${'04'} class=\"bg-indigo-500\">\n                        <simple-split-part class=\"bg-indigo-200 block flex\">\n                            <div class=\"bg-yellow-200 flex-1\"></div>\n                            <div class=\"bg-yellow-300 flex-1\"></div>\n                            <div class=\"bg-yellow-400 flex-1\"></div>\n                        </simple-split-part>\n\n                        <simple-split-handle class=\"bg-indigo-300 block\"></simple-split-handle>\n\n                        <simple-split-part class=\"bg-indigo-400 block flex flex-col\">\n                            <div class=\"bg-yellow-200 flex-1\"></div>\n                            <div class=\"bg-yellow-300 flex-1\"></div>\n                            <div class=\"bg-yellow-400 flex-1\"></div>\n                        </simple-split-part>\n                    </simple-split-horz>\n                </simple-split-part>\n            </simple-split-vert> `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no4')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample04 `;\n    }\n}\n","import { customElement, stateResult, stateContainer } from '@simple-html/core';\n\nexport type state = {\n    active: boolean;\n    mainWidth: number;\n    nextElement: HTMLElement;\n    nextElementWidth: number;\n    previousElement: HTMLElement;\n    previousElementWidth: number;\n    x: number;\n    y: number;\n};\n\n@customElement('simple-split-horz')\nexport default class extends HTMLElement {\n    show: boolean;\n    refEle: HTMLElement;\n    stateName: string;\n\n    formState(defaultValue = { active: false } as state): stateResult<state> {\n        return stateContainer<state>(this.stateName, defaultValue);\n    }\n\n    connectedCallback() {\n        this.style.width = '100%';\n        this.style.height = '100%';\n        this.style.display = 'flex';\n\n        if (!this.stateName) {\n            throw 'name attribute needs to be set \".name=${\"somename\"}';\n        }\n\n        const [state] = this.formState();\n\n        let first = true;\n\n        for (let i = 0; i < this.children.length; i++) {\n            const node = this.children[i];\n\n            if (node && node.tagName === 'simple-split-part'.toUpperCase()) {\n                (node as HTMLElement).style.width = (node as HTMLElement).style.width\n                    ? (node as HTMLElement).style.width\n                    : '50%';\n                (node as HTMLElement).style.height = '100%';\n\n                // reset state if any\n                if (state.previousElementWidth !== undefined && first) {\n                    first = false;\n                    const procent = (state.previousElementWidth * 100) / state.mainWidth;\n                    (node as HTMLElement).style.width = procent + '%';\n                } else {\n                    if (state.nextElementWidth !== undefined && !first) {\n                        const procent = (state.nextElementWidth * 100) / state.mainWidth;\n                        (node as HTMLElement).style.width = procent + '%';\n                    }\n                }\n            }\n\n            if (node && node.tagName === 'simple-split-handle'.toUpperCase()) {\n                (node as HTMLElement).style.height = '100%';\n                (node as HTMLElement).style.width = '5px';\n                (node as HTMLElement).style.cursor = 'grab';\n                this.refEle = node as HTMLElement;\n            }\n        }\n\n        if (!this.refEle) {\n            throw 'simple-split-handle missing';\n        }\n\n        this.refEle.addEventListener('mousedown', this);\n\n        this.addEventListener('mousemove', this);\n    }\n\n    disconnectedCallback() {\n        this.refEle.removeEventListener('mousedown', this);\n        this.removeEventListener('mouseup', this);\n        this.removeEventListener('mousemove', this);\n        const [state] = this.formState();\n        state.nextElement = null;\n        state.previousElement = null;\n        this.refEle = null;\n    }\n\n    handleEvent(e: MouseEvent) {\n        e.preventDefault();\n        if (e.type === 'mousedown') {\n            this.addEventListener('mouseup', this);\n            this.mousedown(e);\n        }\n\n        if (e.type === 'mousemove') {\n            this.mousemove(e);\n        }\n\n        if (e.type === 'mouseup') {\n            this.removeEventListener('mouseup', this);\n            this.mouseup();\n        }\n    }\n\n    mousedown(e: any) {\n        const [_state, setState] = this.formState();\n        const state: state = _state as any;\n        state.active = true;\n        state.mainWidth = e.target.parentNode?.clientWidth;\n        state.nextElement = e.target.nextElementSibling;\n        state.nextElementWidth = e.target.nextElementSibling.clientWidth;\n        state.previousElement = e.target.previousElementSibling;\n        state.previousElementWidth = e.target.previousElementSibling.clientWidth;\n        state.x = e.screenX;\n        state.y = e.screenY;\n        setState(state);\n    }\n\n    mouseup() {\n        const [state, setState] = this.formState();\n        state.active = false;\n        state.previousElementWidth = state.previousElement.clientWidth;\n        state.nextElementWidth = state.nextElement.clientWidth;\n        setState(state);\n    }\n\n    mousemove(e: MouseEvent) {\n        const [state, setState] = this.formState();\n        if (state.active) {\n            const change = Math.abs(state.x - e.screenX);\n            if (state.x < e.screenX) {\n                const procent = ((state.previousElementWidth + change) * 100) / state.mainWidth;\n\n                state.previousElement.style.width = procent + '%';\n                state.nextElement.style.width = 100 - procent + '%';\n            } else {\n                const procent = ((state.previousElementWidth - change) * 100) / state.mainWidth;\n\n                state.previousElement.style.width = procent + '%';\n                state.nextElement.style.width = 100 - procent + '%';\n            }\n            setState(state);\n        }\n    }\n}\n","import { customElement, stateResult, stateContainer } from '@simple-html/core';\n\nexport type state = {\n    active: boolean;\n    mainHeight: number;\n    nextElement: HTMLElement;\n    nextElementHeight: number;\n    previousElement: HTMLElement;\n    previousElementHeight: number;\n    x: number;\n    y: number;\n};\n\n@customElement('simple-split-vert')\nexport default class extends HTMLElement {\n    show: boolean;\n    refEle: HTMLElement;\n    stateName: string;\n\n    formState(defaultValue = { active: false } as state): stateResult<state> {\n        return stateContainer<state>(this.stateName, defaultValue);\n    }\n\n    connectedCallback() {\n        this.style.width = '100%';\n        this.style.height = '100%';\n        this.style.display = 'flex';\n        this.style.flexDirection = 'column';\n\n        if (!this.stateName) {\n            throw 'name attribute needs to be set \".name=${\"somename\"}';\n        }\n\n        const [state] = this.formState();\n\n        let first = true;\n\n        for (let i = 0; i < this.children.length; i++) {\n            const node = this.children[i];\n\n            if (node && node.tagName === 'simple-split-part'.toUpperCase()) {\n                (node as HTMLElement).style.height = (node as HTMLElement).style.height\n                    ? (node as HTMLElement).style.height\n                    : '50%';\n                (node as HTMLElement).style.width = '100%';\n\n                // reset state if any\n\n                if (state.previousElementHeight !== undefined && first) {\n                    first = false;\n                    const procent = (state.previousElementHeight * 100) / state.mainHeight;\n                    (node as HTMLElement).style.height = procent + '%';\n                } else {\n                    if (state.nextElementHeight !== undefined && !first) {\n                        const procent = (state.nextElementHeight * 100) / state.mainHeight;\n                        (node as HTMLElement).style.height = procent + '%';\n                    }\n                }\n            }\n\n            if (node && node.tagName === 'simple-split-handle'.toUpperCase()) {\n                (node as HTMLElement).style.width = '100%';\n                (node as HTMLElement).style.height = '5px';\n                (node as HTMLElement).style.cursor = 'grab';\n                this.refEle = node as HTMLElement;\n            }\n        }\n\n        if (!this.refEle) {\n            throw 'simple-split-handle missing';\n        }\n\n        this.refEle.addEventListener('mousedown', this);\n        this.addEventListener('mousemove', this);\n    }\n\n    disconnectedCallback() {\n        this.refEle.removeEventListener('mousedown', this);\n        this.removeEventListener('mouseup', this);\n        this.removeEventListener('mousemove', this);\n        const [state] = this.formState();\n        state.nextElement = null;\n        state.previousElement = null;\n        this.refEle = null;\n    }\n\n    handleEvent(e: MouseEvent) {\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.type === 'mousedown') {\n            this.addEventListener('mouseup', this);\n            this.mousedown(e);\n        }\n\n        if (e.type === 'mousemove') {\n            this.mousemove(e);\n        }\n\n        if (e.type === 'mouseup') {\n            this.removeEventListener('mouseup', this);\n            this.mouseup();\n        }\n    }\n\n    mousedown(e: any) {\n        const [_state, setState] = this.formState();\n        const state: state = _state as any;\n        state.active = true;\n        state.mainHeight = e.target.parentNode?.clientHeight;\n        state.nextElement = e.target.nextElementSibling;\n        state.nextElementHeight = e.target.nextElementSibling.clientHeight;\n        state.previousElement = e.target.previousElementSibling;\n        state.previousElementHeight = e.target.previousElementSibling.clientHeight;\n        state.x = e.screenX;\n        state.y = e.screenY;\n        setState(state);\n    }\n\n    mouseup() {\n        const [state, setState] = this.formState();\n        state.active = false;\n        state.previousElementHeight = state.previousElement.clientHeight;\n        state.nextElementHeight = state.nextElement.clientHeight;\n        setState(state);\n    }\n\n    mousemove(e: MouseEvent) {\n        const [state, setState] = this.formState();\n        if (state.active) {\n            const change = Math.abs(state.y - e.screenY);\n            if (state.y < e.screenY) {\n                const procent = ((state.previousElementHeight + change) * 100) / state.mainHeight;\n\n                state.previousElement.style.height = procent + '%';\n                state.nextElement.style.height = 100 - procent + '%';\n            } else {\n                const procent = ((state.previousElementHeight - change) * 100) / state.mainHeight;\n\n                state.previousElement.style.height = procent + '%';\n                state.nextElement.style.height = 100 - procent + '%';\n            }\n            setState(state);\n        }\n    }\n}\n","import './simple-split-horz';\nimport './simple-split-vert';\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\n\nif (document.body) {\n    // I just want every thing to be rebuild from main element during hmr\n    document.body.innerHTML = '';\n    setTimeout(() => {\n        document.body.innerHTML = '<app-root></app-root>';\n    }, 0);\n}\n\napplyPolyfill(ReflowStrategy.NONE);\n","import './hmr';\nimport './index.css';\n\nimport { enableInternalLogger } from '@simple-html/core';\nenableInternalLogger();\n\n// add our sample parts\nimport './elements/app-root';\nimport './elements/sample-default';\nimport './elements/sample-no1';\nimport './elements/sample-no2';\nimport './elements/sample-no3';\nimport './elements/sample-no4';\n\n// add our your widget ?\nimport '@simple-html/splitter';\n"]}