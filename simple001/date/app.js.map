{"version":3,"sources":["samples/date/index.ts","samples/date/fuseHmrPlugin.ts","samples/date/hmr.ts","packages/core/src/index.ts","samples/date/elements/app-root.ts","samples/date/elements/sample-default.ts","samples/date/elements/sample-no1.ts","samples/date/elements/sample-no2.ts","samples/date/elements/sample-no3.ts","samples/date/elements/sample-no4.ts","packages/date/src/index.ts","packages/core/src/attribute.ts","packages/core/src/prop.ts","packages/core/src/logger.ts","packages/core/src/property.ts","packages/core/src/customElement.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/requestRender.ts","packages/core/src/disconnectedCallback.ts","packages/router/src/index.ts","packages/date/src/simple-html-date.ts","packages/core/src/symbols.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/gotoURL.ts","packages/router/src/getRouteParams.ts","packages/date/src/templates/month.ts","packages/date/src/templates/header.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/createRouteRegex.ts","packages/router/src/getVariables.ts","packages/date/src/templates/monthHeader.ts","packages/date/src/templates/headerRow.ts","packages/date/src/templates/dayRow.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/getVariableName.ts","packages/router/src/isVariable.ts","packages/router/src/getUrlVars.ts","packages/date/src/templates/weekHeader.ts","packages/date/src/templates/dayHeader.ts","packages/date/src/templates/day.ts","packages/date/src/templates/week.ts","packages/date/src/utils/getWeekNumber.ts"],"names":["core_1","payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","document","body","innerHTML","setTimeout","custom_elements_hmr_polyfill_1","NONE","HTMLElement","elements","render","lit_html_1","map","element","router_1","dateconfig","monthsToShow","monthColumns","startMonth","startYear","showWeek","isoWeek","weekHeader","monthHeader","weekStart","rowHeight","monthWidth","monthMargin","hideDimmedDates","style","display","Object","assign","e","target","valueAsNumber","parseInt","m","i","console","log","value","checked","options","_class","prop","defineProperty","get","symbols_1","tagName","set","x","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","configurable","attribute","replace","toLowerCase","Map","push","skipElements","globalThis","WeakMap","skip","context","has","count","ctx","name","tag","indexOf","id","getID","registerLoggerContext","text","Math","floor","length","idOnly","y","Array","join","isConnected","elementName","extended","elementClass","observedAttributes","prototype","isArray","concat","Base","constructor","renderCalled","call","result","template","Promise","resolve","then","templates","eventContext","updated","requestAnimationFrame","connectedCallback","register","callers","disconnectedCallback","forEach","attributeChangedCallback","newValue","nameProp","customElements","define","hmrCache","channel","args","transmitter","len","func","apply","events","filter","event","state","keys","Set","addEventListener","newState","obj","part","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","__wait","HASH_RENDER_EVENT","CAN_DEACTIVATE_EVENT","canDeactivate","exports","publishCanDeactivateEvent","promise","oldhash","location","hash","isBackEvent","hashChange","cleanUp","handleEvent","removeEventListener","selected","lastSelected","selectRangeWithFromTo","fromDate","toDate","warn","styleRange","StyleArray","getSelected","from","clearSelection","setSelected","newSelectedDates","currentMonth","config","currentYear","monthTemplates","columns","month_1","header_1","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","logger","loggerCount","initSymbolCache","locationhash","split","openEnd","substring","pattern","parseUrlPattern_1","regexString","createRouteRegex_1","regex","RegExp","test","htmlTemplate","setValue","commit","importStatement","routeMatch_1","path","params","query","substr","urls","newUrl","val","undefined","urlparams","URLSearchParams","k","append","toString","getVariables_1","year","month","width","margin","monthHeaderTemplate","monthHeader_1","headerRowTemplate","headerRow_1","rows","fill","rowTemplates","_x","dayRow_1","_context","_config","urlPattern","paths","pathsConfig","index","PATH_SLASH_REGEX_1","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","pathPattern","_paths","_query","getUrlVars_1","height","row","weekHeader_1","dayHeader_1","days","week_1","day_1","string","vars","_m","_year","_month","block","start","newArr","currentDate","added","getTime","delete","shiftKey","clear","setDate","getDate","FirstDateOfMonth","Date","lastDayOfMonth","dayOfWeek","getDay","day","dimmedCell","abs","classList","dimmed","clicked","firstDayOfMonth","getWeekNumber_1","date","dowOffset","newYear","getFullYear","daynum","getTimezoneOffset","weeknum","nYear","nday"],"mappings":"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","file":"","sourcesContent":["import './hmr';\r\nimport './index.css';\r\n\r\nimport { enableInternalLogger } from '@simple-html/core';\r\nenableInternalLogger([\r\n    'SIMPLE-HTML-DATE-WEEK',\r\n    'SIMPLE-HTML-DATE-DAY',\r\n    'SIMPLE-HTML-DATE-DAY-HEADER',\r\n    'SIMPLE-HTML-DATE-WEEK-HEADER',\r\n    'SIMPLE-HTML-DATE-MONTH-HEADER',\r\n    'SIMPLE-HTML-DATE-DAY-ROW',\r\n    'SIMPLE-HTML-DATE-HEADER-ROW',\r\n    'SIMPLE-HTML-DATE-MONTH',\r\n    'SIMPLE-HTML-DATE-HEADER'\r\n]);\r\n\r\n// add our sample parts\r\nimport './elements/app-root';\r\nimport './elements/sample-default';\r\nimport './elements/sample-no1';\r\nimport './elements/sample-no2';\r\nimport './elements/sample-no3';\r\nimport './elements/sample-no4';\r\n\r\n// add our your widget ?\r\nimport '@simple-html/date';\r\n","import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\r\n\r\nexport default function (payload: HMRPayload, helper: HMRHelper) {\r\n    const { updates } = payload;\r\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\r\n\r\n    if (helper.isStylesheeetUpdate) {\r\n        helper.flushModules(updates);\r\n\r\n        helper.updateModules();\r\n\r\n        helper.callModules(updates);\r\n    } else {\r\n        helper.flushAll();\r\n        helper.updateModules();\r\n\r\n        helper.callEntries();\r\n    }\r\n}\r\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\r\n\r\nif (document.body) {\r\n    // I just want every thing to be rebuild from main element during hmr\r\n    document.body.innerHTML = '';\r\n    setTimeout(() => {\r\n        document.body.innerHTML = '<app-root></app-root>';\r\n    }, 0);\r\n}\r\n\r\napplyPolyfill(ReflowStrategy.NONE);\r\n","import 'tslib';\r\nexport { attribute } from './attribute';\r\nexport { prop } from './prop';\r\nexport { enableInternalLogger, disableInternalLogger } from './logger';\r\nexport { property } from './property';\r\nexport { customElement } from './customElement';\r\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\r\nexport { validateKey, stateContainer, stateResult } from './state';\r\nexport { requestRender } from './requestRender';\r\nexport { disconnectedCallback } from './disconnectedCallback';\r\n","import { customElement, requestRender } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { routeMatch } from '@simple-html/router';\r\n\r\n@customElement('app-root')\r\nexport default class extends HTMLElement {\r\n    elements = ['#default', '#sample1', '#sample2', '#sample3', '#sample4'];\r\n\r\n    render() {\r\n        return html`<section class=\"flex flex-row flex-grow h-full\">\r\n            <!-- our simple navigation  -->\r\n            <div class=\"bg-gray-200 flex flex-col\">\r\n                ${this.elements.map((element) => {\r\n                    return html`<a\r\n                       class=\"p-2 m-2 bg-indigo-300\"\r\n                       href=${element}\r\n                       @click=${() => requestRender(this)}>\r\n                        ${element}\r\n                    </button>`;\r\n                })}\r\n            </div>\r\n\r\n            <!--  our routes -->\r\n            ${routeMatch('#default')\r\n                ? html`<sample-default class=\"flex-grow\"></sample-default>`\r\n                : ''}\r\n            ${routeMatch('#sample1') ? html`<sample-no1 class=\"flex-grow\"></sample-no1>` : ''}\r\n            ${routeMatch('#sample2') ? html`<sample-no2 class=\"flex-grow\"></sample-no2>` : ''}\r\n            ${routeMatch('#sample3') ? html`<sample-no3 class=\"flex-grow\"></sample-no3>` : ''}\r\n            ${routeMatch('#sample4') ? html`<sample-no4 class=\"flex-grow\"></sample-no4>` : ''}\r\n        </section>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { IDateConfig } from '@simple-html/date/src/interfaces';\r\n\r\n@customElement('sample-default')\r\nexport default class extends HTMLElement {\r\n    dateconfig: IDateConfig = {\r\n        monthsToShow: 12,\r\n        monthColumns: 3,\r\n        startMonth: 0, //0-11\r\n        startYear: 2020,\r\n        showWeek: false, // not working\r\n        isoWeek: true, // not working\r\n        weekHeader: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'], // must be in js order, widget reorder them if you have other start day\r\n        monthHeader: [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December'\r\n        ],\r\n        weekStart: 1,\r\n        rowHeight: '20px',\r\n        monthWidth: '220px',\r\n        monthMargin: '10px',\r\n        hideDimmedDates: false\r\n    };\r\n\r\n    render() {\r\n        this.style.display = 'flex';\r\n        return html`<!-- x -->\r\n            <div class=\"flex flex-col\">\r\n                <button\r\n                    class=\"p-2 m-2 bg-gray-200\"\r\n                    @click=${() => {\r\n                        if (this.dateconfig.startMonth === 0) {\r\n                            this.dateconfig.startMonth = 11;\r\n                            this.dateconfig.startYear--;\r\n                        } else {\r\n                            this.dateconfig.startMonth--;\r\n                        }\r\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                        this.render();\r\n                    }}\r\n                >\r\n                    prev\r\n                </button>\r\n                <button\r\n                    class=\"p-2 m-2 bg-gray-200\"\r\n                    @click=${() => {\r\n                        if (this.dateconfig.startMonth === 11) {\r\n                            this.dateconfig.startMonth = 0;\r\n                            this.dateconfig.startYear++;\r\n                        } else {\r\n                            this.dateconfig.startMonth++;\r\n                        }\r\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                        this.render();\r\n                    }}\r\n                >\r\n                    next\r\n                </button>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >monthsToShow:\r\n                    <input\r\n                        type=\"number\"\r\n                        .valueAsNumber=${this.dateconfig.monthsToShow}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.monthsToShow = e.target.valueAsNumber;\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >columns:\r\n                    <input\r\n                        type=\"number\"\r\n                        .valueAsNumber=${this.dateconfig.monthColumns}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.monthColumns = e.target.valueAsNumber;\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >weekStart:\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"6\"\r\n                        .valueAsNumber=${this.dateconfig.weekStart}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.weekStart = e.target.valueAsNumber;\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >rowHeight:\r\n                    <input\r\n                        type=\"number\"\r\n                        .valueAsNumber=${parseInt(this.dateconfig.rowHeight)}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.rowHeight = e.target.valueAsNumber + 'px';\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >monthWidth:\r\n                    <input\r\n                        type=\"number\"\r\n                        .valueAsNumber=${parseInt(this.dateconfig.monthWidth)}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.monthWidth = e.target.valueAsNumber + 'px';\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >monthMargin:\r\n                    <input\r\n                        type=\"number\"\r\n                        .valueAsNumber=${parseInt(this.dateconfig.monthMargin)}\r\n                        @input=${(e: any) => {\r\n                            this.dateconfig.monthMargin = e.target.valueAsNumber + 'px';\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n                <div class=\"flex\">\r\n                    <div class=\"p-2 m-2 bg-gray-200 flex flex-col\">\r\n                        ${this.dateconfig.monthHeader.map((m, i) => {\r\n                            console.log(m);\r\n                            return html`<input\r\n                                class=\"border\"\r\n                                type=\"text\"\r\n                                .value=${m}\r\n                                @change=${(e: any) => {\r\n                                    this.dateconfig.monthHeader[i] = e.target.value;\r\n\r\n                                    this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                                    this.render();\r\n                                }}\r\n                            />`;\r\n                        })}\r\n                    </div>\r\n\r\n                    <div class=\"p-2 m-2 bg-gray-200 flex flex-col\">\r\n                        ${this.dateconfig.weekHeader.map((m, i) => {\r\n                            console.log(m);\r\n                            return html`<input\r\n                                class=\"border\"\r\n                                type=\"text\"\r\n                                .value=${m}\r\n                                @change=${(e: any) => {\r\n                                    this.dateconfig.weekHeader[i] = e.target.value;\r\n\r\n                                    this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                                    this.render();\r\n                                }}\r\n                            />`;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >show week(iso week):\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        .checked=${this.dateconfig.showWeek}\r\n                        @click=${(e: any) => {\r\n                            this.dateconfig.showWeek = e.target.checked;\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n\r\n                <label class=\"p-2 m-2 bg-gray-200\"\r\n                    >hideDimmedDates:\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        .checked=${this.dateconfig.hideDimmedDates}\r\n                        @click=${(e: any) => {\r\n                            this.dateconfig.hideDimmedDates = e.target.checked;\r\n\r\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\r\n                            this.render();\r\n                        }}\r\n                /></label>\r\n            </div>\r\n            <simple-html-date style=\"margin:10px;\" .config=${this.dateconfig}></simple-html-date>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('sample-no1')\r\nexport default class extends HTMLElement {\r\n    render() {\r\n        return html` sample01 `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('sample-no2')\r\nexport default class extends HTMLElement {\r\n    render() {\r\n        return html` sample02 `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('sample-no3')\r\nexport default class extends HTMLElement {\r\n    render() {\r\n        return html` sample03 `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('sample-no4')\r\nexport default class extends HTMLElement {\r\n    render() {\r\n        return html` sample04 `;\r\n    }\r\n}\r\n","import './simple-html-date.css';\r\nimport './simple-html-date';\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\nimport { logger } from './logger';\n\n/**\n * @customElement- decorator\n *\n */\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\n    return function reg(elementClass: any) {\n        const observedAttributes = elementClass.observedAttributes;\n        Object.defineProperty(elementClass, 'observedAttributes', {\n            set: function (value) {\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\n                return true;\n            },\n            get: function () {\n                return elementClass.prototype[getObservedAttributesSymbol()];\n            },\n            configurable: true\n        });\n\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\n                observedAttributes\n            );\n        }\n        // if @attribute is not used we just use the standard if any\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = observedAttributes;\n        }\n\n        const Base: any = class extends elementClass {\n            constructor() {\n                super();\n                logger('constructor', this, super.tagName);\n            }\n\n            renderCalled() {\n                if (super.renderCalled) {\n                    super.renderCalled.call(this);\n                }\n            }\n\n            render(...result: any[]) {\n                if (super.render) {\n                    logger('render', this, super.tagName);\n                    const template = super.render.call(this, ...result);\n                    Promise.resolve(template).then((templates) => {\n                        render(templates, this as any, { eventContext: this as any });\n                        if (super.updated) {\n                            //delay so it actually get a chance to update\n                            requestAnimationFrame(() => {\n                                super.updated();\n                            });\n                        }\n                    });\n                }\n                this.renderCalled();\n            }\n            connectedCallback() {\n                logger('connectedCallback', this, super.tagName);\n                if (super.connectedCallback) {\n                    super.connectedCallback.call(this);\n                }\n                this.render(this);\n            }\n\n            register(call: Function) {\n                if (this.callers) {\n                    this.callers.push(call);\n                } else {\n                    this.callers = [];\n                    this.callers.push(call);\n                }\n            }\n\n            disconnectedCallback() {\n                logger('disconnectedCallback', this, super.tagName);\n                if (this.callers) {\n                    this.callers.forEach((call: Function) => call());\n                }\n                this.callers = [];\n                if (super.disconnectedCallback) {\n                    super.disconnectedCallback.call(this);\n                }\n            }\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n                logger('attributeChangedCallback', this, super.tagName);\n                //get map\n\n                if (!this[getObservedAttributesMapSymbol()]) {\n                    const attribute = name\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\n                        .replace(/\\s+/g, '-')\n                        .toLowerCase();\n                    this[getObservedAttributesMapSymbol()] = new Map();\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\n                }\n\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\n                this[nameProp] = newValue || '';\n                // if normal attributeChanged is set\n                if (super.attributeChangedCallback) {\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\n                }\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\n                if (super.valuesChanged) {\n                    super.valuesChanged('attribute', name, oldValue, newValue);\n                }\n            }\n        };\n        if (!customElements.get(elementName)) {\n            if (extended) {\n                customElements.define(elementName, Base, extended);\n            } else {\n                customElements.define(elementName, Base);\n            }\n        } else {\n            if ((globalThis as any).hmrCache) {\n                if (extended) {\n                    customElements.define(elementName, Base, extended);\n                } else {\n                    customElements.define(elementName, Base);\n                }\n            }\n        }\n    };\n}\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\n\nlet state = (window as any).state || {};\nconst keys = new Set();\ntype valueSetter<T> = (value: T) => void;\n\n// helper for fusebox hmr event\nif (!(window as any).state) {\n    window.addEventListener('HMR-FUSEBOX', () => {\n        (window as any).state = state;\n        console.log('HMR-FUSEBOX', (window as any).state);\n    });\n}\n\nexport type stateResult<T> = [T, valueSetter<T>];\n\n/**\n * Get current glabal state\n * great for saving state for next time user opens website\n */\nexport function getState() {\n    state;\n}\n\n/**\n * overide current state\n * great for restoring state time user opens website\n */\nexport function setState<T>(newState: T) {\n    state = newState;\n}\n\nexport function assignState<T, K extends keyof T>(obj: T, part: Pick<T, K>) {\n    return Object.assign(obj, part);\n}\n\n/**\n * simple state container\n * @param key key used in state container and event\n * @param defaultValue default state value\n * @param customPublishedTrigger if you do not want it to publish update event\n */\nexport function stateContainer<T>(\n    key: string,\n    defaultValue: T,\n    customPublishedTrigger?: boolean\n): stateResult<T> {\n    //set default value if not set\n    if (!state.hasOwnProperty(key)) {\n        state[key] = defaultValue;\n    }\n\n    const currentState: T = state[key];\n    const setter = function (value: T) {\n        state[key] = value;\n    };\n\n    const middleware = function (value: any) {\n        setter(value);\n        publish(key, value);\n    };\n\n    return [currentState, customPublishedTrigger ? setter : middleware];\n}\n\n/**\n * simple warning if you reuse a key by accident\n * @param key\n */\nexport function validateKey(key: string) {\n    if (keys.has(key)) {\n        throw new Error(`state key used allready, use another name`);\n    } else {\n        keys.add(key);\n        return key;\n    }\n}\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { customElement, property } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { IDateConfig, IStyle } from './interfaces';\r\nimport { month } from './templates/month';\r\nimport { header } from './templates/header';\r\n\r\n@customElement('simple-html-date')\r\nexport class SimpleHtmlDate extends HTMLElement {\r\n    selected = new Set();\r\n    lastSelected: Date = null;\r\n    @property() config: IDateConfig;\r\n\r\n    selectRangeWithFromTo(fromDate: Date, toDate: Date) {\r\n        console.warn('Not implemented', fromDate, toDate);\r\n    }\r\n\r\n    styleRange(StyleArray: IStyle[]) {\r\n        // rerun in you have priorty colors, start with lowest\r\n        console.warn('Not implemented', StyleArray);\r\n    }\r\n\r\n    getSelected() {\r\n        return Array.from(this.selected);\r\n    }\r\n\r\n    clearSelection() {\r\n        this.selected = new Set();\r\n        this.render();\r\n    }\r\n\r\n    setSelected(newSelectedDates: Date[]) {\r\n        this.selected = new Set(newSelectedDates);\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        let currentMonth = this.config.startMonth;\r\n        let currentYear = this.config.startYear;\r\n        const monthTemplates = [];\r\n\r\n        let i = 0;\r\n        while (i < this.config.monthsToShow) {\r\n            const columns = [];\r\n            for (let y = 0; y < this.config.monthColumns; y++) {\r\n                // add to i so we dont get to many\r\n                i++;\r\n                if (i <= this.config.monthsToShow) {\r\n                    const template = month(this, this.config, currentYear, currentMonth);\r\n\r\n                    // push up month\r\n                    if (currentMonth === 11) {\r\n                        currentMonth = 0;\r\n                        currentYear++;\r\n                    } else {\r\n                        currentMonth++;\r\n                    }\r\n                    columns.push(template);\r\n                }\r\n            }\r\n            monthTemplates.push(html`<!-- month column -->\r\n                <div class=\"simple-html-date-col\">\r\n                    ${columns.map((x) => x)}\r\n                </div>`);\r\n        }\r\n\r\n        return html`<!-- -->\r\n\r\n            <!-- main header for entire calender -->\r\n            ${header(this, this.config)}\r\n\r\n            <!-- create a block for each month -->\r\n            ${monthTemplates.map((x) => {\r\n                return x;\r\n            })} `;\r\n    }\r\n}\r\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { createRouteRegex } from './createRouteRegex';\r\n\r\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\r\n    if (!hash && (locationhash === '' || locationhash === '#')) {\r\n        return true;\r\n    }\r\n\r\n    if (locationhash.indexOf('?') !== -1) {\r\n        locationhash = locationhash.split('?')[0];\r\n    }\r\n\r\n    let openEnd = false;\r\n    if (hash[hash.length - 1] === '*') {\r\n        hash = hash.substring(0, hash.length - 1);\r\n        openEnd = true;\r\n    }\r\n    const pattern = parseUrlPattern(hash);\r\n    const regexString = createRouteRegex(pattern, openEnd);\r\n    const regex = new RegExp(regexString);\r\n    return regex.test(locationhash);\r\n};\r\n","import { TemplateResult, directive } from 'lit-html';\r\nimport { routeMatch } from './routeMatch';\r\n\r\nexport const resolvePromise = directive(\r\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\r\n        Promise.resolve(promise).then(() => {\r\n            part.setValue(htmlTemplate);\r\n            part.commit();\r\n        });\r\n    }\r\n);\r\n\r\nexport const routeMatchAsync = function (\r\n    hash = '',\r\n    importStatement: () => Promise<any>,\r\n    htmlTemplate: TemplateResult\r\n) {\r\n    if (routeMatch(hash)) {\r\n        return resolvePromise(importStatement(), htmlTemplate);\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { IDateConfig } from '../interfaces';\r\nimport { monthHeader } from './monthHeader';\r\nimport { headerRow } from './headerRow';\r\nimport { dayRow } from './dayRow';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nexport function month(context: SimpleHtmlDate, config: IDateConfig, year: number, month: number) {\r\n    const width = config.monthWidth;\r\n    const margin = config.monthMargin;\r\n\r\n    const monthHeaderTemplate = monthHeader(context, config, year, month);\r\n    const headerRowTemplate = headerRow(context, config, year, month);\r\n\r\n    const rows = new Array(6).fill('x');\r\n    const rowTemplates = rows.map((_x, i) => {\r\n        return dayRow(context, config, year, month, i);\r\n    });\r\n\r\n    return html`<!-- function: month -->\r\n\r\n        <simple-html-date-month style=\"width:${width};margin:${margin};\">\r\n            ${monthHeaderTemplate} ${headerRowTemplate} ${rowTemplates}\r\n        </simple-html-date-month>`;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nexport function header(_context: SimpleHtmlDate, _config: IDateConfig) {\r\n    return html`<!-- function:header -->\r\n        <simple-html-date-header>\r\n            todo\r\n        </simple-html-date-header>`;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nexport function monthHeader(\r\n    _context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    year: number,\r\n    month: number\r\n) {\r\n    return html`<!-- function:monthHeader -->\r\n        <simple-html-date-month-header>\r\n            <span>\r\n                ${config.monthHeader[month]}-${year}\r\n            </span>\r\n        </simple-html-date-month-header>`;\r\n}\r\n","import { html } from 'lit-html';\r\nimport { IDateConfig } from '../interfaces';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\nimport { weekHeader } from './weekHeader';\r\nimport { dayHeader } from './dayHeader';\r\n\r\nexport function headerRow(\r\n    context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    year: number,\r\n    month: number\r\n) {\r\n    const rows = new Array(8).fill('x');\r\n    const height = config.rowHeight;\r\n\r\n    const row = rows.map((_x, i) => {\r\n        if (i === 0) {\r\n            if (config.showWeek) {\r\n                return weekHeader(context, config, year, month);\r\n            }\r\n            return '';\r\n        } else {\r\n            return dayHeader(context, config, year, month, i - 1);\r\n        }\r\n    });\r\n\r\n    return html`<!-- function:headerRow -->\r\n        <simple-html-date-header-row style=\"height:${height}\">\r\n            ${row}\r\n        </simple-html-date-header-row>`;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\nimport { day } from './day';\r\nimport { week } from './week';\r\n\r\nexport function dayRow(\r\n    context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    year: number,\r\n    month: number,\r\n    row: number\r\n) {\r\n    const rows = new Array(8).fill('x');\r\n    const height = config.rowHeight;\r\n\r\n    const days = rows.map((_x, i) => {\r\n        if (i === 0) {\r\n            if (config.showWeek) {\r\n                return week(context, config, year, month, i + row * 7);\r\n            }\r\n            return '';\r\n        } else {\r\n            return day(context, config, year, month, i + row * 7);\r\n        }\r\n    });\r\n\r\n    return html`<!-- function:dayRow -->\r\n        <simple-html-date-day-row style=\"height:${height}\">\r\n            ${days}\r\n        </simple-html-date-day-row>`;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\n","export const PATH_SLASH_REGEX = '\\\\/';\r\n","export function getVariableName(path: string) {\r\n    return path.substring(1, path.length);\r\n}\r\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nexport function weekHeader(\r\n    _context: SimpleHtmlDate,\r\n    _config: IDateConfig,\r\n    _year: number,\r\n    _month: number\r\n) {\r\n    return html`<!-- function:weekHeader -->\r\n        <simple-html-date-week-header>\r\n            W\r\n        </simple-html-date-week-header>`;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nexport function dayHeader(\r\n    _context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    _year: number,\r\n    _month: number,\r\n    block: number\r\n) {\r\n    let start = config.weekStart;\r\n    const newArr = [];\r\n    for (let i = 0; i < 7; i++) {\r\n        newArr.push(start);\r\n        start++;\r\n        if (start > 6) {\r\n            start = 0;\r\n        }\r\n    }\r\n\r\n    return html`<!-- function:dayHeader -->\r\n        <simple-html-date-day-header>\r\n            ${config.weekHeader[newArr[block]]}\r\n        </simple-html-date-day-header>`;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\n\r\nfunction clicked(event: MouseEvent, ctx: SimpleHtmlDate, currentDate: Date) {\r\n    let added = false;\r\n    if (ctx.selected.has(currentDate.getTime())) {\r\n        added = false;\r\n        ctx.selected.delete(currentDate.getTime());\r\n    } else {\r\n        added = true;\r\n        ctx.selected.add(currentDate.getTime());\r\n    }\r\n\r\n    if (event.shiftKey && ctx.lastSelected) {\r\n        if (ctx.lastSelected < currentDate) {\r\n            ctx.selected.clear();\r\n            ctx.selected.add(ctx.lastSelected.getTime());\r\n            while (ctx.lastSelected < currentDate) {\r\n                ctx.lastSelected.setDate(ctx.lastSelected.getDate() + 1);\r\n                if (!ctx.selected.has(ctx.lastSelected.getTime())) {\r\n                    ctx.selected.add(ctx.lastSelected.getTime());\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ctx.lastSelected > currentDate) {\r\n            ctx.selected.clear();\r\n            ctx.selected.add(ctx.lastSelected.getTime());\r\n            while (ctx.lastSelected > currentDate) {\r\n                ctx.lastSelected.setDate(ctx.lastSelected.getDate() - 1);\r\n                if (!ctx.selected.has(ctx.lastSelected.getTime())) {\r\n                    ctx.selected.add(ctx.lastSelected.getTime());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (added) {\r\n        ctx.lastSelected = currentDate;\r\n    } else {\r\n        ctx.lastSelected = null;\r\n    }\r\n}\r\n\r\nexport function day(\r\n    context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    year: number,\r\n    month: number,\r\n    block: number\r\n) {\r\n    const FirstDateOfMonth = new Date(year, month, 1);\r\n    const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\r\n    let dayOfWeek = FirstDateOfMonth.getDay() - config.weekStart;\r\n    if (dayOfWeek < 0) {\r\n        // if less than 0, we need to push it out 1 week. so we always show entire month\r\n        dayOfWeek = dayOfWeek + 7;\r\n    }\r\n\r\n    let day = block - dayOfWeek;\r\n\r\n    let dimmedCell = false;\r\n    // if more then last day of month\r\n    if (day > lastDayOfMonth.getDate()) {\r\n        day = day - lastDayOfMonth.getDate();\r\n        dimmedCell = true;\r\n        if (month === 11) {\r\n            month = 0;\r\n            year++;\r\n        } else {\r\n            month++;\r\n        }\r\n    }\r\n\r\n    // if less that first we need to count downwards\r\n    if (day < 1) {\r\n        FirstDateOfMonth.setDate(FirstDateOfMonth.getDate() - Math.abs(day) - config.weekStart);\r\n        day = FirstDateOfMonth.getDate();\r\n        dimmedCell = true;\r\n        if (month === 0) {\r\n            month = 11;\r\n            year--;\r\n        } else {\r\n            month--;\r\n        }\r\n    }\r\n\r\n    const classList = [];\r\n\r\n    if (dimmedCell) {\r\n        classList.push('simple-html-date-day-dimmed');\r\n    }\r\n\r\n    const currentDate = new Date(year, month, day);\r\n    this.dimmed = dimmedCell;\r\n    if (context.selected.has(currentDate.getTime()) && !dimmedCell) {\r\n        classList.push('simple-html-date-day-selected');\r\n    }\r\n\r\n    if (config.hideDimmedDates && dimmedCell) {\r\n        day = '' as any;\r\n        classList.push('simple-html-date-day-hidden');\r\n    }\r\n\r\n    return html`<!-- function:day -->\r\n        <simple-html-date-day\r\n            class=${classList.join(' ')}\r\n            @click=${(e: MouseEvent) => {\r\n                clicked(e, context, currentDate);\r\n                context.render();\r\n            }}\r\n        >\r\n            ${day}\r\n        </simple-html-date-day>`;\r\n}\r\n","import { IDateConfig } from '../interfaces';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlDate } from '../simple-html-date';\r\nimport { getWeekNumbers } from '../utils/getWeekNumber';\r\n\r\nexport function week(\r\n    _context: SimpleHtmlDate,\r\n    config: IDateConfig,\r\n    year: number,\r\n    month: number,\r\n    block: number\r\n) {\r\n    const firstDayOfMonth = new Date(year, month, 1);\r\n    const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\r\n\r\n    let dayOfWeek = firstDayOfMonth.getDay() - (config.isoWeek ? 1 : 0); // we only want monday or sunday\r\n    if (dayOfWeek < 0) {\r\n        // if less than 0, we need to push it out 1 week. so we always show entire month\r\n        dayOfWeek = dayOfWeek + 7;\r\n    }\r\n\r\n    let day = block - dayOfWeek + 1;\r\n\r\n    // if more then last day of month\r\n    if (day > lastDayOfMonth.getDate()) {\r\n        day = day - lastDayOfMonth.getDate();\r\n        if (month === 11) {\r\n            month = 0;\r\n            year++;\r\n        } else {\r\n            month++;\r\n        }\r\n    }\r\n\r\n    // if less that first we need to count downwards\r\n    if (day < 1) {\r\n        firstDayOfMonth.setDate(firstDayOfMonth.getDate() - Math.abs(day) - config.weekStart);\r\n        day = firstDayOfMonth.getDate();\r\n        if (month === 0) {\r\n            month = 11;\r\n            year--;\r\n        } else {\r\n            month--;\r\n        }\r\n    }\r\n\r\n    return html`<!-- function:week -->\r\n        <simple-html-date-week>\r\n            ${getWeekNumbers(new Date(year, month, day), config.isoWeek)}\r\n        </simple-html-date-week>`;\r\n}\r\n","export function getWeekNumbers(date: Date, isoWeek: boolean) {\r\n    /*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.epoch-calendar.com */\r\n\r\n    const dowOffset = isoWeek ? 1 : 0;\r\n    const newYear = new Date(date.getFullYear(), 0, 1);\r\n    let day = newYear.getDay() - dowOffset; //the day of week the year begins on\r\n    day = day >= 0 ? day : day + 7;\r\n    const daynum =\r\n        Math.floor(\r\n            (date.getTime() -\r\n                newYear.getTime() -\r\n                (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) /\r\n                86400000\r\n        ) + 1;\r\n    let weeknum;\r\n    //if the year starts before the middle of a week\r\n    if (day < 4) {\r\n        weeknum = Math.floor((daynum + day - 1) / 7) + 1;\r\n        if (weeknum > 52) {\r\n            const nYear = new Date(date.getFullYear() + 1, 0, 1);\r\n            let nday = nYear.getDay() - dowOffset;\r\n            nday = nday >= 0 ? nday : nday + 7;\r\n            /*if the next year starts before the middle of\r\n                   the week, it is week #1 of that year*/\r\n            weeknum = nday < 4 ? 1 : 53;\r\n        }\r\n    } else {\r\n        weeknum = Math.floor((daynum + day - 1) / 7);\r\n    }\r\n    return weeknum;\r\n}\r\n"]}