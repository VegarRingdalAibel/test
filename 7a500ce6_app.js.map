{"version":3,"sources":["/src/src/index.ts","/src/src/routerConfig.ts","/src/src/litHtmlHelpers.ts","/src/src/routes/home-route.ts","/src/src/resources/state/sharedstate.ts","/src/src/resources/models/user.ts","/src/src/resources/services/tagservice.ts","/src/src/resources/services/apiservice.ts","/src/src/resources/services/config.ts","/src/src/resources/services/jwtservice.ts","/src/src/resources/services/servicehelper.ts","/src/src/resources/queryStringify.ts","/src/src/resources/services/articleservice.ts","/src/src/components/article-list.ts","/src/src/components/article-preview.ts","/src/src/routes/profile-route.ts","/src/src/resources/services/profileservice.ts","/src/src/routes/auth-route.ts","/src/src/resources/services/userservice.ts","/src/src/routes/settings-route.ts","/src/src/routes/editor-route.ts","/src/src/routes/article-route.ts","/src/src/routes/profile-article-route.ts","/src/src/routes/profile-favorites-route.ts","/src/src/components/app-main.ts","/src/src/components/footer-section.ts","/src/src/components/header-section.ts"],"names":[],"mappings":"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","file":"7a500ce6_app","sourcesContent":["import './index.css';\r\nimport './routerConfig';\r\nimport './components/app-main';\r\n\r\n\r\n\r\n","import { getRouter } from 'lit-html-free-router';\r\nimport { getContext, EventAggregator } from './litHtmlHelpers';\r\n\r\n\r\ngetRouter().registerRouteChangeHandler((options: any, activeRouter: any)=> {\r\n    getContext(EventAggregator).publish('routeChange', {options, activeRouter})\r\n})\r\n\r\ngetRouter().addRouterConfig('main', [\r\n    {\r\n        path: '',\r\n        load: () => import('./routes/home-route'),\r\n        componentName: 'home-comp',\r\n        name: 'Home',\r\n        isNav: false\r\n    },\r\n    {\r\n        path: 'home',\r\n        componentName: 'home-comp',\r\n        load: () => import('./routes/home-route'),\r\n        name: 'Home'\r\n    },\r\n    {\r\n        path: 'profile/:name',\r\n        componentName: 'profile-comp',\r\n        load: () => import('./routes/profile-route'),\r\n        name: 'Profile',\r\n        children: true\r\n    },\r\n    {\r\n        path: 'login',\r\n        componentName: 'auth-comp',\r\n        load: () => import('./routes/auth-route'),\r\n        name: 'Login'\r\n    },\r\n    {\r\n        path: 'register',\r\n        componentName: 'Auth-comp',\r\n        load: () => import('./routes/auth-route'),\r\n        name: 'Register'\r\n    },\r\n    {\r\n        path: 'settings',\r\n        componentName: 'Settings-comp',\r\n        load: () => import('./routes/settings-route'),\r\n        name: 'Settings'\r\n    },\r\n    {\r\n        path: 'editor',\r\n        componentName: 'Editor-comp',\r\n        load: () => import('./routes/editor-route'),\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        path: 'editor/:slug',\r\n        componentName: 'Editor-comp',\r\n        load: () => import('./routes/editor-route'),\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        path: 'article/:slug',\r\n        componentName: 'Article-comp',\r\n        load: () => import('./routes/article-route'),\r\n        name: 'Erticle'\r\n    }\r\n]);\r\n\r\ngetRouter().addRouterConfig('subProfile', [\r\n    {\r\n        path: 'profile/:name',\r\n        componentName: 'profile-article-route',\r\n        load: () => import('./routes/profile-article-route'),\r\n        name: 'MyPosts'\r\n    },\r\n    {\r\n        path: 'profile/:name/favorites',\r\n        componentName: 'profile-favorites-route',\r\n        load: () => import('./routes/profile-favorites-route'),\r\n        name: 'Favorites'\r\n    }\r\n]);\r\n","import { render } from 'lit-html';\r\n\r\nexport const registerCustomElement = (elementName: string, elementClass: any): void => {\r\n    if (!customElements.get(elementName)) {\r\n        const rendermethod = elementClass.prototype.render;\r\n        const connectedCallbackMethod = elementClass.prototype.connectedCallback;\r\n        const disconnectedCallbackMethod = elementClass.prototype.disconnectedCallback;\r\n        const updatedMethod = elementClass.prototype.updated;\r\n\r\n        elementClass.prototype.render = function(...result: any[]) {\r\n            render(rendermethod.call(this, ...result), this, { eventContext: this });\r\n            if(updatedMethod){\r\n                updatedMethod();\r\n            }\r\n        };\r\n\r\n        elementClass.prototype.connectedCallback = function() {\r\n            if (connectedCallbackMethod) {\r\n                connectedCallbackMethod.call(this);\r\n            }\r\n            if(!this.haltUpdate){\r\n                this.render();\r\n            }\r\n            \r\n        };\r\n\r\n        elementClass.prototype.disconnectedCallback = function() {\r\n            if (disconnectedCallbackMethod) {\r\n                disconnectedCallbackMethod.call(this);\r\n            }\r\n        };\r\n\r\n        customElements.define(elementName, elementClass);\r\n    } else {\r\n        console.log('element already registered');\r\n    }\r\n};\r\n\r\nconst singeltonMap = new Map();\r\n\r\nexport const getContext = (_class: any) => {\r\n    if (singeltonMap.has(_class)) {\r\n        return singeltonMap.get(_class);\r\n    } else {\r\n        const newclass = new _class();\r\n        singeltonMap.set(_class, newclass);\r\n        return newclass;\r\n    }\r\n};\r\n\r\nexport class EventAggregator {\r\n    private channels: any;\r\n\r\n    constructor() {\r\n        this.channels = {};\r\n    }\r\n\r\n    public publish(channel: string, ...args: any[]): void {\r\n        if (Array.isArray(this.channels[channel])) {\r\n            for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                this.channels[channel][i].func.apply(this, args);\r\n            }\r\n        } else {\r\n            // if no one is listening then do we really need to do anything ?\r\n        }\r\n    }\r\n\r\n    public unsubscribe(channel: string, ctx: any): void {\r\n        if (Array.isArray(this.channels[channel])) {\r\n            for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                if (this.channels[channel][i].ctx === ctx) {\r\n                    this.channels[channel].splice(i, 1);\r\n                }\r\n            }\r\n        } else {\r\n            // channel does not exist, great!\r\n        }\r\n    }\r\n\r\n    public subscribe(channel: string, ctx: any, func: Function): void {\r\n        if (!Array.isArray(this.channels[channel])) {\r\n            this.channels[channel] = [];\r\n        }\r\n        this.channels[channel].push({ ctx: ctx, func: func });\r\n    }\r\n}\r\n\r\nexport interface IFetchConfig {\r\n    // default url to use\r\n    defaultUrl?: string;\r\n\r\n    // data formsdata, json/string\r\n    body?: any;\r\n\r\n    // 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    cache?: string;\r\n\r\n    // 'same-origin', // include, same-origin, *omit\r\n    credentials?: string;\r\n\r\n    // {\r\n    //  'user-agent': 'Mozilla/4.0 MDN Example',\r\n    //  'content-type': 'application/json'\r\n    // },\r\n    headers?: Object;\r\n\r\n    // 'POST', // *GET, POST, PUT, DELETE, etc.\r\n    method?: string;\r\n\r\n    // 'cors', // no-cors, cors, *same-origin\r\n    mode?: string;\r\n\r\n    // 'follow', // manual, *follow, error\r\n    redirect?: string;\r\n\r\n    // 'no-referrer', // *client, no-referrer\r\n    referrer?: string;\r\n}\r\n\r\nexport class FetchClient {\r\n    constructor(private config = {} as IFetchConfig) {\r\n        this.setConfig(config);\r\n    }\r\n\r\n    public setConfig(config: IFetchConfig) {\r\n        if (config.defaultUrl) {\r\n            this.config.defaultUrl = config.defaultUrl;\r\n        }\r\n\r\n        if (config.cache) {\r\n            this.config.cache = config.cache;\r\n        }\r\n\r\n        if (config.credentials) {\r\n            this.config.credentials = config.credentials;\r\n        }\r\n\r\n        if (config.headers) {\r\n            this.config.headers = config.headers;\r\n        }\r\n\r\n        if (config.method) {\r\n            this.config.method = config.method;\r\n        }\r\n\r\n        if (config.mode) {\r\n            this.config.mode = config.mode;\r\n        }\r\n\r\n        if (config.redirect) {\r\n            this.config.redirect = config.redirect;\r\n        }\r\n\r\n        if (config.referrer) {\r\n            this.config.referrer = config.referrer;\r\n        }\r\n    }\r\n\r\n    public getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    public fetch(url: string, options: IFetchConfig): Promise<any> {\r\n        const fetchUrl = this.config.defaultUrl ? this.config.defaultUrl + url : url;\r\n        const fetchOptions: any = {\r\n            body: options.body ? options.body : undefined,\r\n            cache: options.cache || this.config.cache,\r\n            credentials: options.credentials || this.config.credentials,\r\n            headers: options.headers || this.config.headers,\r\n            method: options.method || this.config.method,\r\n            mode: options.mode || this.config.mode,\r\n            redirect: options.redirect || this.config.redirect,\r\n            referrer: options.referrer || this.config.referrer\r\n        };\r\n\r\n        return fetch(fetchUrl, fetchOptions as any);\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext, EventAggregator } from '../litHtmlHelpers';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\nimport { TagService } from 'src/resources/services/tagservice';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport '../components/article-list';\r\n\r\nregisterCustomElement(\r\n    'home-comp',\r\n    class extends HTMLElement {\r\n        private sharedState: any;\r\n        public articles: any[] = [];\r\n        public shownList = 'all';\r\n        public tags: any[] = [];\r\n        public filterTag: any = undefined;\r\n        public totalPages: any;\r\n        public currentPage = 1;\r\n        public limit = 10;\r\n        public eventAggregator: any;\r\n        public tagService: any;\r\n        public articleService: any;\r\n        // public haltUpdate = true\r\n\r\n        public connectedCallback() {\r\n            this.sharedState = getContext(SharedState);\r\n            this.tagService = getContext(TagService);\r\n            this.articleService = getContext(ArticleService);\r\n            this.eventAggregator = getContext(EventAggregator);\r\n            this.getArticles();\r\n            this.getTags();\r\n        }\r\n\r\n        public async getArticles() {\r\n            const params = {\r\n                limit: this.limit,\r\n                offset: this.limit * (this.currentPage - 1)\r\n            };\r\n            if (this.filterTag !== undefined) {\r\n                (params as any).tag = this.filterTag;\r\n            }\r\n            const response = await this.articleService.getList(this.shownList, params);\r\n            this.articles.splice(0, this.tags.length);\r\n            this.articles.push(...response.articles);\r\n\r\n            // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n            this.totalPages = Array.from(\r\n                new Array(Math.ceil(response.articlesCount / this.limit)),\r\n                (_val?: any, index?) => index + 1\r\n            );\r\n            // this.eventAggregator.publish('articleChange');\r\n            this.render();\r\n        }\r\n\r\n        public async getTags() {\r\n            const response = await this.tagService.getList();\r\n            this.tags.splice(0, this.tags.length);\r\n            this.tags.push(...response);\r\n            this.render();\r\n        }\r\n\r\n\r\n        public setListTo(type: any, tag?: any) {\r\n            if (type === 'feed' && !this.sharedState.isAuthenticated) {\r\n                return;\r\n            }\r\n            if (tag !== this.filterTag) {\r\n                this.currentPage = 1;\r\n            }\r\n            this.shownList = type;\r\n            this.filterTag = tag;\r\n            this.getArticles();\r\n        }\r\n\r\n  /*       public getFeedLinkClass() {\r\n            let clazz = '';\r\n            if (!this.sharedState.isAuthenticated) {\r\n                clazz += ' disabled';\r\n            }\r\n            if (this.shownList === 'feed') {\r\n                clazz += ' active';\r\n            }\r\n\r\n            return clazz;\r\n        } */\r\n\r\n        public setPageTo(pageNumber: any) {\r\n            this.currentPage = pageNumber;\r\n            this.getArticles();\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <div class=\"home-page\">\r\n                    <div class=\"banner\">\r\n                        <div class=\"container\">\r\n                            <h1 class=\"logo-font\">conduit</h1>\r\n                            <p>A place to share your knowledge.</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"container page\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-9\">\r\n                                <div class=\"feed-toggle\">\r\n                                    <ul class=\"nav nav-pills outline-active\">\r\n                                        <li class=\"nav-item\">\r\n                                            <a\r\n                                                class=\" nav-link ${this.sharedState.isAuthenticated ? '' : 'disabled'} \r\n                                                ${this.shownList === 'feed' ? ' active' : ''}\"\r\n                                                @click=${() => this.setListTo('feed')}\r\n                                                >Your Feed</a\r\n                                            >\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a\r\n                                                class=\"nav-link ${!this.filterTag && this.shownList === 'all' ? 'active' : ''}\"\r\n                                                @click=${() => this.setListTo('all')}\r\n                                                >Global Feed</a\r\n                                            >\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link ${this.filterTag ? 'active' : ''}\"\r\n                                                >${this.filterTag ? '#' + this.filterTag : ''}</a\r\n                                            >\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <article-list\r\n                                    .articles=${this.articles}\r\n                                    .totalPages=${this.totalPages}\r\n                                    .currentPage=${this.currentPage}\r\n                                    set-page-cb.trigger=\"setPageTo($event.detail)\"\r\n                                ></article-list>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"sidebar\">\r\n                                    <p>Popular Tags</p>\r\n\r\n                                    <div class=\"tag-list\">\r\n                                        ${this.tags.map(tag => {\r\n                                            return html`\r\n                                                <a class=\"tag-pill tag-default\" click.delegate=\"setListTo('all', tag)\">${tag}</a>\r\n                                            `;\r\n                                        })}\r\n                                        ${this.tags.length === 0 ? \r\n                                            html`\r\n                                                <div>No tags are here... yet.</div>\r\n                                            `: ''} \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { User } from '../models/user';\n\nexport class SharedState {\n\n  public currentUser: User;\n  public isAuthenticated: boolean;\n\n  constructor() {\n    this.setState();\n  }\n\n\n\n  public resetState() {\n    this.currentUser = new User();\n    this.isAuthenticated = false;\n  }\n\n\n\n  public setState() {\n    if (window.localStorage['jwtToken']) {\n      const user = window.localStorage[window.localStorage['jwtToken'] + 'currentUser'];\n      if (user) {\n        this.currentUser = new User(JSON.parse(user));\n        this.isAuthenticated = true;\n      } else {\n        this.currentUser = new User();\n        this.isAuthenticated = false;\n      }\n    }\n    \n  }\n\n\n\n  public saveState(user: User) {\n    if (user) {\n      window.localStorage[window.localStorage['jwtToken'] + 'currentUser'] = JSON.stringify(user);\n    }\n  }\n\n\n\n}\n","export class User {\n\n  public email: string;\n  public token: string;\n  public username: string;\n  public bio: string;\n  public image: string;\n  public password: string;\n\n\n  constructor(user?: User) {\n    this.email = user ? user.email : '';\n    this.token = user ? user.token : '';\n    this.username = user ? user.username : '';\n    this.bio = user ? user.bio : '';\n    this.image = user ? user.image : '';\n  }\n}\n","import { ApiService } from './apiservice';\nimport { getContext } from 'src/litHtmlHelpers';\n\nexport class TagService {\n    public apiService: ApiService;\n    constructor() {\n        this.apiService = getContext(ApiService);\n    }\n\n    public async getList() {\n        const data = await this.apiService.get('/tags');\n\n        return data.tags;\n    }\n}\n","import { config } from './config';\n\nimport { JwtService } from './jwtservice';\nimport { status, parseError } from './servicehelper';\nimport { FetchClient, getContext } from 'src/litHtmlHelpers';\nimport { urlqueryStringify } from '../queryStringify';\n\nexport class ApiService {\n    public http: FetchClient;\n    public jwtService: JwtService;\n\n    constructor() {\n        this.jwtService = getContext(JwtService);\n        this.http = new FetchClient();\n    }\n\n    public setHeaders() {\n        const headersConfig = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n        };\n\n        if (this.jwtService.getToken()) {\n            headersConfig['Authorization'] = `Token ${this.jwtService.getToken()}`;\n        }\n\n        return new Headers(headersConfig);\n    }\n\n    public async get(path: any, params?: any): Promise<any> {\n        const options = {\n            method: 'GET',\n            headers: this.setHeaders()\n        };\n\n        try {\n            const result = await this.http.fetch(`${config.api_url}${path}?${urlqueryStringify(params)}`, options);\n\n            return status(result);\n        } catch (e) {\n            return parseError(e);\n        }\n    }\n\n    public async put(path: any, body = {}): Promise<any> {\n        const options = {\n            method: 'PUT',\n            headers: this.setHeaders(),\n            body: JSON.stringify(body)\n        };\n\n        try {\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\n\n            return status(result);\n        } catch (e) {\n            return await parseError(e);\n        }\n    }\n\n    public async post(path: any, body = {}): Promise<any> {\n        const options = {\n            method: 'POST',\n            headers: this.setHeaders(),\n            body: JSON.stringify(body)\n        };\n\n        try {\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\n\n            return status(result);\n        } catch (e) {\n            return await parseError(e);\n        }\n    }\n\n    public async delete(path: any): Promise<any> {\n        const options = {\n            method: 'DELETE',\n            headers: this.setHeaders()\n        };\n\n        try {\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\n\n            return status(result);\n        } catch (e) {\n            return await parseError(e);\n        }\n    }\n}\n","\nexport const config = {\n  api_url: 'https://conduit.productionready.io/api'\n};\n\n","export class JwtService {\n\n\n\n  public getToken() {\n    return window.localStorage['jwtToken'];\n  }\n\n\n\n  public saveToken(token: any) {\n    window.localStorage['jwtToken'] = token;\n  }\n\n\n\n  public destroyToken() {\n    window.localStorage.removeItem('jwtToken');\n  }\n\n}\n","export function status(response: any) {\n  if (response.status >= 200 && response.status < 400) {\n    return response.json();\n  }\n\n  throw response;\n}\n\n\n\nexport function parseError(error: any) {\n  if (!(error instanceof Error)) {\n    return new Promise((_resolve, reject) => reject(error.json()));\n  } else {\n    return Promise.resolve(null);\n  }\n}\n","/*\nThe MIT License (MIT)\n\nCopyright (c) 2015 Unshift.io, Arnout Kazemier,  the Contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n\n/*\nSource:https://github.com/unshiftio/querystringify\nIts so small and useful I decided to include it\nrenamed a few parts and added types\nTODO: replace with https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams ?\n*/\n\nconst has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input: string) {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nexport function urlQueryParse(query: string): Object {\n    const parser = /([^=?&]+)=?([^&]*)/g;\n    const result = {};\n    let part: any;\n\n    //\n    // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n    // the lastIndex property so we can continue executing this loop until we've\n    // parsed all results.\n    //\n\n    // @ts-ignore\n    // tslint:disable-next-line:curly\n    for (;\n        part = parser.exec(query);\n        result[decode(part[1])] = decode(part[2])\n    );\n\n    return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nexport function urlqueryStringify(obj: Object, prefix?: string) {\n    prefix = prefix || '';\n\n    const pairs = [];\n\n    //\n    // Optionally prefix with a '?' if needed\n    //\n    if ('string' !== typeof prefix) {\n        prefix = '?';\n    }\n\n    for (const key in obj) {\n        if (has.call(obj, key)) {\n            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n        }\n    }\n\n    return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n","import { ApiService } from './apiservice';\nimport { getContext } from 'src/litHtmlHelpers';\n\nexport class ArticleService {\n    apiService: any;\n\n    constructor() {\n        this.apiService = getContext(ApiService);\n    }\n\n    public async getList(type: any, params: any) {\n        const data = await this.apiService.get('/articles' + (type === 'feed' ? '/feed' : ''), params);\n\n        return data;\n    }\n\n    public async get(slug: any) {\n        const data = await this.apiService.get('/articles/' + slug);\n\n        return data.article;\n    }\n\n    public async destroy(slug: any) {\n        const result = await this.apiService.delete('/articles/' + slug);\n\n        return result;\n    }\n\n    public async save(article: any) {\n        if (article.slug) {\n            // If we're updating an existing article\n            const data = await this.apiService.put('/articles/' + article.slug, { article: article });\n\n            return data.article;\n        } else {\n            // Otherwise, create a new article\n            const data = await this.apiService.post('/articles/', { article: article });\n\n            return data.article;\n        }\n    }\n\n    public async favorite(slug: any) {\n        const result = await this.apiService.post('/articles/' + slug + '/favorite');\n\n        return result;\n    }\n\n    public async unfavorite(slug: any) {\n        const result = await this.apiService.delete('/articles/' + slug + '/favorite');\n\n        return result;\n    }\n}\n","import { html } from 'lit-html';\r\nimport { registerCustomElement } from '../litHtmlHelpers';\r\nimport './article-preview';\r\n\r\nregisterCustomElement(\r\n    'article-list',\r\n    class extends HTMLElement {\r\n        public _articles: any[] = [];\r\n        public _totalPages: any = [];\r\n        public currentPage: any;\r\n\r\n\r\n\r\n        set articles(v) {\r\n            this._articles = v || [];\r\n            this.render();\r\n        }\r\n\r\n        get articles() {\r\n            return this._articles;\r\n        }\r\n\r\n        set totalPages(v) {\r\n            this._totalPages = v || [];\r\n            this.render();\r\n        }\r\n\r\n        get totalPages() {\r\n            return this._totalPages;\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                ${this.articles.length === 0\r\n                    ? html`\r\n                          <div class=\"article-preview\">\r\n                              No articles are here... yet.\r\n                          </div>\r\n                      `\r\n                    : ''}\r\n\r\n                <!--  if we have articles -->\r\n                ${this.articles.map(article => {\r\n                    return html`\r\n                        <article-preview .article=${article}></article-preview>\r\n                    `;\r\n                })}\r\n\r\n                <!--  all the buttons -->\r\n                ${this.totalPages.length\r\n                    ? html`\r\n                          <nav>\r\n                              <ul class=\"pagination\">\r\n                                  ${this.totalPages.map((pageNumber: number) => {\r\n                                      return html`\r\n                                          <li\r\n                                              class=\"page-item ${pageNumber === this.currentPage ? 'active' : ''}\"\r\n                                              click.delegate=\"setPageCb($pageNumber)\"\r\n                                          >\r\n                                              <a class=\"page-link\">${pageNumber}</a>\r\n                                          </li>\r\n                                      `;\r\n                                  })}\r\n                              </ul>\r\n                          </nav>\r\n                      `\r\n                    : ''}\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext } from '../litHtmlHelpers';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\nimport { getRouter } from 'lit-html-free-router';\r\n\r\nregisterCustomElement(\r\n    'article-preview',\r\n    class extends HTMLElement {\r\n        public article: any;\r\n        public articleService: ArticleService;\r\n        public sharedState: SharedState;\r\n\r\n        constructor() {\r\n            super();\r\n            this.articleService = getContext(ArticleService);\r\n            this.sharedState = getContext(SharedState);\r\n        }\r\n\r\n        public async onToggleFavorited() {\r\n            if (this.sharedState.isAuthenticated) {\r\n                this.article.favorited = !this.article.favorited;\r\n                if (this.article.favorited) {\r\n                    this.article.favoritesCount++;\r\n                    await this.articleService.favorite(this.article.slug);\r\n                } else {\r\n                    this.article.favoritesCount--;\r\n                    await this.articleService.unfavorite(this.article.slug);\r\n                }\r\n                this.render();\r\n            } else {\r\n                getRouter().goto(getRouter().getNavLink('login', 'main').href)\r\n            }\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <div class=\"article-preview\">\r\n                    <div class=\"article-meta\">\r\n                        <a href=\"${'#' + this.article.author.username}\">\r\n                            <img alt=\"profile-picture\" src=${this.article.author.image ? this.article.author.image : ''} />\r\n                        </a>\r\n\r\n                        <div class=\"info\">\r\n                            <a href=\"${'#profile/' + this.article.author.username}\" class=\"author\">\r\n                                ${this.article.author.username}</a\r\n                            >\r\n                            <span class=\"date\">${this.article.createdAt}</span>\r\n                        </div>\r\n\r\n                        <button\r\n                            class=\"btn btn-sm pull-xs-right ${this.article.favorited ? 'btn-primary' : 'btn-outline-primary'}\"\r\n                            @click=${this.onToggleFavorited}\r\n                        >\r\n                            <i class=\"ion-heart\"></i> ${this.article.favoritesCount}\r\n                        </button>\r\n                    </div>\r\n\r\n                    <a href=\"${this.article.slug ? '#article/' + this.article.slug : '#article'}\" class=\"preview-link\">\r\n                        <h1>${this.article.title}</h1>\r\n                        <p>${this.article.description}</p>\r\n                        <span>Read more...</span>\r\n\r\n                        <ul class=\"tag-list\">\r\n                            ${this.article.tagList.map((tag: string) => {\r\n                                html`\r\n                                    <li class=\"tag-default tag-pill tag-outline\">${tag}</li>\r\n                                `;\r\n                            })}\r\n                        </ul>\r\n                    </a>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext, EventAggregator } from '../litHtmlHelpers';\r\nimport { ProfileService } from 'src/resources/services/profileservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\n\r\nregisterCustomElement(\r\n    'profile-comp',\r\n    class extends HTMLElement {\r\n        public username: any;\r\n        public profile: any;\r\n        public curHash: any;\r\n        public curRoute = '';\r\n        public sharedState: SharedState;\r\n        public profileService: ProfileService;\r\n        public eventAggregator: EventAggregator;\r\n\r\n        constructor() {\r\n            super();\r\n            this.eventAggregator = getContext(EventAggregator);\r\n            this.profileService = getContext(ProfileService);\r\n            this.sharedState = getContext(SharedState);\r\n        }\r\n\r\n        connectedCallback() {\r\n            getContext(EventAggregator).subscribe('routeChange', this, this.routechange.bind(this));\r\n        }\r\n\r\n        routechange(x: any) {\r\n            this.curRoute = x.options.name;\r\n            this.render();\r\n        }\r\n\r\n        public async activate(_x: string, params: any) {\r\n            this.username = params.name;\r\n            this.profile = await this.profileService.get(this.username);\r\n        }\r\n\r\n        public isUser() {\r\n            if (this.profile) {\r\n                return this.profile.username === this.sharedState.currentUser && this.sharedState.currentUser.username;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <div class=\"profile-page\">\r\n                    <div class=\"user-info\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n                                    <img\r\n                                        if.bind=\"profile\"\r\n                                        src=${this.profile ? this.profile.image : undefined}\r\n                                        class=\"user-img\"\r\n                                    />\r\n                                    <div if.bind=\"!profile\" class=\"user-img\"></div>\r\n                                    <h4>${this.profile.username ? this.profile.username : 'loading..'}</h4>\r\n                                    <p inner-html.bind=\"profile.bio | formatHtml\"></p>\r\n                                    <button\r\n                                        class=\"btn btn-sm btn-outline-secondary action-btn\"\r\n                                        if.bind=\"!isUser() && profile\"\r\n                                        click.delegate=\"onToggleFollowing()\"\r\n                                    >\r\n                                        <i class=\"ion-plus-round\"></i>\r\n                                        &nbsp; ${this.profile.following ? 'Unfollow' : 'Follow'} ${this.profile.username}\r\n                                    </button>\r\n                                    ${this.isUser() && this.profile\r\n                                        ? html`\r\n                                              <a href=\"#settings\" class=\"btn btn-sm btn-outline-secondary action-btn\">\r\n                                                  <i class=\"ion-gear-a\"></i> Edit Profile Settings\r\n                                              </a>\r\n                                          `\r\n                                        : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n                                <div class=\"articles-toggle\">\r\n                                    <ul class=\"nav nav-pills outline-active\">\r\n                                        <li class=\"nav-item\">\r\n                                            <a\r\n                                                class=\"nav-link ${this.curRoute !== 'Favorites' ? 'active' : ''}\"\r\n                                                href=\"#profile/${this.username}/\"\r\n                                                >My Posts</a\r\n                                            >\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a\r\n                                                class=\"nav-link ${this.curRoute === 'Favorites' ? 'active' : ''}\"\r\n                                                href=\"#profile/${this.username}/favorites\"\r\n                                                >Favorited Posts</a\r\n                                            >\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <free-router name=\"subProfile\"> </free-router>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { ApiService } from './apiservice';\nimport { getContext } from 'src/litHtmlHelpers';\n\nexport class ProfileService {\n    public apiService: ApiService;\n    constructor() {\n        this.apiService = getContext(ApiService);\n    }\n\n    public async get(username: string) {\n        const data = await this.apiService.get('/profiles/' + username);\n\n        return data.profile;\n    }\n\n    public async follow(username: string) {\n        const result = await this.apiService.post('/profiles/' + username + '/follow');\n\n        return result;\n    }\n\n    public async unfollow(username: string) {\n        const result = await this.apiService.delete('/profiles/' + username + '/follow');\n\n        return result;\n    }\n}\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext } from '../litHtmlHelpers';\r\nimport { UserService } from 'src/resources/services/userservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\n\r\nregisterCustomElement(\r\n    'auth-comp',\r\n    class extends HTMLElement {\r\n        public userService: UserService;\r\n        public sharedState: SharedState;\r\n        public type = '';\r\n        public username = '';\r\n        public passwordConfirm = '';\r\n        public email = '';\r\n        public emailConfirm = '';\r\n        public password = '';\r\n        public errors: any[] = [];\r\n        public controller: any;\r\n\r\n        constructor() {\r\n            super();\r\n            this.userService = getContext(UserService);\r\n            this.sharedState = getContext(SharedState);\r\n        }\r\n\r\n        public async activate(_route: string, _params: any, route: any) {\r\n            this.type = route.name;\r\n        }\r\n\r\n        public get canSave() {\r\n            if (this.type === 'Login') {\r\n                return this.email !== '' && this.password !== '';\r\n            } else {\r\n                return (\r\n                    this.username !== '' &&\r\n                    this.email !== '' &&\r\n                    this.password !== '' &&\r\n                    this.password === this.passwordConfirm &&\r\n                    this.email === this.emailConfirm\r\n                );\r\n            }\r\n        }\r\n\r\n        public async submitForm() {\r\n            this.errors = [];\r\n\r\n            const credentials = {\r\n                username: this.username,\r\n                email: this.email,\r\n                password: this.password\r\n            };\r\n\r\n            try {\r\n                await this.userService.attemptAuth(this.type, credentials);\r\n                location.hash = 'home';\r\n            } catch (e) {\r\n                const err: any = await Promise.resolve(e);\r\n                for (const k in err.errors) {\r\n                    if (err.errors && err.errors[k]) {\r\n                        this.errors.push(\r\n                            err.errors[k].map((x: any) => {\r\n                                return k + ': ' + x;\r\n                            })\r\n                        );\r\n                    }\r\n                }\r\n                this.render();\r\n            }\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <div class=\"auth-page\">\r\n                    <div class=\"container page\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n                                <h1 class=\"text-xs-center\">Sign ${this.type === 'login' ? 'in' : 'up'}</h1>\r\n                                <p class=\"text-xs-center\">\r\n                                    ${this.type === 'Register'\r\n                                        ? html`\r\n                                              <a href=\"#login\">Have an account?</a>\r\n                                          `\r\n                                        : html`\r\n                                              <a href=\"#Register\">Need an account?</a>\r\n                                          `}\r\n                                </p>\r\n\r\n                                <ul class=\"error-messages\">\r\n                                    ${this.errors.map(error => {\r\n                                        return html`<li >\r\n                                        ${error}\r\n                                    </li>`;\r\n                                    })}\r\n                                </ul>\r\n\r\n                                <form>\r\n                                    ${this.type === 'Register'\r\n                                        ? html`\r\n                                              <fieldset class=\"form-group\">\r\n                                                  <input\r\n                                                      class=\"form-control form-control-lg\"\r\n                                                      type=\"text\"\r\n                                                      autocomplete=\"username\"\r\n                                                      placeholder=\"Your Name\"\r\n                                                      @input=${(e: any) => {\r\n                                                          this.username = e.target.value;\r\n                                                          this.render();\r\n                                                      }}\r\n                                                  />\r\n                                              </fieldset>\r\n                                          `\r\n                                        : ''}\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"text\"\r\n                                            autocomplete=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            @input=${(e: any) => {\r\n                                                this.email = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    ${this.type === 'Register'\r\n                                        ? html`\r\n                                              <fieldset class=\"form-group\">\r\n                                                  <input\r\n                                                      class=\"form-control form-control-lg\"\r\n                                                      type=\"text\"\r\n                                                      autocomplete=\"new-email\"\r\n                                                      placeholder=\"Confirm Email\"\r\n                                                      @input=${(e: any) => {\r\n                                                          this.emailConfirm = e.target.value;\r\n                                                          this.render();\r\n                                                      }}\r\n                                                  />\r\n                                              </fieldset>\r\n                                          `\r\n                                        : ''}\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"password\"\r\n                                            autocomplete=\"current-password\"\r\n                                            placeholder=\"Password\"\r\n                                            @input=${(e: any) => {\r\n                                                this.password = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    ${this.type === 'Register'\r\n                                        ? html`\r\n                                              <fieldset class=\"form-group\">\r\n                                                  <input\r\n                                                      class=\"form-control form-control-lg\"\r\n                                                      type=\"password\"\r\n                                                      autocomplete=\"new-password\"\r\n                                                      placeholder=\"Confirm Password\"\r\n                                                      @input=${(e: any) => {\r\n                                                          this.passwordConfirm = e.target.value;\r\n                                                          this.render();\r\n                                                      }}\r\n                                                  />\r\n                                              </fieldset>\r\n                                          `\r\n                                        : ''}\r\n\r\n                                    <!-- PS! do not use button in forms, need to improve override default -->\r\n                                    <input\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                                        @click=${this.submitForm}\r\n                                        .disabled=${!this.canSave}\r\n                                        .value=\"Sign ${this.type === 'Login' ? 'in' : 'up'}\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { ApiService } from './apiservice';\nimport { JwtService } from './jwtservice';\nimport { SharedState } from '../state/sharedstate';\nimport { getContext } from 'src/litHtmlHelpers';\n\nexport class UserService {\n    public apiService: ApiService;\n    public jwtService: JwtService;\n    public sharedState: SharedState;\n\n    constructor() {\n        this.jwtService = getContext(JwtService);\n        this.sharedState = getContext(SharedState);\n        this.apiService = getContext(ApiService);\n    }\n\n    // Verify JWT in localstorage with server & load user's info.\n    // This runs once on application startup.\n    public async populate() {\n        if (this.jwtService.getToken()) {\n            const data = await this.apiService.get('/user');\n            this.setAuth(data.user);\n        } else {\n            // Remove any potential remnants of previous auth states\n            this.purgeAuth();\n        }\n    }\n\n    public setAuth(user: any) {\n        // Save JWT sent from server in localstorage\n        this.jwtService.saveToken(user.token);\n        this.sharedState.saveState(user);\n        this.sharedState.setState();\n    }\n\n    public purgeAuth() {\n        // Remove JWT from localstorage\n        this.jwtService.destroyToken();\n        this.sharedState.resetState();\n    }\n\n    public async attemptAuth(type: any, credentials: any) {\n        const route = type === 'Login' ? '/login' : '';\n        const data = await this.apiService.post('/users' + route, { user: credentials });\n        this.setAuth(data.user);\n\n        return data;\n    }\n\n    public async update(user: any) {\n        const data = await this.apiService.put('/user', { user });\n        this.sharedState.currentUser = data.user;\n\n        return data.user;\n    }\n}\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext } from '../litHtmlHelpers';\r\nimport { UserService } from 'src/resources/services/userservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\n\r\nregisterCustomElement(\r\n    'settings-comp',\r\n    class extends HTMLElement {\r\n        public passwordConfirm: string;\r\n        public password: string;\r\n        public errors: any[] = [];\r\n        public success: string;\r\n        public userService: UserService;\r\n        public sharedState: SharedState;\r\n\r\n        constructor() {\r\n            super();\r\n            this.userService = getContext(UserService);\r\n            this.sharedState = getContext(SharedState);\r\n        }\r\n\r\n        public async update() {\r\n            try {\r\n                await this.userService.update(this.sharedState.currentUser);\r\n                this.success = 'Updated successfully';\r\n                setTimeout(() => {\r\n                    this.success = null;\r\n                }, 1500);\r\n            } catch (e) {\r\n                const err: any = await Promise.resolve(e);\r\n                for (const k in err.errors) {\r\n                    if (err.errors && err.errors[k]) {\r\n                        this.errors.push(\r\n                            err.errors[k].map((x: any) => {\r\n                                return k + ': ' + x;\r\n                            })\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        get canSave() {\r\n            return (\r\n                \r\n                this.sharedState && this.sharedState.currentUser && this.sharedState.password === this.passwordConfirm\r\n            );\r\n        }\r\n\r\n        public logout() {\r\n            this.userService.purgeAuth();\r\n            location.hash = 'home'\r\n          }\r\n\r\n        public render() {\r\n            return html`\r\n                <div class=\"settings-page\">\r\n                    <div class=\"container page\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n                                <h1 class=\"text-xs-center\">Your Settings</h1>\r\n\r\n                                <ul class=\"error-messages\">\r\n                                    ${this.errors.map(error => {\r\n                                        return html`\r\n                                            <li>\r\n                                                ${error}\r\n                                            </li>\r\n                                        `;\r\n                                    })}\r\n                                </ul>\r\n\r\n                                <ul class=\"error-success\">\r\n                                    ${this.success}\r\n                                </ul>\r\n\r\n                                <form>\r\n                                    <fieldset>\r\n                                        <fieldset class=\"form-group\">\r\n                                            <input\r\n                                                class=\"form-control\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"URL of profile picture\"\r\n                                                .value =${this.sharedState.currentUser.image}\r\n                                                @input=${(e: any) => {\r\n                                                    this.sharedState.currentUser.image = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            />\r\n                                        </fieldset>\r\n\r\n                                        <fieldset class=\"form-group\">\r\n                                            <input\r\n                                                class=\"form-control form-control-lg\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Your Name\"\r\n                                                autocomplete=\"usename\"\r\n                                                .value =${this.sharedState.currentUser.username}\r\n                                                @input=${(e: any) => {\r\n                                                    this.sharedState.currentUser.username = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            />\r\n                                        </fieldset>\r\n\r\n                                        <fieldset class=\"form-group\">\r\n                                            <textarea\r\n                                                class=\"form-control form-control-lg\"\r\n                                                rows=\"8\"\r\n                                                placeholder=\"Short bio about you\"\r\n                                                autocomplete=\"bio\"\r\n                                                .value =${this.sharedState.currentUser.bio}\r\n                                                @input=${(e: any) => {\r\n                                                    this.sharedState.currentUser.bio = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            ></textarea>\r\n                                        </fieldset>\r\n\r\n                                        <fieldset class=\"form-group\">\r\n                                            <input\r\n                                                class=\"form-control form-control-lg\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Email\"\r\n                                                autocomplete=\"email\"\r\n                                                @input=${(e: any) => {\r\n                                                    this.sharedState.currentUser.email = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            />\r\n                                        </fieldset>\r\n\r\n                                        <fieldset class=\"form-group\">\r\n                                            <input\r\n                                                class=\"form-control form-control-lg\"\r\n                                                type=\"password\"\r\n                                                autocomplete=\"current-password\"\r\n                                                placeholder=\"Password\"\r\n                                                 @input=${(e: any) => {\r\n                                                    this.password = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            />\r\n                                        </fieldset>\r\n\r\n                                        <fieldset class=\"form-group\">\r\n                                            <input\r\n                                                class=\"form-control form-control-lg\"\r\n                                                type=\"password\"\r\n                                                autocomplete=\"new-password\"\r\n                                                placeholder=\"Confirm new password\"\r\n                                                @input=${(e: any) => {\r\n                                                    this.passwordConfirm = e.target.value;\r\n                                                    this.render();\r\n                                                }}\r\n                                            />\r\n                                        </fieldset>\r\n\r\n                                        <!-- PS! do not use button in forms, need to improve override default -->\r\n                                        <input\r\n                                            type=\"button\"\r\n                                            class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                                            @click=${this.update}\r\n                                            .disabled.bind=${!this.canSave}\r\n                                            value=\"Update Settings\"\r\n                                        />\r\n                                    </fieldset>\r\n                                </form>\r\n\r\n                                <hr />\r\n                                <button class=\"btn btn-outline-danger\" @click=${this.logout}>\r\n                                    Or click here to logout.\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext } from '../litHtmlHelpers';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport { getRouter } from 'lit-html-free-router';\r\n\r\nregisterCustomElement(\r\n    'editor-comp',\r\n\r\n    class extends HTMLElement {\r\n        public routeConfig: any;\r\n        public slug: any;\r\n        public tag: string;\r\n        public article: any = {\r\n            title: '',\r\n            description: '',\r\n            body: '',\r\n            tagList: []\r\n        };\r\n        public articleService: ArticleService;\r\n\r\n        constructor() {\r\n            super();\r\n            this.articleService = getContext(ArticleService);\r\n        }\r\n\r\n        public tagChanged(newValue: string, _oldValue: any) {\r\n            if (newValue !== undefined && newValue !== '') {\r\n                this.addTag(this.tag);\r\n            }\r\n        }\r\n\r\n        public async activate(params: any, routeConfig: any) {\r\n            this.routeConfig = routeConfig;\r\n            this.slug = params.slug;\r\n\r\n            if (this.slug) {\r\n                return (this.article = await this.articleService.get(this.slug));\r\n            } else {\r\n                this.article = {\r\n                    title: '',\r\n                    description: '',\r\n                    body: '',\r\n                    tagList: []\r\n                };\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        public addTag(tag: any) {\r\n            this.article.tagList.push(tag);\r\n        }\r\n\r\n        public removeTag(tag: any) {\r\n            this.article.tagList.splice(this.article.tagList.indexOf(tag), 1);\r\n        }\r\n\r\n        public async publishArticle() {\r\n            const article = await this.articleService.save(this.article);\r\n            this.slug = article.slug;\r\n            getRouter().goto('editor/:slug', { slug: this.slug });\r\n        }\r\n\r\n        public render() {\r\n            console.log('wow');\r\n            return html`\r\n                <div class=\"editor-page\">\r\n    <div class=\"container page\">\r\n      <div class=\"row\">\r\n\r\n        <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n          <form>\r\n            <fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input \r\n                type=\"text\" \r\n                class=\"form-control form-control-lg\" \r\n                placeholder=\"Article Title\" \r\n    \r\n                .value=${this.article.title}\r\n                    @blur=${(e: any) => (this.article.title = e.target.value)}\r\n       >\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"What's this article about?\" \r\n                .value=${this.article.description}\r\n                    @blur=${(e: any) => (this.article.description = e.target.value)}\r\n            />\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <textarea class=\"form-control\" rows=\"8\" placeholder=\"Write your article (in markdown)\" \r\n      \r\n                .value=${this.article.body}\r\n                    @blur=${(e: any) => (this.article.body = e.target.value)}\r\n                ></textarea>\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Enter tags\" \r\n                    .value=${this.tag}\r\n                    @blur=${(e: any) => (this.tag = e.target.value)}>\r\n        \r\n                <div class=\"tag-list\">\r\n                    ${this.article.tagList.map((tag: any) => {\r\n                        return html`\r\n                            <span repeat.for=\"$tag of article.tagList\" class=\"tag-default tag-pill\">\r\n                                <i class=\"ion-close-round\" @click=${() => {\r\n                                    this.removeTag(tag);\r\n                                }}\"></i>\r\n                                ${tag}</span\r\n                            >\r\n                        `;\r\n                    })}\r\n                  \r\n                </div>\r\n              </fieldset>\r\n\r\n              <!-- PS! do not use button in forms, need to improve override default -->\r\n              <input type=\"button\" class=\"btn btn-lg pull-xs-right btn-primary\" type=\"button\" @click=${\r\n                  this.publishArticle\r\n              } value=\"Publish Article\">\r\n            \r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement } from '../litHtmlHelpers';\r\n\r\nregisterCustomElement(\r\n    'acticle-comp',\r\n    class extends HTMLElement {\r\n        public render() {\r\n            return html`\r\n                acticle-comp\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext, EventAggregator } from '../litHtmlHelpers';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport '../components/article-list'\r\n\r\nregisterCustomElement(\r\n    'profile-article-route',\r\n    class extends HTMLElement {\r\n        public username: any;\r\n        public articles: any[] = [];\r\n        public pageNumber: any;\r\n        public totalPages: any;\r\n        public currentPage = 1;\r\n        public limit = 10;\r\n        public articleService: ArticleService;\r\n        public eventAggregator: EventAggregator;\r\n\r\n        constructor() {\r\n            super();\r\n            this.articleService = getContext(ArticleService);\r\n            this.eventAggregator = getContext(EventAggregator);\r\n        }\r\n\r\n        public activate(_x: string, params: any) {\r\n            this.username = params.name;\r\n\r\n            return this.getArticles();\r\n        }\r\n\r\n        public async getArticles() {\r\n            const queryParams = {\r\n                limit: this.limit,\r\n                offset: this.limit * (this.currentPage - 1),\r\n                author: this.username\r\n            };\r\n\r\n            const response = await this.articleService.getList('all', queryParams);\r\n\r\n            this.articles.splice(0, this.articles.length);\r\n            this.articles.push(...response.articles);\r\n\r\n            // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n            this.totalPages = Array.from(new Array(Math.ceil(response.articlesCount / this.limit)), (_val, index) => index + 1);\r\n            this.eventAggregator.publish('articleChange');\r\n            this.render()\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <article-list\r\n                    .articles=${this.articles}\r\n                    .totalPages=${this.totalPages}\r\n                    .pageNumber=${this.pageNumber}\r\n                    .currentPage=${this.currentPage}\r\n                    set-page-cb.trigger=\"setPageTo(pageNumber)\"\r\n                ></article-list>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, EventAggregator, getContext } from '../litHtmlHelpers';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\n\r\nregisterCustomElement(\r\n    'profile-favorites-route',\r\n    class extends HTMLElement {\r\n        public username: any;\r\n        public articles: any[] = [];\r\n        public pageNumber: any;\r\n        public totalPages: any;\r\n        public currentPage = 1;\r\n        public limit = 10;\r\n        public articleService: ArticleService;\r\n        public eventAggregator: EventAggregator;\r\n\r\n        constructor() {\r\n            super();\r\n            this.articleService = getContext(ArticleService);\r\n            this.eventAggregator = getContext(EventAggregator);\r\n        }\r\n\r\n        public activate(_x: string, params: any) {\r\n            this.username = params.name;\r\n\r\n            return this.getArticles();\r\n        }\r\n\r\n        public async getArticles() {\r\n            const queryParams = {\r\n                limit: this.limit,\r\n                offset: this.limit * (this.currentPage - 1),\r\n                author: this.username,\r\n                favorited: true\r\n            };\r\n\r\n            const response = await this.articleService.getList('all', queryParams);\r\n            this.articles.splice(0, this.articles.length);\r\n            this.articles.push(...response.articles);\r\n\r\n            // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n            this.totalPages = Array.from(new Array(Math.ceil(response.articlesCount / this.limit)), (_val, index) => index + 1);\r\n            this.eventAggregator.publish('articleChange');\r\n            this.render()\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <article-list\r\n                    .articles=${this.articles}\r\n                    .totalPages=${this.totalPages}\r\n                    .pageNumber=${this.pageNumber || 1}\r\n                    .currentPage=${this.currentPage}\r\n                    set-page-cb.trigger=\"setPageTo(pageNumber)\"\r\n                ></article-list>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport './footer-section';\r\nimport './header-section';\r\n\r\nimport { registerCustomElement } from '../litHtmlHelpers';\r\nregisterCustomElement(\r\n    'app-main',\r\n    class extends HTMLElement {\r\n        public render() {\r\n            return html`\r\n                <header-section></header-section>\r\n                <free-router name=\"main\"></free-router>\r\n                <footer-section></footer-section>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement } from '../litHtmlHelpers';\r\n\r\nregisterCustomElement(\r\n    'footer-section',\r\n    class extends HTMLElement {\r\n        public render() {\r\n            return html`\r\n                <footer>\r\n                    <div class=\"container\">\r\n                        <a href=\"/\" class=\"logo-font\">conduit</a>\r\n\r\n                        <span class=\"attribution\">\r\n                            An interactive learning project from\r\n                            <a href=\"https://thinkster.io\">Thinkster</a>. Code &amp; design licensed under MIT.\r\n                        </span>\r\n                    </div>\r\n                </footer>\r\n            `;\r\n        }\r\n    }\r\n);\r\n","import { html } from 'lit-html';\r\nimport { registerCustomElement, getContext, EventAggregator } from '../litHtmlHelpers';\r\nimport { SharedState } from '../resources/state/sharedstate';\r\n\r\nregisterCustomElement(\r\n    'header-section',\r\n    class extends HTMLElement {\r\n        public activeRoute;\r\n\r\n        connectedCallback(){\r\n            getContext(EventAggregator).subscribe('routeChange', this, this.routechange.bind(this))\r\n        }\r\n\r\n        routechange(x: any){\r\n            this.activeRoute = x.name;\r\n            this.render()\r\n        }\r\n\r\n        public render() {\r\n            return html`\r\n                <nav class=\"navbar navbar-light\">\r\n                    <div class=\"container\">\r\n                        <a class=\"navbar-brand\" href=\"#home\">conduit</a>\r\n                        <ul class=\"nav navbar-nav pull-xs-right\">\r\n                            <li class=\"${'nav-item' + (this.activeRoute === 'home' ? ' active' : '')}\">\r\n                                <a class=\"nav-link\" href=\"#home\">Home</a>\r\n                            </li>\r\n\r\n                            ${getContext(SharedState).isAuthenticated ?\r\n                                html`\r\n                                    <li class=\"${'nav-item' + (this.activeRoute === 'create' ? ' active' : '')}\">\r\n                                        <a class=\"nav-link\" href=\"#editor\"> <i class=\"ion-compose\"></i>&nbsp;New Post </a>\r\n                                    </li>\r\n\r\n                                    <li class=\"${'nav-item' + (this.activeRoute === 'settings' ? ' active' : '')}\">\r\n                                        <a class=\"nav-link\" href=\"#settings\"> <i class=\"ion-gear-a\"></i>&nbsp;Settings </a>\r\n                                    </li>\r\n                                `:''}\r\n                            ${!getContext(SharedState).isAuthenticated ?\r\n                                html`\r\n                                    <li class=\"${'nav-item' + (this.activeRoute === 'login' ? ' active' : '')}\">\r\n                                        <a class=\"nav-link\" href=\"#login\"><i class=\"ion-compose\"></i>Sign in</a>\r\n                                    </li>\r\n\r\n                                    <li class=\"${'nav-item' + (this.activeRoute === 'register' ? ' active' : '')}\">\r\n                                        <a class=\"nav-link\" href=\"#register\"><i class=\"ion-compose\"></i>Sign up</a>\r\n                                    </li>\r\n                                `:''}\r\n                            ${getContext(SharedState).isAuthenticated ?\r\n                                html`\r\n                                    <li class=\"${'nav-item' + (this.activeRoute === 'profile' ? ' active' : '')}\">\r\n                                        <a class=\"nav-link\" href=\"${'#profile/' + getContext(SharedState).currentUser.username}\"\r\n                                            >${getContext(SharedState).currentUser.username}</a\r\n                                        >\r\n                                    </li>\r\n                                `:''}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            `;\r\n        }\r\n    }\r\n);\r\n"]}