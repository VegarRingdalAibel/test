{"version":3,"sources":["samples/grid-sample/src/fuseHmrPlugin.ts","samples/grid-sample/src/hmr.ts","packages/core/src/requestRender.ts","packages/core/src/symbols.ts","packages/core/src/logger.ts","packages/core/src/attribute.ts","packages/core/src/property.ts","packages/core/src/customElement.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/index.ts","packages/grid/src/elements/free-grid-body.ts","packages/grid/src/elements/free-grid-cell-row.ts","packages/grid/src/elements/free-grid-cell-filter.ts","packages/grid/src/elements/free-grid-group-filter.ts","packages/grid/src/elements/free-grid-group-label.ts","packages/grid/src/elements/free-grid-group-row.ts","packages/grid/src/elements/free-grid-header.ts","packages/grid/src/elements/free-grid-footer.ts","packages/grid/src/elements/free-grid-panel.ts","packages/grid/src/scrollEvent.ts","packages/grid/src/dragEvent.ts","packages/grid/src/elements/resizeColumnElement.ts","packages/grid/src/elements/sorticonElement.ts","packages/grid/src/elements/free-grid-cell-label.ts","packages/grid/src/elements/free-grid-row.ts","packages/grid/src/elements/free-grid-row-group.ts","packages/grid/src/elements/generate.ts","packages/grid/src/arrayFilter.ts","packages/grid/src/arraySort.ts","packages/grid/src/arrayGrouping.ts","packages/grid/src/arrayUtils.ts","packages/grid/src/selection.ts","packages/grid/src/entity.ts","packages/grid/src/gridInterface.ts","packages/grid/src/index.ts","samples/grid-sample/src/components/dummyData.ts","samples/grid-sample/src/components/dummyDataGenerator.ts","samples/grid-sample/src/components/colSetup.ts","samples/grid-sample/src/components/app-component.ts","samples/grid-sample/src/index.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","custom_elements_hmr_polyfill_1","NONE","elementName","console","log","ctx","isConnected","__wait","requestAnimationFrame","Promise","resolve","render","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","skipElements","symbols_1","WeakMap","skip","context","map","has","count","set","get","tag","indexOf","id","getID","registerLoggerContext","text","x","Math","floor","length","idOnly","y","Array","join","options","_class","prop","Object","defineProperty","tagName","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","configurable","attribute","replace","toLowerCase","Map","push","extended","elementClass","value","prototype","isArray","concat","base","constructor","result","template","call","then","templates","lit_html_1","eventContext","updated","setTimeout","connectedCallback","disconnectedCallback","attributeChangedCallback","newValue","nameProp","valuesChangedMethod","customElements","define","hmrCache","channel","args","i","len","func","apply","events","filter","event","state","keys","Set","addEventListener","newState","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","HTMLElement","classList","config","connector","style","top","panelHeight","__rowHeight","bottom","footerHeight","ref","handleEvent","e","type","removeEventListener","scrollheight","displayedDataset","__rowWidth","rowPositionCache","row","entity","data","__group","core_1","display","height","cellHeight","width","group","cellPosition","cell","rows","updateCallback","rowNo","beforeEditCallbackFn","autoUpdateData","target","checked","valueAsDate","valueAsNumber","publishEvent","afterEditCallbackFn","change","editEventType","input","renderRowCallBackFn","readonly","disabled","getComputedStyle","getPropertyValue","coltype","filterable","currentValue","placeholder","filterCallback","t","opacity","indeterminate","beforeFilterCallbackFn","auto","enterKeyDown","keycode","keyCode","which","boolstyle","setState","classname","renderFilterCallBackFn","left","__left","grouping","groupingSet","curleft","scrollLeft","groups","mouseEnter","getElementsByClassName","remove","mouseLeave","click","removeGroup","title","field","lastScrollTop","scrollTop","triggerEvent","document","activeElement","blur","rowHeight","cacheLength","collectionLength","cacheTotalHeight","contentHeight","clientHeight","scrolltop","isDownScroll","scrollbars","abs","currentRow","cache","currentTop","needToUpdate","newTop","sort","dragCell","dragColumnBlock","delayDragEventTimer","_connector","drop","allowGrouping","groupingCallback","_e","_col","mouseUp","mouseMove","clearTimeout","body","removeChild","clientY","documentElement","clientX","button","createElement","textContent","header","appendChild","daCell","assign","doCell","reRender","toggle","originX","originalColumnWidth","preventDefault","movment","screenX","movementX","newColumnWidth","totalWidth","interface","reduce","agg","element","mouseDown","col","ascTemplate","descTemplate","sortable","sortNo","sortAscending","label","sortCallback","mouseup","beforeSortCallbackFn","mousedown","dragEvent_1","mouseenter","mouseleave","renderLabelCallBackFn","sorticonElement_1","resizeColumnElement_1","disableDragDrop","currentHeight","transform","rowClick","selection","highlightRow","isSelected","changeGrouping","__groupExpanded","groupCollapse","__groupID","groupExpand","defaultMarkup","__groupName","__groupTotal","__groupLvl","scroll","scrollEvent_1","enter","leave","operators","EQUAL","LESS_THAN_OR_EQUAL_TO","GREATER_THAN_OR_EQUAL_TO","LESS_THAN","GREATER_THAN","CONTAINS","NOT_EQUAL_TO","DOES_NOT_CONTAIN","BEGIN_WITH","END_WITH","lastFilter","getLastFilter","getFilterFromType","runQueryOn","objArray","ObjFilter","resultArray","forEach","rowValue","filterValue","filterOperator","operator","newFilterOperator","typeBool","true","false","Number","undefined","charAt","substr","err","substring","lastSort","curSort","localeCompareCode","localeCompareOptions","sensitivity","setLocaleCompare","code","reset","defaultSortAttribute","asc","no","SetConfigSort","configColumns","clearConfigSort","setLastSort","array","setOrderBy","param","useSetValue","exist","getOrderBy","runOrderbyOn","thisSort","obj1","obj2","currentObj","v1","v2","getLocaleCompareResult","x1","x2","resultLocale","localeCompare","slice","expanded","arrayToGroup","keepExpanded","groupBy","groupNo","mainGroup","createMainGrouping","childGroupArray","newSubGroup","groupChildren","expandOneOrAll","getExpanded","from","setExpanded","getGrouping","setGrouping","g","all","subGroup","collection","mainGroups","__groupChildren","sg","collapseOneOrAll","delete","tempGroupArray","curGroup","tempValue","gidm","toString","rebuiltChildrenArray","child","gidc","gridInterface","arrayFilter","arrayFilter_1","arraySort","arraySort_1","arrayGrouping","arrayGrouping_1","sortCallbackBinded","bind","filterCallbackBinded","groupingCallbackBinded","removeGroupBinded","orderBy","addToCurrentSort","groupingFields","fixed","full","resetSort","newSort","groupedArray","sortingSet","groupingExpanded","resetGrouping","getCurrentFilter","currentGrouping","splice","newdata","filteredDataset","_event","newF","groupings","flatMap","sortAsc","shiftKey","Date","columns","f","completeDataset","selectedRows","getKey","getRowKey","deSelectAll","clear","size","isSel","currentselectedRows","getSelectedRows","currentKeyKode","__selectInternal","lastRowSelected","selectionMode","lastKeyKodeUsed","ctrlKey","select","deSelect","oldSel","selectRange","newSel","setSelectedRows","error","__KEY","getRowKeys","start","end","index","newRows","__editedProps","__originalValues","__currentValues","__newprops","__edited","obj","update","__CONFIG","__DATASET_ALL","__DATASET_FILTERED","__DATASET_VIEW","__subscribers","currentEntity","cellheight","_c","__cellRows","__arrayUtils","arrayUtils_1","__selection","selection_1","manualConfigChange","setData","olddataSetlength","o","Proxy","entity_1","__freeGrid","node","getElementsByTagName","resetRowCache","next","prev","first","last","edited","__controller","keep","callable","connectGrid","freeGrid","disconnectGrid","rowCache","__DATASOURCE_INTERFACE","eventName","bubbles","detail","rowsNeeded","round","generate_1","totalGenerated","internalDataArray","generateData","dummyArray","random","x3","x4","date","setDate","getDate","word1","word2","word3","word4","word5","word6","word7","word8","word9","word10","word11","word12","word13","word14","word15","word16","word17","word18","word19","word20","word21","word22","word23","word24","word25","word26","word27","word28","word29","word31","word32","word33","word34","word35","word36","number","bool","setup","word","dummyDataGenerator","dummyDataGenerator_1","grid_1","colSetup_1","replaceData","addData"],"mappings":"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AAKC,qBAAqB,kBAAkB;cACrDD,QAAQA,KAAKnS,cAAc,KAAKwD,UAAU1I,OAAOiF;YACjDoS,KAAKnS,YAAY,KAAKwD,UAAU1I,OAAOiF;YACvCoS,KAAK9S,aAAa,KAAKmE,UAAU1I,OAAOuE;YACxC,KAAKmE,UAAU1I,OAAOiF,gBAAgB;;;;YAI1C,KAAK/L;UACLH,QAAQoc,MAAM;UAEd1X,kBAAOA,mBAAQ;;;;;;8BApFlC4D,qBAAc;;;;;;;;gBCJX,QACA,eACA,MACA,cACA,UACA,UACA,MACA,gBACA,SACA,SACA,MACA,eACA,QACA,UACA,MACA,WACA,WACA,SACA,MACA,gBACA,SACA,SACA,MACA,gBACA,SACA,SACA,MACA,SACA,UACA,QACA,MACA,cACA,aACA,WACA,MACA,kBACA,OACA,SACA,MACA,mBACA,WACA,UACA,MACA,iBACA,WACA,YACA,MACA,cACA,SACA,SACA,MACA,YACA,QACA,WACA,MACA,oBACA,QACA,WACA,MACA,kBACA,UACA,YACA,MACA,cACA,SACA,WACA,MACA,YACA,aACA,UACA,MACA,eACA,WACA,YACA,MACA,iBACA,YACA,UACA,MACA,QACA,WACA,aACA,MACA,cACA,WACA,WACA,MACA,eACA,QACA,eACA,MACA,YACA,YACA,UACA,MACA,QACA,WACA,aACA,MACA,eACA,QACA,cACA,MACA,kBACA,UACA,YACA,MACA,cACA,OACA,UACA,MACA,gBACA,QACA,aACA,MACA,YACA,WACA,WACA,MACA,YACA,SACA,QACA,MACA,eACA,SACA,UACA,MACA,SACA,cACA,eACA,MACA,cACA,SACA,SACA,MACA,cACA,aACA,cACA,MACA,WACA,WACA,SACA,MACA,eACA,UACA,UACA,MACA,WACA,aACA,YACA,MACA,mBACA,WACA,YACA,MACA,YACA,SACA,WACA,MACA,kBACA,SACA,QACA,MACA,cACA,SACA,UACA,MACA,UACA,QACA,UACA,MACA,YACA,SACA,SACA,MACA,aACA,QACA,WACA,MACA,mBACA,UACA,WACA,MACA,gBACA,UACA,QACA,MACA,aACA,SACA,cACA,MACA,SACA,UACA,WACA,MACA,YACA,eACA,YACA,MACA,YACA,QACA,UACA,MACA,WACA,UACA,UACA,MACA,eACA,UACA,WACA,MACA,eACA,SACA,aACA,MACA,aACA,gBACA,UACA,MACA,WACA,SACA,UACA,MACA,eACA,aACA,aACA,MACA,cACA,QACA,UACA,MACA,UACA,QACA,QACA,MACA,qBACA,QACA,YACA,MACA,kBACA,SACA,UACA,MACA,mBACA,QACA,SACA,MACA,eACA,SACA,aACA,MACA,eACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,UACA,SACA,SACA,MACA,cACA,SACA,SACA,MACA,YACA,SACA,QACA,MACA,iBACA,UACA,cACA,MACA,SACA,WACA,YACA,MACA,kBACA,SACA,UACA,MACA,cACA,UACA,UACA,MACA,YACA,QACA,aACA,MACA,WACA,UACA,SACA,MACA,eACA,UACA,WACA,MACA,aACA,SACA,UACA,MACA,aACA,SACA,WACA,MACA,gBACA,OACA,UACA,MACA,kBACA,UACA,UACA,MACA,YACA,UACA,UACA,MACA,kBACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,mBACA,SACA,UACA,MACA,aACA,OACA,eACA,MACA,YACA,UACA,YACA,MACA,cACA,SACA,YACA,MACA,cACA,UACA,YACA,MACA,iBACA,SACA,WACA,MACA,cACA,YACA,UACA,MACA,mBACA,QACA,WACA,MACA,YACA,WACA,YACA,MACA,aACA,UACA,SACA,MACA,eACA,UACA,aACA,MACA,eACA,UACA,SACA,MACA,aACA,QACA,WACA,MACA,aACA,UACA,UACA,MACA,eACA,SACA,YACA,MACA,mBACA,SACA,SACA,MACA,kBACA,UACA,SACA,MACA,aACA,UACA,SACA,MACA,WACA,SACA,aACA,MACA,eACA,YACA,WACA,MACA,qBACA,UACA,WACA,MACA,eACA,WACA,UACA,MACA,oBACA,SACA,UACA,MACA,aACA,QACA,SACA,MACA,qBACA,UACA,YACA,MACA,YACA,eACA,QACA,MACA,aACA,YACA,WACA,MACA,cACA,SACA,WACA,MACA,eACA,SACA,SACA,MACA,WACA,WACA,WACA,MACA,cACA,QACA,YACA,MACA,eACA,aACA,SACA,MACA,aACA,UACA,QACA,MACA,YACA,UACA,UACA,MACA,mBACA,UACA,aACA,MACA,YACA,SACA,WACA,MACA,YACA,SACA,aACA,MACA,cACA,SACA,WACA,MACA,aACA,UACA,SACA,MACA,cACA,WACA,WACA,MACA,cACA,QACA,UACA,MACA,aACA,SACA,UACA,MACA,cACA,SACA,WACA,MACA,UACA,SACA,YACA,MACA,aACA,QACA,SACA,MACA,eACA,cACA,UACA,MACA,kBACA,QACA,WACA,MACA,YACA,QACA,UACA,MACA,eACA,aACA,aACA,MACA,YACA,SACA,WACA,MACA,aACA,aACA,UACA,MACA,aACA,QACA,aACA,MACA,gBACA,SACA,eACA,MACA,YACA,WACA,aACA,MACA,cACA,OACA,UACA,MACA,gBACA,YACA,cACA,MACA,kBACA,SACA,aACA,MACA,WACA,UACA,YACA,MACA,SACA,WACA,WACA,MACA,aACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,mBACA,UACA,YACA,MACA,WACA,QACA,YACA,MACA,eACA,UACA,SACA,MACA,gBACA,UACA,aACA,MACA,YACA,WACA,aACA,MACA,aACA,YACA,WACA,MACA,eACA,UACA,cACA,MACA,cACA,UACA,gBACA,MACA,gBACA,UACA,QACA,MACA,cACA,UACA,WACA,MACA,UACA,UACA,cACA,MACA,qBACA,QACA,WACA,MACA,UACA,WACA,cACA,MACA,gBACA,SACA,YACA,MACA,gBACA,QACA,YACA,MACA,gBACA,QACA,UACA,MACA,OACA,YACA,UACA,MACA,kBACA,YACA,aACA,MACA,gBACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,YACA,SACA,WACA,MACA,aACA,SACA,aACA,MACA,WACA,YACA,aACA,MACA,cACA,YACA,SACA,MACA,cACA,OACA,YACA,MACA,sBACA,UACA,SACA,MACA,cACA,WACA,UACA,MACA,sBACA,UACA,UACA,MACA,mBACA,SACA,WACA,MACA,iBACA,QACA,UACA,MACA,cACA,SACA,aACA,MACA,cACA,SACA,aACA,MACA,cACA,OACA,UACA,MACA,sBACA,cACA,UACA,MACA,eACA,QACA,UACA,MACA,gBACA,WACA,WACA,MACA,aACA,SACA,UACA,MACA,WACA,UACA,eACA,MACA,YACA,SACA,YACA,MACA,WACA,SACA,WACA,MACA,YACA,aACA,YACA,MACA,OACA,UACA,WACA,MACA,kBACA,UACA,UACA,MACA,YACA,YACA,aACA,MACA,cACA,UACA,aACA,MACA,eACA,UACA,QACA,MACA,WACA,SACA,cACA,MACA,UACA,aACA,YACA,MACA,YACA,SACA,UACA,MACA,cACA,SACA,aACA,MACA,gBACA,SACA,UACA,MACA,kBACA,UACA,SACA,MACA,eACA,UACA,UACA,MACA,iBACA,QACA,YACA,MACA,YACA,WACA,UACA,MACA,qBACA,WACA,WACA,MACA,cACA,UACA,YACA,MACA,WACA,OACA,WACA,MACA,cACA,SACA,UACA,MACA,gBACA,QACA,UACA,MACA,aACA,SACA,UACA,MACA,YACA,WACA,WACA,MACA,eACA,YACA,UACA,MACA,gBACA,SACA,aACA,MACA,cACA,QACA,SACA,MACA,gBACA,UACA,aACA,MACA,cACA,WACA,cACA,MACA,aACA,cACA,YACA,MACA,WACA,WACA,WACA,MACA,aACA,OACA,WACA,MACA,iBACA,SACA,UACA,MACA,wBACA,QACA,WACA,MACA,cACA,WACA,cACA,MACA,iBACA,SACA,UACA,MACA,oBACA,aACA,SACA,MACA,aACA,YACA,aACA,MACA,kBACA,SACA,WACA,MACA,cACA,SACA,YACA,MACA,oBACA,QACA,UACA,MACA,iBACA,QACA,YACA,MACA,cACA,SACA,YACA,MACA,aACA,UACA,WACA,MACA,YACA,UACA,UACA,MACA,aACA,WACA,cACA,MACA,SACA,UACA,QACA,MACA,cACA,SACA,cACA,MACA,aACA,UACA,YACA,MACA,UACA,SACA,SACA,MACA,cACA,UACA,QACA,MACA,YACA,UACA,WACA,MACA,oBACA,OACA,UACA,MACA,qBACA,QACA,cACA,MACA,eACA,SACA,aACA,MACA,cACA,WACA,WACA,MACA,gBACA,YACA,QACA,MACA,YACA,WACA,WACA,MACA,aACA,YACA,SACA,MACA,cACA,WACA,UACA,MACA,aACA,aACA,UACA,MACA,2BACA,SACA,UACA,MACA,kBACA,aACA,aACA,MACA,eACA,YACA,UACA,MACA,YACA,QACA,QACA,MACA,qBACA,UACA,aACA,MACA,gBACA,SACA,WACA,MACA,eACA,SACA,yBACA,MACA,aACA,UACA,YACA,MACA,cACA,UACA,eACA,MACA,kBACA,YACA,UACA,MACA,qBACA,WACA,YACA,MACA,mBACA,SACA,cACA,MACA,YACA,WACA,UACA,MACA,kBACA,UACA,UACA,MACA,cACA,WACA,WACA,MACA,aACA,SACA,YACA,MACA,YACA,aACA,SACA,MACA,oBACA,SACA,SACA,MACA,cACA,WACA,WACA,MACA,cACA,UACA,WACA,MACA,WACA,YACA,SACA,MACA,kBACA,WACA,aACA,MACA,YACA,aACA,UACA,MACA,kBACA,YACA,WACA,MACA,YACA,OACA,UACA,MACA,gBACA,OACA,WACA,MACA,cACA,UACA,UACA,MACA,gBACA,UACA,SACA,MACA,YACA,UACA,SACA,MACA,cACA,YACA,UACA,MACA,gBACA,UACA,YACA,MACA,aACA,SACA,UACA,MACA,iBACA,UACA,UACA,MACA,aACA,UACA,UACA,MACA,eACA,WACA,UACA,MACA,UACA,OACA,aACA,MACA,eACA,QACA,SACA,MACA,kBACA,WACA,cACA,MACA,oBACA,QACA,WACA,MACA,kBACA,OACA,YACA,MACA,WACA,SACA,SACA,MACA,WACA,UACA,YACA,MACA,YACA,UACA,QACA,MACA,cACA,SACA,iBACA,MACA,kBACA,UACA,UACA,MACA,gBACA,YACA,QACA,MACA,oBACA,WACA,WACA,MACA,YACA,UACA,YACA,MACA,aACA,YACA,cACA,MACA,iBACA,UACA,UACA,MACA,iBACA,YACA,QACA,MACA,WACA,QACA,aACA,MACA,cACA,UACA,YACA,MACA,YACA,UACA,QACA,MACA,cACA,QACA,WACA,MACA,mBACA,QACA,WACA,MACA,gBACA,QACA,UACA,MACA,cACA,WACA,WACA,MACA,aACA,SACA,UACA,MACA,eACA,SACA,aACA,MACA,WACA,SACA,eACA,MACA,WACA,SACA,UACA,MACA,UACA,UACA,OACA,MACA,aACA,SACA,YACA,MACA,gBACA,OACA,aACA,MACA,eACA,QACA,UACA,MACA,kBACA,SACA,SACA,MACA,gBACA,SACA,cACA,MACA,UACA,SACA,SACA,MACA,YACA,SACA,aACA,MACA,cACA,WACA,YACA,MACA,kBACA,UACA,WACA,MACA,kBACA,UACA,cACA,MACA,cACA,UACA,QACA,MACA,eACA,QACA,YACA,MACA,aACA,YACA,SACA,MACA,YACA,UACA,SACA,MACA,aACA,WACA,SACA,MACA,iBACA,SACA,UACA,MACA,YACA,UACA,UACA,MACA,SACA,SACA,cACA,MACA,YACA,SACA,SACA,MACA,kBACA,SACA,YACA,MACA,oBACA,aACA,YACA,MACA,aACA,WACA,SACA,MACA,eACA,YACA,aACA,MACA,eACA,WACA,WACA,MACA,YACA,WACA,gBACA,MACA,aACA,QACA,WACA,MACA,QACA,cACA,aACA,MACA,qBACA,UACA,YACA,MACA,aACA,UACA,UACA,MACA,iBACA,YACA,UACA,MACA,UACA,YACA,cACA,MACA,aACA,WACA,SACA,MACA,aACA,WACA,UACA,MACA,WACA,SACA,WACA,MACA,gBACA,SACA,WACA,MACA,aACA,QACA,YACA,MACA,eACA,UACA,UACA,MACA,gBACA,SACA,gBACA,MACA,kBACA,WACA,aACA,MACA,aACA,OACA,UACA,MACA,uBACA,YACA,WACA,MACA,SACA,WACA,eACA,MACA,YACA,WACA,QACA,MACA,UACA,UACA,eACA,MACA,eACA,aACA,QACA,MACA,cACA,YACA,WACA,MACA,mBACA,WACA,WACA,MACA,YACA,aACA,QACA,MACA,kBACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,gBACA,SACA,aACA,MACA,mBACA,WACA,YACA,MACA,YACA,WACA,YACA,MACA,aACA,UACA,YACA,MACA,cACA,SACA,UACA,MACA,oBACA,WACA,cACA,MACA,SACA,SACA,WACA,MACA,YACA,SACA,aACA,MACA,cACA,QACA,aACA,MACA,cACA,YACA,QACA,MACA,cACA,YACA,cACA,MACA,gBACA,YACA,SACA,MACA,sBACA,UACA,SACA,MACA,gBACA,UACA,SACA,MACA,iBACA,QACA,YACA,MACA,eACA,SACA,OACA,MACA,aACA,WACA,UACA,MACA,WACA,QACA,SACA,MACA,kBACA,UACA,eACA,MACA,kBACA,QACA,SACA,MACA,cACA,QACA,QACA,MACA,YACA,SACA,UACA,MACA,cACA,SACA,UACA,MACA,iBACA,UACA,QACA,MACA,eACA,WACA,SACA,MACA,qBACA,WACA,YACA,MACA,YACA,SACA,UACA,MACA,YACA,SACA,SACA,MACA,gBACA,QACA,YACA,MACA,aACA,SACA,UACA,MACA,eACA,UACA,cACA,MACA,gBACA,QACA,WACA,MACA,oBACA,QACA,WACA,MACA,YACA,SACA,WACA,MACA,YACA,OACA,cACA,MACA,kBACA,UACA,aACA,MACA,mBACA,QACA,aACA,MACA,kBACA,YACA,aACA,MACA,aACA,YACA,WACA,MACA,aACA,YACA,UACA,MACA,aACA,WACA,aACA,MACA,cACA,YACA,UACA,MACA,kBACA,UACA,QACA,MACA,eACA,eACA,SACA,MACA,mBACA,UACA,UACA,MACA,YACA,SACA,UACA,MACA,qBACA,SACA,UACA,MACA,YACA,WACA,YACA,MACA,iBACA,UACA,WACA,MACA,YACA,UACA,WACA,MACA,WACA,SACA,QACA,MACA,aACA,QACA,WACA,MACA,YACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,OACA,OACA,WACA,MACA,aACA,QACA,QACA,MACA,iBACA,SACA,YACA,MACA,eACA,UACA,aACA,MACA,SACA,SACA,SACA,MACA,eACA,SACA,WACA,MACA,WACA,UACA,UACA,MACA,kBACA,aACA,OACA,MACA,WACA,UACA,UACA,MACA,eACA,UACA,UACA,MACA,iBACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,iBACA,WACA,SACA,MACA,WACA,SACA,QACA,MACA,WACA,QACA,QACA,MACA,aACA,WACA,QACA,MACA,YACA,cACA,QACA,MACA,aACA,WACA,SACA,MACA,aACA,OACA,WACA,MACA,UACA,SACA,WACA,MACA,YACA,UACA,UACA,MACA,UACA,YACA,UACA,MACA,aACA,YACA,YACA,MACA,kBACA,WACA,eACA,MACA,WACA,UACA,cACA,MACA,gBACA,OACA,WACA,MACA,UACA,OACA,WACA,MACA,iBACA,QACA,SACA,MACA,eACA,WACA,YACA,MACA,cACA,SACA,YACA,MACA,aACA,SACA,YACA,MACA,gBACA,OACA,WACA,MACA,WACA,aACA,aACA,MACA,aACA,SACA,UACA,MACA,UACA,SACA,WACA,MACA,cACA,YACA,UACA,MACA,eACA,QACA,WACA,MACA,SACA,UACA,YACA,MACA,qBACA,QACA,WACA,MACA,gBACA,YACA,YACA,MACA,uBACA,eACA,SACA,MACA,gBACA,YACA,aACA,MACA,kBACA,QACA,SACA,MACA,kBACA,SACA,YACA,MACA,WACA,WACA,aACA,MACA,UACA,QACA,QACA,MACA,aACA,YACA,UACA,MACA,mBACA,SACA,WACA,MACA,eACA,UACA,UACA,MACA,WACA,WACA,aACA,MACA,eACA,SACA,eACA,MACA,aACA,OACA,SACA,MACA,iBACA,WACA,YACA,MACA,WACA,UACA,WACA,MACA,sBACA,aACA,SACA,MACA,eACA,UACA,WACA,MACA,YACA,QACA,QACA,MACA,qBACA,QACA,aACA,MACA,eACA,QACA,UACA,MACA,iBACA,WACA,WACA,MACA,kBACA,UACA,WACA,MACA,YACA,OACA,UACA,MACA,eACA,YACA,UACA,MACA,YACA,SACA,WACA,MACA,gBACA,WACA,UACA,MACA,YACA,SACA,UACA,MACA,aACA,WACA,YACA,MACA,gBACA,WACA,QACA,MACA,eACA,UACA,YACA,MACA,iBACA,YACA,WACA,MACA,cACA,QACA,UACA,MACA,aACA,WACA,WACA,MACA,cACA,SACA,SACA,MACA,cACA,WACA,aACA,MACA,aACA,UACA,WACA,MACA,iBACA,QACA,YACA,MACA,cACA,YACA,QACA,MACA,SACA,OACA,UACA,MACA,mBACA,SACA,UACA,MACA,cACA,QACA,WACA,MACA,aACA,OACA,aACA,MACA,eACA,YACA,aACA,MACA,WACA,UACA,OACA,MACA,gBACA,UACA,YACA,MACA,eACA,YACA,SACA,MACA,eACA,MACA,aACA,MACA,gBACA,WACA,YACA,MACA,YACA,UACA,SACA,MACA,YACA,WACA,SACA,MACA,gBACA,WACA,UACA,MACA,WACA,QACA,WACA,MACA,iBACA,UACA,UACA,MACA,eACA,SACA,aACA,MACA,cACA,YACA,cACA,MACA,kBACA,OACA,WACA,MACA,iBACA,WACA,YACA,MACA,aACA,SACA,WACA,MACA,YACA,QACA,UACA,MACA,YACA,UACA,WACA,MACA,WACA,aACA,aACA,MACA,cACA,SACA,SACA,MACA,WACA,UACA,WACA,MACA,eACA,UACA,QACA,MACA,gBACA,SACA,WACA,MACA,kBACA,WACA,UACA,MACA,kBACA,SACA,SACA,MACA,gBACA,cACA,cACA,MACA,gBACA,SACA,UACA,MACA,aACA,UACA,UACA,MACA,eACA,SACA,YACA,MACA,WACA,QACA,UACA,MACA,cACA,UACA,QACA,MACA,YACA,SACA,YACA,MACA,gBACA,aACA,WACA,MACA,kBACA,UACA,YACA,MACA,cACA,aACA,WACA,MACA,qBACA,YACA,UACA,MACA,UACA,SACA,SACA,MACA,eACA,SACA,UACA,MACA,kBACA,SACA,YACA,MACA,kBACA,YACA,SACA,MACA,aACA,UACA,SACA,MACA,eACA,QACA,QACA,MACA,iBACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,WACA,UACA,YACA,MACA,aACA,SACA,UACA,MACA,uBACA,UACA,YACA,MACA,eACA,SACA,WACA,MACA,eACA,UACA,YACA,MACA,gBACA,SACA,WACA,MACA,SACA,aACA,SACA,MACA,gBACA,SACA,UACA,MACA,gBACA,aACA,UACA,MACA,cACA,WACA,UACA,MACA,YACA,YACA,aACA,MACA,YACA,cACA,UACA,MACA,gBACA,YACA,UACA,MACA,aACA,WACA,UACA,MACA,iBACA,SACA,YACA,MACA,YACA,OACA,SACA,MACA,SACA,SACA,UACA,MACA,aACA,SACA,UACA,MACA,qBACA,WACA,YACA,MACA,YACA,UACA,UACA,MACA,iBACA,UACA,SACA,MACA,cACA,WACA,SACA,MACA,UACA,QACA,SACA,MACA,sBACA,eACA,WACA,MACA,eACA,UACA,WACA,MACA,eACA,YACA,QACA,MACA,mBACA,YACA,UACA,MACA,eACA,YACA,aACA,MACA,kBACA,UACA,YACA,MACA,UACA,QACA,cACA,MACA,YACA,WACA,YACA,MACA,WACA,QACA,UACA,MACA,cACA,SACA,QACA,MACA,gBACA,UACA,SACA,MACA,cACA,WACA,UACA,MACA,WACA,WACA,YACA,MACA,UACA,YACA,aACA,MACA,eACA,UACA,SACA,MACA,gBACA,YACA,UACA,MACA,WACA,UACA,SACA,MACA,kBACA,UACA,UACA,MACA,YACA,QACA,UACA,MACA,kBACA,SACA,UACA,MACA,mBACA,YACA,SACA,MACA,gBACA,aACA,WACA,MACA,YACA,UACA,UACA,MACA,SACA,SACA,aACA,MACA,gBACA,aACA,WACA,MACA,kBACA,QACA,WACA,MACA,YACA,QACA,WACA,MACA,YACA,UACA,QACA,MACA,YACA,WACA,WACA,MACA,aACA,QACA,cACA,MACA,gBACA,UACA,SACA,MACA,mBACA,UACA,WACA,MACA,YACA,WACA,OACA,MACA,UACA,cACA,cACA,MACA,WACA,SACA,WACA,MACA,SACA,QACA,YACA,MACA,YACA,QACA,SACA,MACA,YACA,SACA,WACA,MACA,aACA,SACA,SACA,MACA,UACA,YACA,WACA,MACA,cACA,aACA,YACA,MACA,YACA,WACA,cACA,MACA,WACA,QACA,WACA,MACA,WACA,QACA,QACA,MACA,aACA,WACA,YACA,MACA,WACA,SACA,UACA,MACA,eACA,SACA,UACA,MACA,gBACA,SACA,aACA,MACA,cACA,WACA,WACA,MACA,gBACA,QACA,UACA,MACA,gBACA,WACA,WACA,MACA,eACA,SACA,WACA,MACA,eACA,WACA,YACA,MACA,eACA,WACA,aACA,MACA,cACA,WACA,YACA,MACA,cACA,QACA,UACA,MACA,aACA,QACA,aACA,MACA,kBACA,WACA,SACA,MACA,mBACA,UACA,YACA,MACA,mBACA,UACA,WACA,MACA,gBACA,QACA,WACA,MACA,cACA,SACA,YACA,MACA,kBACA,UACA,WACA,MACA,aACA,SACA,UACA,MACA,uBACA,cACA,aACA,MACA,aACA,UACA,WACA,MACA,YACA,UACA,UACA,MACA,cACA,SACA,UACA,MACA,aACA,SACA,WACA,MACA,QACA,YACA,SACA,MACA,aACA,UACA,UACA,MACA,iBACA,WACA,aACA,MACA,oBACA,WACA,cACA,MACA,YACA,SACA,YACA,MACA,iBACA,UACA,eACA,MACA,wBACA,UACA,WACA,MACA,iBACA,QACA,UACA,MACA,cACA,WACA,YACA,MACA,kBACA,aACA,YACA,MACA,aACA,eACA,UACA,MACA,YACA,SACA,aACA,MACA,iBACA,SACA,SACA,MACA,gBACA,QACA,UACA,MACA,gBACA,UACA,aACA,MACA,WACA,cACA,SACA,MACA,kBACA,SACA,YACA,MACA,kBACA,MACA,SACA,MACA,YACA,WACA,cACA,MACA,aACA,UACA,UACA,MACA,YACA,WACA,YACA,MACA,UACA,SACA,cACA,MACA,kBACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,YACA,UACA,YACA,MACA,cACA,SACA,aACA,MACA,cACA,SACA,SACA,MACA,YACA,SACA,UACA,MACA,WACA,UACA,YACA,MACA,SACA,WACA,WACA,MACA,cACA,WACA,cACA,MACA,oBACA,SACA,YACA,MACA,aACA,QACA,SACA,MACA,oBACA,WACA,YACA,MACA,cACA,QACA,cACA,MACA,eACA,QACA,aACA,MACA,cACA,UACA,UACA,MACA,aACA,OACA,WACA,MACA,aACA,QACA,gBACA,MACA,YACA,aACA,UACA,MACA,UACA,QACA,QACA,MACA,mBACA,YACA,UACA,MACA,cACA,UACA,WACA,MACA,kBACA,UACA,YACA,MACA,kBACA,SACA,YACA,MACA,kBACA,UACA,WACA,MACA,oBACA,WACA,YACA,MACA,gBACA,SACA,WACA,MACA,aACA,UACA,YACA,MACA,mBACA,UACA,UACA,MACA,aACA,aACA,YACA,MACA,cACA,QACA,iBACA,MACA,UACA,WACA,WACA,MACA,YACA,WACA,SACA,MACA,YACA,SACA,UACA,MACA,cACA,WACA,aACA,MACA,kBACA,OACA,UACA,MACA,YACA,WACA,aACA,MACA,gBACA,SACA,WACA,MACA,eACA,UACA,UACA,MACA,WACA,SACA,WACA,MACA,UACA,SACA,WACA,MACA,YACA,YACA,UACA,MACA,eACA,SACA,SACA,MACA,YACA,SACA,UACA,MACA,kBACA,UACA,YACA,MACA,WACA,aACA,SACA,MACA,kBACA,QACA,YACA,MACA,iBACA,SACA,YACA,MACA,2BACA,SACA,aACA,MACA,aACA,QACA,SACA,MACA,UACA,QACA,UACA,MACA,eACA,UACA,YACA,MACA,cACA,QACA,QACA,MACA,UACA,SACA,SACA,MACA,mBACA,QACA,SACA,MACA,WACA,SACA,cACA,MACA,mBACA,kBACA,WACA,MACA,kBACA,QACA,UACA,MACA,YACA,UACA,WACA,MACA,kBACA,WACA,UACA,MACA,gBACA,UACA,WACA,MACA,YACA,UACA,YACA,MACA,aACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,cACA,WACA,YACA,MACA,YACA,UACA,WACA,MACA,eACA,UACA,YACA,MACA,kBACA,QACA,SACA,MACA,eACA,UACA,UACA,MACA,YACA,UACA,SACA,MACA,aACA,YACA,aACA,MACA,YACA,UACA,WACA,MACA,YACA,OACA,aACA,MACA,kBACA,QACA,QACA,MACA,WACA,WACA,UACA,MACA,eACA,WACA,UACA,MACA,cACA,SACA,SACA,MACA,aACA,SACA,SACA,MACA,cACA,aACA,WACA,MACA,sBACA,OACA,WACA,MACA,cACA,UACA,aACA,MACA,eACA,SACA,SACA,MACA,WACA,SACA,YACA,MACA,sBACA,UACA,SACA,MACA,UACA,WACA,SACA,MACA,gBACA,eACA,YACA,MACA,cACA,SACA,WACA,MACA,aACA,UACA,aACA,MACA,eACA,SACA,aACA,MACA,cACA,QACA,YACA,MACA,WACA,UACA,UACA,MACA,eACA,SACA,SACA,MACA,aACA,QACA,YACA,MACA,YACA,UACA,YACA,MACA,aACA,WACA,WACA,MACA,wBACA,SACA,UACA,MACA,gBACA,QACA,UACA,MACA,YACA,SACA,UACA,MACA,eACA,SACA,UACA,MACA,eACA,WACA,UACA,MACA,iBACA,QACA,UACA,MACA,kBACA,SACA,YACA,MACA,aACA,WACA,SACA,MACA,YACA,QACA,UACA,MACA,gBACA,WACA,YACA,MACA,eACA,QACA,YACA,MACA,kBACA,WACA,aACA,MACA,aACA,WACA,aACA,MACA,aACA,SACA,YACA,MACA,aACA,WACA,UACA,MACA,aACA,aACA,cACA,MACA,gBACA,aACA,SACA,MACA,eACA,YACA,QACA,MACA,YACA,SACA,QACA,MACA,aACA,QACA,aACA,MACA,UACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,cACA,QACA,SACA,MACA,cACA,SACA,SACA,MACA,cACA,SACA,WACA,MACA,eACA,WACA,YACA,MACA,iBACA,QACA,WACA,MACA,cACA,UACA,WACA,MACA,eACA,UACA,WACA,MACA,gBACA,WACA,WACA,MACA,YACA,cACA,WACA,MACA,eACA,QACA,SACA,MACA,kBACA,YACA,YACA,MACA,kBACA,YACA,SACA,MACA,SACA,YACA,WACA,MACA,iBACA,SACA,SACA,MACA,kBACA,QACA,yBACA,MACA,eACA,UACA,WACA,MACA,kBACA,UACA,UACA,MACA,cACA,SACA,UACA,MACA,aACA,SACA,QACA,MACA,YACA,SACA,SACA,MACA,WACA,UACA,WACA,MACA,sBACA,aACA,WACA,MACA,cACA,QACA,WACA,MACA,kBACA,WACA,YACA,MACA,eACA,SACA,eACA,MACA,kBACA,QACA,UACA,MACA,gBACA,OACA,WACA,MACA,YACA,QACA,YACA,MACA,2BACA,WACA,WACA,MACA,UACA,SACA,UACA,MACA,cACA,SACA,WACA,MACA,YACA,UACA,aACA,MACA,qBACA,WACA,SACA,MACA,cACA,YACA,cACA,MACA,WACA,OACA,YACA,MACA,YACA,SACA,cACA,MACA,cACA,YACA,QACA,MACA,eACA,SACA,WACA,MACA,eACA,SACA,aACA,MACA,YACA,YACA,WACA,MACA,aACA,UACA,cACA,MACA,kBACA,SACA,aACA,MACA,YACA,SACA,QACA,MACA,eACA,UACA,OACA,MACA,kBACA,WACA,QACA,MACA,eACA,aACA,aACA,MACA,oBACA,OACA,eACA,MACA,WACA,QACA,UACA,MACA,cACA,WACA,YACA,MACA,kBACA,UACA,WACA,MACA,aACA,SACA,aACA,MACA,YACA,OACA,aACA,MACA,YACA,SACA,QACA,MACA,aACA,UACA,QACA,MACA,sBACA,SACA,WACA,MACA,WACA,UACA,WACA,MACA,UACA,UACA,WACA,MACA,WACA,UACA,WACA,MACA,aACA,UACA,cACA,MACA,kBACA,SACA,SACA,MACA,WACA,UACA,aACA,MACA,WACA,UACA,SACA,MACA,sBACA,QACA,aACA,MACA,aACA,WACA,YACA,MACA,YACA,WACA,cACA,MACA,WACA,UACA,WACA,MACA,aACA,YACA,YACA,MACA,uBACA,UACA,SACA,MACA,eACA,WACA,UACA,MACA,YACA,UACA,QACA,MACA,YACA,UACA,WACA,MACA,eACA,aACA,WACA,MACA,kBACA,WACA,YACA,MACA,YACA,WACA,YACA,MACA,cACA,WACA,SACA,MACA,UACA,SACA,UACA,MACA,iBACA,UACA,WACA,MACA,eACA,UACA,SACA,MACA,WACA,UACA,WACA,MACA,aACA,WACA,UACA,MACA,cACA,SACA,aACA,MACA,YACA,UACA,WACA,MACA,YACA,QACA,WACA,MACA,aACA,WACA,gBACA,MACA,uBACA,SACA,WACA,MACA,cACA,UACA,UACA,MACA,eACA,WACA,YACA,MACA,WACA,YACA,UACA,MACA,kBACA,YACA,WACA,MACA,cACA,WACA,WACA,MACA,WACA,UACA,WACA,MACA,iBACA,YACA,YACA,MACA,SACA,YACA,aACA,MACA,iBACA,SACA,SACA,MACA,cACA,SACA,WACA,MACA,iBACA,UACA,aACA,MACA,aACA,WACA,UACA,MACA,aACA,QACA,SACA,MACA,iBACA,UACA,WACA,MACA,cACA,SACA,QACA,MACA,qBACA,YACA,YACA,MACA,UACA,UACA,QACA,MACA,YACA,WACA,WACA,MACA,YACA,OACA,WACA,MACA,iBACA,WACA,WACA,MACA,mBACA,UACA,aACA,MACA,WACA,WACA,UACA,MACA,oBACA,SACA,SACA,MACA,eACA,QACA,UACA,MACA,aACA,SACA,aACA,MACA,eACA,UACA,aACA,MACA,kBACA,SACA,SACA,MACA,cACA,UACA,SACA,MACA,aACA,SACA,WACA,MACA,YACA,SACA,QACA,MACA,gBACA,UACA,WACA,MACA,YACA,SACA,WACA,MACA,eACA,SACA,YACA,MACA,cACA,SACA,WACA,MACA,SACA,QACA,aACA,MACA,WACA,UACA,SACA,MACA,sBACA,SACA,QACA,MACA,aACA,QACA,SACA,MACA,sBACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,eACA,SACA,UACA,MACA,4BACA,SACA,SACA,MACA,gBACA,SACA,SACA,MACA,aACA,aACA,UACA,MACA,eACA,SACA,aACA,MACA,WACA,SACA,UACA,MACA,eACA,QACA,QACA,MACA,iBACA,QACA,cACA,MACA,iBACA,SACA,YACA,MACA,eACA,YACA,UACA,MACA,YACA,QACA,YACA,MACA,YACA,UACA,YACA,MACA,cACA,UACA,YACA,MACA,aACA,YACA,WACA,MACA,eACA,UACA,aACA,MACA,YACA,UACA,UACA,MACA,eACA,UACA,WACA,MACA,YACA,aACA,cACA,MACA,kBACA,UACA,YACA,MACA,gBACA,QACA,YACA,MACA,eACA,QACA,WACA,MACA,YACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,aACA,UACA,QACA,MACA,oBACA,YACA,WACA,MACA,gBACA,OACA,WACA,MACA,WACA,QACA,UACA,MACA,aACA,UACA,UACA,MACA,aACA,UACA,QACA,MACA,qBACA,OACA,WACA,MACA,eACA,UACA,YACA,MACA,4BACA,WACA,QACA,MACA,cACA,WACA,UACA,MACA,kBACA,YACA,SACA,MACA,YACA,UACA,YACA,MACA,YACA,QACA,UACA,MACA,eACA,QACA,SACA,MACA,eACA,UACA,gBACA,MACA,UACA,WACA,WACA,MACA,WACA,UACA,WACA,MACA,WACA,SACA,eACA,MACA,UACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,SACA,SACA,WACA,MACA,YACA,SACA,WACA,MACA,kBACA,UACA,aACA,MACA,aACA,SACA,WACA,MACA,WACA,WACA,aACA,MACA,qBACA,UACA,UACA,MACA,YACA,WACA,WACA,MACA,gBACA,SACA,SACA,MACA,iBACA,UACA,WACA,MACA,eACA,QACA,UACA,MACA,YACA,OACA,UACA,MACA,kBACA,UACA,UACA,MACA,gBACA,QACA,SACA,MACA,iBACA,QACA,WACA,MACA,eACA,YACA,UACA,MACA,YACA,UACA,aACA,MACA,WACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,WACA,aACA,YACA,MACA,cACA,YACA,WACA,MACA,oBACA,WACA,WACA,MACA,gBACA,YACA,OACA,MACA,eACA,YACA,UACA,MACA,gBACA,WACA,WACA,MACA,eACA,QACA,UACA,MACA,aACA,YACA,WACA,MACA,eACA,aACA,QACA,MACA,kBACA,QACA,UACA,MACA,eACA,SACA,WACA,MACA,qBACA,SACA,SACA,MACA,SACA,YACA,UACA,MACA,eACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,aACA,SACA,WACA,MACA,cACA,UACA,UACA,MACA,aACA,YACA,UACA,MACA,aACA,QACA,SACA,MACA,gBACA,QACA,YACA,MACA,WACA,SACA,UACA,MACA,mBACA,UACA,OACA,MACA,cACA,SACA,UACA,MACA,iBACA,YACA,UACA,MACA,mBACA,QACA,WACA,MACA,oBACA,WACA,WACA,MACA,WACA,WACA,aACA,MACA,iBACA,QACA,YACA,MACA,UACA,QACA,SACA,MACA,cACA,YACA,SACA,MACA,cACA,QACA,YACA,MACA,kBACA,WACA,WACA,MACA,aACA,SACA,WACA,MACA,cACA,WACA,cACA,MACA,aACA,SACA,UACA,MACA,iBACA,UACA,cACA,MACA,aACA,SACA,WACA,MACA,kBACA,SACA,UACA,MACA,WACA,WACA,UACA,MACA,iBACA,SACA,YACA,MACA,aACA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","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\nexport default function (payload: HMRPayload, helper: HMRHelper) {\n    const { updates } = payload;\n\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\n\n    if (helper.isStylesheeetUpdate) {\n        helper.flushModules(updates);\n\n        helper.updateModules();\n\n        helper.callModules(updates);\n    } else {\n        helper.flushAll();\n        helper.updateModules();\n\n        helper.callEntries();\n    }\n}\n","import { applyPolyfill, ReflowStrategy, rerenderInnerHTML } from 'custom-elements-hmr-polyfill';\n\n// apply polly fill\nrerenderInnerHTML();\n\n// if you want to customize...\napplyPolyfill(\n    /* no reflowing */ ReflowStrategy.NONE,\n    /* ignored, because reflowing is disabled */ -1,\n    /* gets called for every re-definition of a web component */\n    (elementName: string) => {\n        console.log(elementName, 'updated');\n    }\n);\n","// simple helper to delay re-render\nexport function requestRender(ctx: any) {\n    if (ctx.isConnected) {\n        if (ctx.__wait) {\n        } else {\n            ctx.__wait = true;\n            requestAnimationFrame(async () => {\n                await Promise.resolve(true);\n                ctx.render();\n                ctx.__wait = false;\n            });\n        }\n    }\n}\n","export function initSymbolCache() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL) {\r\n        (<any>globalThis)._LHF_SYMBOL = {};\r\n        (<any>globalThis)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL.observedAttributesMap) {\r\n        (<any>globalThis)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (<any>globalThis)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (<any>globalThis)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL.observedAttributes) {\r\n        (<any>globalThis)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (<any>globalThis)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (<any>globalThis)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(<any>globalThis)._LHF_PROP_SYMBOL[name]) {\r\n        (<any>globalThis)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (<any>globalThis)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (<any>globalThis)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL.logger) {\r\n        (<any>globalThis)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (<any>globalThis)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (<any>globalThis)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL.loggerCount) {\r\n        (<any>globalThis)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (<any>globalThis)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (<any>globalThis)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(<any>globalThis)._LHF_SYMBOL.transmitter) {\r\n        (<any>globalThis)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (<any>globalThis)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (<any>globalThis)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\n\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\n// but this will give\n\nlet log = false;\nlet skipElements: string[] = [];\n\nif (!(<any>globalThis)[getLoggerSymbol()]) {\n    (<any>globalThis)[getLoggerSymbol()] = new WeakMap();\n    (<any>globalThis)[getLoggerCountSymbol()] = 0;\n}\n\nexport function enableInternalLogger(skip: string[] = []) {\n    skipElements = skip;\n    log = true;\n}\n\nexport function disableInternalLogger() {\n    log = false;\n}\n\nfunction registerLoggerContext(context: any) {\n    if (log) {\n        const map = (<any>globalThis)[getLoggerSymbol()];\n        if (map.has(context)) {\n            throw 'contxt duplicate';\n        }\n\n        let count = (<any>globalThis)[getLoggerCountSymbol()] + 1;\n        (<any>globalThis)[getLoggerCountSymbol()] = count;\n\n        map.set(context, count);\n    }\n}\n\nfunction getID(ctx: any) {\n    if (log) {\n        const map = (<any>globalThis)[getLoggerSymbol()];\n        return map.get(ctx);\n    }\n}\n\nexport function logger(name: string, ctx: any, tag: string) {\n    if (log && skipElements.indexOf(tag) === -1) {\n        let id = getID(ctx);\n        if (!id) {\n            registerLoggerContext(ctx);\n        }\n        id = getID(ctx);\n\n        // some weird parths, but want it to stay as a table\n\n        // find text length\n        let text = name || '??' + '' + (id || '?');\n        let x = 25 - Math.floor(text.length);\n\n        // find id length\n        let idOnly = '' + (id || '?');\n        let y = 6 - Math.floor(idOnly.length);\n\n        // show it\n        console.log(\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\n                ' '\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\n        );\n    }\n}\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\r\nimport { requestRender } from './requestRender';\r\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @customElement- decorator\r\n *\r\n */\r\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\r\n    return function reg(elementClass: any) {\r\n        let observedAttributes = elementClass.observedAttributes;\r\n        Object.defineProperty(elementClass, 'observedAttributes', {\r\n            set: function (value) {\r\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\r\n                return true;\r\n            },\r\n            get: function () {\r\n                return elementClass.prototype[getObservedAttributesSymbol()];\r\n            },\r\n            configurable: true\r\n        });\r\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\r\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\r\n                observedAttributes\r\n            );\r\n        }\r\n\r\n        const base: any = class extends elementClass {\r\n            constructor() {\r\n                super();\r\n                logger('constructor', this, super.tagName);\r\n            }\r\n            render(...result: any[]) {\r\n                logger('render', this, super.tagName);\r\n                const template = super.render.call(this, ...result);\r\n                Promise.resolve(template).then((templates) => {\r\n                    render(templates, <any>this, { eventContext: <any>this });\r\n                    if (super.updated) {\r\n                        //delay so it actually get a chance to update\r\n                        setTimeout(() => {\r\n                            super.updated();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            connectedCallback() {\r\n                logger('connectedCallback', this, super.tagName);\r\n                if (super.connectedCallback) {\r\n                    super.connectedCallback.call(this);\r\n                }\r\n                this.render(this);\r\n            }\r\n            disconnectedCallback() {\r\n                logger('disconnectedCallback', this, super.tagName);\r\n                if (super.disconnectedCallback) {\r\n                    super.disconnectedCallback.call(this);\r\n                }\r\n            }\r\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n                logger('attributeChangedCallback', this, super.tagName);\r\n                //get map\r\n\r\n                if (!this[getObservedAttributesMapSymbol()]) {\r\n                    const attribute = name\r\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n                        .replace(/\\s+/g, '-')\r\n                        .toLowerCase();\r\n                    this[getObservedAttributesMapSymbol()] = new Map();\r\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\r\n                }\r\n\r\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\r\n                this[nameProp] = newValue || '';\r\n                // if normal attributeChanged is set\r\n                if (super.attributeChangedCallback) {\r\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\r\n                }\r\n                //if our simpler method is set\r\n                if (super.valuesChangedMethod) {\r\n                    super.valuesChangedMethod('attribute', name, oldValue, newValue);\r\n                }\r\n                requestRender(this);\r\n            }\r\n        };\r\n        if (!customElements.get(elementName)) {\r\n            if (extended) {\r\n                customElements.define(elementName, base, extended);\r\n            } else {\r\n                customElements.define(elementName, base);\r\n            }\r\n        } else {\r\n            if ((<any>globalThis).hmrCache) {\r\n                if (extended) {\r\n                    customElements.define(elementName, base, extended);\r\n                } else {\r\n                    customElements.define(elementName, base);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(<any>globalThis)[getTransmitterSymbol()]) {\r\n    (<any>globalThis)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (<any>globalThis)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        let events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\r\n\r\nconst state = (window as any).state || {};\r\nconst keys = new Set();\r\ntype valueSetter = (value: any) => void;\r\n\r\nif (!(window as any).state) {\r\n    window.addEventListener('HMR-FUSEBOX', () => {\r\n        (window as any).state = state;\r\n        console.log('HMR-FUSEBOX', (window as any).state);\r\n    });\r\n}\r\n\r\nexport type stateResult<T> = [T, valueSetter];\r\n\r\nexport function getState(newState: any) {\r\n    (window as any).state = newState;\r\n}\r\n\r\nexport function setState() {\r\n    return state;\r\n}\r\n\r\nexport function stateContainer<T>(\r\n    key: string,\r\n    defaultValue: T,\r\n    customPublishedTrigger?: boolean\r\n): stateResult<T> {\r\n    //set default value if not set\r\n    if (!state.hasOwnProperty(key)) {\r\n        state[key] = defaultValue;\r\n    }\r\n\r\n    const currentState = state[key];\r\n    const setter = function (value: T) {\r\n        state[key] = value;\r\n    };\r\n\r\n    const middleware = function (value: any) {\r\n        setter(value);\r\n        publish(key, value);\r\n    };\r\n\r\n    return [currentState, customPublishedTrigger ? setter : middleware];\r\n}\r\n\r\nexport function validateKey(key: string) {\r\n    if (keys.has(key)) {\r\n        throw new Error(`state key used allready, use another name`);\r\n    } else {\r\n        keys.add(key);\r\n        return key;\r\n    }\r\n}\r\n","import \"tslib\";\r\nexport { attribute } from \"./attribute\";\r\nexport { enableInternalLogger, disableInternalLogger } from \"./logger\";\r\nexport { property } from \"./property\";\r\nexport { customElement } from \"./customElement\";\r\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from \"./transmitter\";\r\nexport { validateKey, stateContainer, stateResult } from \"./state\";\r\nexport { requestRender } from \"./requestRender\";","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '../';\nimport { rowCache } from '../interfaces';\n\n@customElement('free-grid-body')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-body';\n    connector: GridInterface;\n    rowPositionCache: rowCache[];\n    ref: FreeGrid;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.top = config.panelHeight + config.__rowHeight * 2 + 'px';\n        this.style.bottom = config.footerHeight + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('vertical-scroll', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n        if (e.type === 'vertical-scroll') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const config = this.connector.config;\n        const scrollheight = this.connector.displayedDataset.length * config.__rowHeight;\n        return html`\n            <free-grid-body-content\n                style=\"height:${scrollheight}px;width:${config.__rowWidth}px\"\n                class=\"free-grid-content\"\n            >\n                ${this.rowPositionCache.map((row) => {\n                    const entity = this.connector.displayedDataset[row.i];\n                    const data = entity && entity.__group;\n                    if (data) {\n                        return html`\n                            <free-grid-row-group\n                                .connector=${this.connector}\n                                .row=${row}\n                                .ref=${this.ref}\n                            ></free-grid-row-group>\n                        `;\n                    } else {\n                        return html`\n                            <free-grid-row\n                                .connector=${this.connector}\n                                .row=${row}\n                                .ref=${this.ref}\n                            ></free-grid-row>\n                        `;\n                    }\n                })}\n            </free-grid-body-content>\n        `;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { FreeGrid, GridInterface } from '..';\nimport { IgridConfigGroups, ICell } from '../interfaces';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-cell-row')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-cell-row';\n    connector: GridInterface;\n    cellPosition: number;\n    ref: FreeGrid;\n    currentHeight: number;\n    @property() rowNo: number;\n    group: IgridConfigGroups;\n    cell: ICell;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.cellHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\n        this.cell = this.group.rows[this.cellPosition];\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize') {\n            this.style.width = this.group.width + 'px';\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    updateCallback(e: any) {\n        const data = this.connector.displayedDataset[this.rowNo];\n        const cell = this.cell;\n\n        cell.beforeEditCallbackFn &&\n            cell.beforeEditCallbackFn(e, cell, this.rowNo, data, this.connector);\n        // filter out based on type so we know what type to use\n        if (cell.autoUpdateData !== false) {\n            switch (this.cell.type) {\n                case 'boolean':\n                    data[cell.attribute] = e.target.checked;\n                    break;\n                case 'image':\n                    // rowData[col.attribute] = e.target.checked;\n                    // we need this ever ?\n                    break;\n                case 'date':\n                    data[cell.attribute] = e.target.valueAsDate;\n                    break;\n                case 'number':\n                    data[cell.attribute] = e.target.valueAsNumber;\n                    break;\n                default:\n                    data[cell.attribute] = e.target.value;\n            }\n            this.connector.publishEvent('attribute-change');\n        }\n        cell.afterEditCallbackFn &&\n            cell.afterEditCallbackFn(e, cell, this.rowNo, data, this.connector);\n    }\n\n    render() {\n        if (this.connector.displayedDataset[this.rowNo]) {\n            const cell = this.cell;\n            const data = this.connector.displayedDataset[this.rowNo];\n            const change = this.cell.editEventType !== 'input' ? this.updateCallback : null;\n            const input = this.cell.editEventType === 'input' ? this.updateCallback : null;\n\n            if (cell.renderRowCallBackFn) {\n                return cell.renderRowCallBackFn(\n                    cell,\n                    data,\n                    this.rowNo,\n                    this.connector,\n                    this.updateCallback\n                );\n            }\n\n            switch (cell.type) {\n                case 'boolean':\n                    return html`\n                        <input\n                            ?readonly=${cell.readonly}\n                            ?disabled=${cell.disabled}\n                            @change=${change}\n                            @input=${input}\n                            type=\"checkbox\"\n                            .checked=${data[cell.attribute]}\n                            class=\"free-grid-row-checkbox\"\n                        />\n                    `;\n                case 'image':\n                    return html`\n                        <img .src=${data[cell.attribute] || ''} class=\"free-grid-image-round\" />\n                    `;\n                case 'empty':\n                    return html`\n                        <style>\n                            .free-grid .hideme {\n                                background-color: ${getComputedStyle(this.ref).getPropertyValue(\n                                    '--freegrid-main-bg-color'\n                                )};\n                            }\n                        </style>\n                        <div class=\"free-grid-row-input hideme\"></div>\n                    `;\n\n                case 'date':\n                    return html`\n                        <input\n                            ?readonly=${cell.readonly}\n                            ?disabled=${cell.disabled}\n                            @change=${change}\n                            @input=${input}\n                            type=${cell.type}\n                            .valueAsDate=${data[cell.attribute] || null}\n                            class=\"free-grid-row-input\"\n                        />\n                    `;\n                case 'number':\n                    return html`\n                        <input\n                            ?readonly=${cell.readonly}\n                            ?disabled=${cell.disabled}\n                            @change=${change}\n                            @input=${input}\n                            type=${cell.type}\n                            .valueAsNumber=${data[cell.attribute]}\n                            class=\"free-grid-row-input\"\n                        />\n                    `;\n                default:\n            }\n\n            return html`\n                <input\n                    ?readonly=${cell.readonly}\n                    ?disabled=${cell.disabled}\n                    @change=${change}\n                    @input=${input}\n                    type=${cell.type || 'text'}\n                    .value=${data[cell.attribute] || null}\n                    class=\"free-grid-row-input\"\n                />\n            `;\n        } else {\n            return '';\n        }\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface, FreeGrid } from '../';\nimport { IgridConfigGroups } from '../interfaces';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-cell-filter')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-cell-filter';\n    connector: GridInterface;\n    cellPosition: number;\n    ref: FreeGrid;\n    currentHeight: number;\n    group: IgridConfigGroups;\n    label: string;\n    attribute: string;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.height = config.cellHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\n        this.attribute = this.group.rows[this.cellPosition].attribute;\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize') {\n            this.style.width = this.group.width + 'px';\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const cell = this.group.rows[this.cellPosition];\n\n        const coltype = cell.type === 'boolean' ? 'checkbox' : cell.type;\n\n        const value = cell.filterable.currentValue || null;\n        const placeholder = cell.filterable.placeholder || '';\n\n        const filterCallback = (e: any) => {\n            // if boolean column we to to overide how it behaves\n            if (cell.type === 'boolean') {\n                const t: any = e.target;\n                switch (t.state) {\n                    case 0:\n                        t.state = 2;\n                        t.style.opacity = '1';\n                        t.checked = true;\n                        t.indeterminate = false;\n                        break;\n                    case 2:\n                        t.state = 3;\n                        t.style.opacity = '1';\n                        t.indeterminate = false;\n                        break;\n                    default:\n                        t.checked = false;\n                        t.state = 0;\n                        t.style.opacity = '0.3';\n                        t.indeterminate = true;\n                }\n            }\n            cell.filterable.beforeFilterCallbackFn &&\n                cell.filterable.beforeFilterCallbackFn(e, cell, this.connector);\n            if (cell.filterable.auto !== false) {\n                this.connector.filterCallback(e, cell);\n            }\n        };\n\n        const enterKeyDown = (e: KeyboardEvent) => {\n            const keycode = e.keyCode ? e.keyCode : e.which;\n            if (keycode === 13) {\n                filterCallback(<any>e);\n            }\n        };\n\n        let boolstyle = null;\n        let indeterminate = false;\n        let setState = 0;\n        if (cell.type === 'boolean' && cell.filterable) {\n            // if no value is set then its \"blank state, nothing filtered\n            if (cell.filterable.currentValue !== false && cell.filterable.currentValue !== true) {\n                boolstyle = 'opacity:0.3';\n                indeterminate = true;\n                setState = 0;\n            } else {\n                setState = cell.filterable.currentValue ? 2 : 3;\n            }\n        }\n\n        let classname = 'free-grid-row-input';\n        if (cell.type === 'boolean') {\n            classname = 'free-grid-row-checkbox';\n        }\n\n        const change = cell.editEventType !== 'input' ? filterCallback : null;\n        const input = cell.editEventType === 'input' ? filterCallback : null;\n\n        if (cell.renderFilterCallBackFn) {\n            return cell.renderFilterCallBackFn(cell, this.connector, filterCallback);\n        }\n\n        if (coltype === 'date') {\n            return html`\n                <input\n                    type=${coltype}\n                    style=${boolstyle}\n                    class=${classname}\n                    @input=${input}\n                    @keydown=${enterKeyDown}\n                    .valueAsDate=${value}\n                    placeholder=${placeholder}\n                />\n            `;\n        } else {\n            return html`\n                <input\n                    type=${coltype || 'text'}\n                    style=${boolstyle}\n                    .indeterminate=${indeterminate}\n                    .state=${setState}\n                    class=${classname}\n                    @change=${change}\n                    @input=${input}\n                    @keydown=${enterKeyDown}\n                    .value=${value}\n                    placeholder=${placeholder}\n                />\n            `;\n        }\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '..';\nimport { IgridConfigGroups } from '../interfaces';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-group-filter')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-group-filter';\n    connector: GridInterface;\n    rowNo: number;\n    ref: FreeGrid;\n    currentHeight: number;\n    group: IgridConfigGroups;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.__rowHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.left = this.group.__left + 'px';\n        this.style.top = config.__rowHeight + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize' || e.type === 'reRender') {\n            const grouping =\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n            let curleft = grouping ? grouping * 15 : 0;\n            this.style.width = this.group.width + 'px';\n            this.style.left = this.group.__left + curleft + 'px';\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        return html`\n            ${this.group.rows.map((cell, i) => {\n                if (cell.filterable && cell.type !== 'empty') {\n                    return html`\n                        <free-grid-cell-filter\n                            .connector=${this.connector}\n                            .cell=${cell}\n                            .group=${this.group}\n                            .ref=${this.ref}\n                            .cellPosition=${i}\n                        ></free-grid-cell-filter>\n                    `;\n                } else {\n                    return '';\n                }\n            })}\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '..';\nimport { IgridConfigGroups } from '../interfaces';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-group-label')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-group-label';\n    connector: GridInterface;\n    ref: FreeGrid;\n    currentHeight: number;\n    group: IgridConfigGroups;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.__rowHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.left = this.group.__left + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize' || e.type === 'reRender') {\n            const grouping =\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n            let curleft = grouping ? grouping * 15 : 0;\n            this.style.width = this.group.width + 'px';\n            this.style.left = this.group.__left + curleft + 'px';\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        return html`\n            ${this.group.rows.map((cell, i) => {\n                return html`\n                    <free-grid-cell-label\n                        .connector=${this.connector}\n                        .cell=${cell}\n                        .group=${this.group}\n                        .ref=${this.ref}\n                        .cellPosition=${i}\n                    ></free-grid-cell-label>\n                `;\n            })}\n        `;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { GridInterface, FreeGrid } from '../';\nimport { IgridConfigGroups } from '../interfaces';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-group-row')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-group-row';\n    connector: GridInterface;\n    @property() rowNo: number;\n    ref: FreeGrid;\n    currentHeight: number;\n    group: IgridConfigGroups;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        const grouping =\n            this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n        let curleft = grouping ? grouping * 15 : 0;\n        this.style.display = 'block';\n        this.style.height = config.__rowHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.left = this.group.__left + curleft + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize' || e.type === 'reRender') {\n            const grouping =\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n            let curleft = grouping ? grouping * 15 : 0;\n            this.style.width = this.group.width + 'px';\n            this.style.left = this.group.__left + curleft + 'px';\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        return html`\n            ${this.group.rows.map((cell, i) => {\n                return html`\n                    <free-grid-cell-row\n                        .connector=${this.connector}\n                        .rowNo=${this.rowNo}\n                        .cell=${cell}\n                        .group=${this.group}\n                        .ref=${this.ref}\n                        .cellPosition=${i}\n                    ></free-grid-cell-row>\n                `;\n            })}\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '..';\n\n@customElement('free-grid-header')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-header';\n    connector: GridInterface;\n    ref: FreeGrid;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.top = config.panelHeight + 'px';\n        this.style.height = config.__rowHeight * 2 + 'px';\n        this.ref.addEventListener('horizontal-scroll', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'horizontal-scroll' || e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('horizontal-scroll', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const config = this.connector.config;\n\n        this.style.left = -config.scrollLeft + 'px';\n        this.style.width = config.__rowWidth + 'px';\n\n        const grouping =\n            this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n\n        return html`\n            <free-grid-col\n                class=\" free-grid-grouping-row\"\n                style=\"width:${grouping ? grouping * 15 : 0}px;left:0; display:${grouping\n                    ? 'block'\n                    : 'none'}\"\n            >\n            </free-grid-col>\n            ${config.groups.map((group) => {\n                return html`\n                    <free-grid-group-label\n                        .connector=${this.connector}\n                        .ref=${this.ref}\n                        .group=${group}\n                    >\n                    </free-grid-group-label>\n                    <free-grid-group-filter\n                        .connector=${this.connector}\n                        .ref=${this.ref}\n                        .group=${group}\n                    >\n                    </free-grid-group-filter>\n                `;\n            })}\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\n\n@customElement('free-grid-footer')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-footer';\n    connector: GridInterface;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.height = config.footerHeight + 'px';\n    }\n\n    render() {\n        return 'footer';\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { html, svg } from 'lit-html';\nimport { FreeGrid } from '..';\n\n@customElement('free-grid-panel')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-panel';\n    connector: GridInterface;\n    ref: FreeGrid;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.height = config.panelHeight + 'px';\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const grouping = this.connector.config.groupingSet || [];\n\n        const mouseEnter = (e: MouseEvent) => {\n            (<HTMLElement>e.target)\n                .getElementsByClassName('free-grid-icon')[0]\n                .classList.remove('free-grid-iconhidden');\n        };\n\n        const mouseLeave = (e: MouseEvent) => {\n            (<HTMLElement>e.target)\n                .getElementsByClassName('free-grid-icon')[0]\n                .classList.add('free-grid-iconhidden');\n        };\n\n        return html`\n            ${grouping.map((group) => {\n                const click = () => {\n                    this.connector.removeGroup(group);\n                };\n                return html`\n                    <div\n                        @mouseenter=${mouseEnter}\n                        @mouseleave=${mouseLeave}\n                        class=\"free-grid-grouping-panel-container\"\n                    >\n                        <p class=\"free-grid-grouping-panel-p\">\n                            ${group.title || group.field}\n                            <i>\n                                <svg\n                                    @click=${click}\n                                    class=\"free-grid-icon free-grid-iconhidden\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 16 16\"\n                                >\n                                    ${svg`<path d=\"M3 4l4.3 4L3 12h1.4L8 8.7l3.5 3.3H13L8.6 8 13 4h-1.5L8 7.3 4.4 4H3z\"/>`}\n                                </svg></i\n                            >\n                        </p>\n                    </div>\n                `;\n            })}\n        `;\n    }\n}\n","import { GridInterface } from './gridInterface';\nimport { FreeGrid } from '.';\n\nexport function scrollEvent(\n    connector: GridInterface,\n    rowPositionCache: {\n        i: number;\n    }[],\n    ref: FreeGrid\n) {\n    return (e: any) => {\n        if (\n            connector.config.scrollLeft &&\n            connector.config.scrollLeft !== e.target.scrollLeft &&\n            connector.config.lastScrollTop == e.target.scrollTop\n        ) {\n            connector.config.scrollLeft = e.target.scrollLeft;\n            ref.triggerEvent('horizontal-scroll');\n        } else {\n            // window.focus();\n            connector.config.scrollLeft = e.target.scrollLeft;\n            if (document.activeElement) {\n                (document.activeElement as any).blur();\n            }\n            const rowHeight = connector.config.__rowHeight;\n            const cacheLength = rowPositionCache.length;\n            const collectionLength = connector.displayedDataset.length;\n            const cacheTotalHeight = rowHeight * cacheLength;\n            const contentHeight = e.target.clientHeight;\n            const scrolltop = e.target.scrollTop;\n            const lastScrollTop = connector.config.lastScrollTop;\n            let isDownScroll = true;\n            if (scrolltop < lastScrollTop) {\n                isDownScroll = false;\n            }\n            let scrollbars = false;\n            if (Math.abs(scrolltop - lastScrollTop) > 100) {\n                scrollbars = true;\n            }\n            connector.config.lastScrollTop = scrolltop;\n            let currentRow = Math.floor(scrolltop / rowHeight);\n            if (scrollbars) {\n                for (let i = 0; i < cacheLength; i++) {\n                    rowPositionCache[i].i = currentRow;\n                    currentRow++;\n                }\n            } else {\n                for (let i = 0; i < cacheLength; i++) {\n                    const cache = rowPositionCache[i];\n                    const currentTop = cache.i * rowHeight;\n                    let needToUpdate = false;\n                    let newTop: number;\n                    if (!isDownScroll) {\n                        if (currentTop > scrolltop + contentHeight) {\n                            needToUpdate = true;\n                            newTop = currentTop - cacheTotalHeight;\n                            currentRow = (currentTop - cacheTotalHeight) / rowHeight;\n                        }\n                    } else {\n                        if (currentTop < scrolltop - rowHeight) {\n                            needToUpdate = true;\n                            newTop = currentTop + cacheTotalHeight;\n                            currentRow = (currentTop + cacheTotalHeight) / rowHeight;\n                        }\n                    }\n                    if (\n                        needToUpdate === true &&\n                        currentRow >= 0 &&\n                        currentRow <= collectionLength\n                    ) {\n                        rowPositionCache[i].i = newTop / rowHeight;\n                    }\n                }\n                rowPositionCache.sort();\n            }\n            // need to call render directly so it updates right away\n            ref.triggerEvent('vertical-scroll');\n        }\n    };\n}\n","import { GridInterface } from '.';\nimport { ICell } from './interfaces';\n\nlet dragCell: ICell = null;\nlet dragColumnBlock: HTMLElement = null;\nlet delayDragEventTimer: any = null;\n\n/* function offset(el: HTMLElement, width: number) {\n    const rect = el.getBoundingClientRect();\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n        scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    return {\n        top: rect.top + scrollTop,\n        left: rect.left + scrollLeft,\n        center: rect.left + width / 2 + scrollLeft\n    };\n} */\n\nexport const columnDragDropPanel = (event: string, _connector: GridInterface) => {\n    const drop = (e: any) => {\n        if (dragCell.allowGrouping) {\n            _connector.groupingCallback(e, dragCell);\n        }\n        e.target.removeEventListener('mouseup', drop);\n        (e.target as any).classList.remove('free-grid-candrop');\n    };\n\n    return (_e: MouseEvent) => {\n        if (event === 'enter' && dragCell) {\n            (_e.target as any).classList.add('free-grid-candrop');\n            _e.target.addEventListener('mouseup', drop);\n        }\n\n        if (event === 'leave' && dragCell) {\n            _e.target.removeEventListener('mouseup', drop);\n            (_e.target as any).classList.remove('free-grid-candrop');\n        }\n    };\n};\n\nexport const columnDragDrop = (event: string, _col: ICell, _connector: GridInterface) => {\n    // here we will clean up eevnt listeners\n    const mouseUp = function () {\n        document.removeEventListener('mouseup', mouseUp);\n        document.removeEventListener('mousemove', mouseMove);\n        clearTimeout(delayDragEventTimer);\n        dragCell = null;\n        if (dragColumnBlock) {\n            document.body.removeChild(dragColumnBlock);\n        }\n        dragColumnBlock = null;\n    };\n\n    // this will just move our label\n    const mouseMove = function (e: MouseEvent) {\n        setTimeout(() => {\n            if (dragColumnBlock) {\n                dragColumnBlock.style.top = e.clientY + document.documentElement.scrollTop + 'px'; // hide it\n                dragColumnBlock.style.left = e.clientX + document.documentElement.scrollLeft + 'px';\n            }\n        }, 10);\n    };\n\n    // main event binded to column\n    return (_e: any) => {\n        // mouse down event\n        if (event === 'dragstart' && _e.button === 0 && _e.target.tagName === 'SPAN') {\n            //save cell ref\n            dragCell = _e.target.cell;\n\n            // register mouseup so we can clean up\n            document.addEventListener('mouseup', mouseUp);\n\n            dragColumnBlock = document.createElement('div');\n            dragColumnBlock.style.top = -1200 + 'px'; // hide it\n            dragColumnBlock.style.left = -1200 + 'px';\n            dragColumnBlock.classList.add('free-grid');\n            dragColumnBlock.classList.add('free-grid-drag');\n            dragColumnBlock.textContent = _col.header;\n            document.body.appendChild(dragColumnBlock);\n            document.addEventListener('mousemove', mouseMove);\n        }\n\n        if (dragCell !== null) {\n            // not very fancy, but betteer then nothing\n            const drop = (e: any) => {\n                let daCell = Object.assign({}, dragCell);\n                let doCell = Object.assign({}, _col);\n                let keys = Object.assign(dragCell, _col);\n\n                for (const key in keys) {\n                    dragCell[key] = doCell[key];\n                    _col[key] = daCell[key];\n                }\n\n                _connector.reRender();\n\n                e.target.removeEventListener('mouseup', drop);\n                (e.target as any).classList.remove('free-grid-candrop');\n            };\n\n            if (event === 'enter' && dragCell) {\n                if (_col.type === 'empty') {\n                    (_e.target as any).classList.toggle('hideme');\n                }\n\n                (_e.target as any).classList.add('free-grid-candrop');\n                _e.target.addEventListener('mouseup', drop);\n            }\n\n            if (event === 'leave' && dragCell) {\n                if (_col.type === 'empty') {\n                    (_e.target as any).classList.toggle('hideme');\n                }\n                _e.target.removeEventListener('mouseup', drop);\n                (_e.target as any).classList.remove('free-grid-candrop');\n            }\n        }\n    };\n};\n","import { html } from 'lit-html';\nimport { IgridConfigGroups } from '../interfaces';\nimport { FreeGrid } from '../';\n\nexport function resizeColumnElement(ref: FreeGrid, group: IgridConfigGroups) {\n    let originX: number = null;\n    const originalColumnWidth = group.width;\n\n    const mouseMove = (e: MouseEvent) => {\n        e.preventDefault();\n        if (originX) {\n            const movment = Math.abs(originX - e.screenX);\n            if (movment % 2 === 0) {\n                const movementX = originX - e.screenX;\n                const newColumnWidth = originalColumnWidth - movementX;\n                group.width = newColumnWidth > 10 ? newColumnWidth : 10;\n\n                // fix config before trigger\n                let totalWidth = 0;\n                ref.interface.config.groups.reduce((agg, element) => {\n                    element.__left = agg;\n                    totalWidth = totalWidth + element.width;\n                    return element.__left + element.width;\n                }, 0);\n                ref.interface.config.__rowWidth = totalWidth;\n\n                requestAnimationFrame(() => {\n                    ref.triggerEvent('column-resize');\n                });\n            }\n        }\n    };\n\n    const mouseUp = () => {\n        document.removeEventListener('mousemove', mouseMove);\n        document.removeEventListener('mouseup', mouseUp);\n    };\n\n    const mouseDown = (e: MouseEvent) => {\n        originX = e.screenX;\n        document.addEventListener('mousemove', mouseMove);\n        document.addEventListener('mouseup', mouseUp);\n    };\n\n    return html` <div class=\"free-grid-draggable-handler\" @mousedown=${mouseDown}></div> `;\n}\n","import { html, svg } from 'lit-html';\nimport { ICell } from '../interfaces';\nimport { GridInterface } from '../gridInterface';\n\nexport function sorticonElement(_connector: GridInterface, col: ICell) {\n    const ascTemplate = svg`\n        <svg class=\"free-grid-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M7.4 6L3 10h1.5L8 7l3.4 3H13L8.5 6h-1z\"/>\n        </svg>`;\n\n    const descTemplate = svg`\n        <svg class=\"free-grid-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M7.4 10L3 6h1.5L8 9.2 11.3 6H13l-4.5 4h-1z\"/>\n        </svg>`;\n\n    if (col.sortable && col.sortable.sortNo) {\n        return html`\n            <i class=\"free-grid-fa-sort-number\" data-vgridsort=\"${col.sortable.sortNo}\">\n                ${col.sortable.sortAscending ? ascTemplate : descTemplate}\n            </i>\n        `;\n    } else {\n        return html``;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface, FreeGrid } from '..';\nimport { IgridConfigGroups } from '../interfaces';\nimport { html } from 'lit-html';\nimport { resizeColumnElement } from './resizeColumnElement';\nimport { sorticonElement } from './sorticonElement';\nimport { columnDragDrop } from '../dragEvent';\n\n@customElement('free-grid-cell-label')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-cell-label';\n    connector: GridInterface;\n    cellPosition: number;\n    ref: FreeGrid;\n    currentHeight: number;\n    group: IgridConfigGroups;\n    label: string;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.cellHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const cell = this.group.rows[this.cellPosition];\n        const connector = this.connector;\n        const label = this.group.rows[this.cellPosition].header;\n\n        const sortCallback = (e: any) => {\n            const mouseup = (e: MouseEvent) => {\n                cell.sortable.beforeSortCallbackFn &&\n                    cell.sortable.beforeSortCallbackFn(<any>e, cell, connector);\n                if (cell.sortable.auto !== false) {\n                    console.log('sort');\n                    connector.sortCallback(<any>e, cell);\n                }\n            };\n\n            if ((<any>e).button === 0) {\n                e.target.addEventListener('mouseup', mouseup);\n                setTimeout(() => {\n                    e.target.removeEventListener('mouseup', mouseup);\n                }, 500);\n            } else {\n                console.log('open menu');\n            }\n        };\n\n        const mousedown = columnDragDrop('dragstart', cell, connector);\n        const mouseenter = columnDragDrop('enter', cell, connector);\n        const mouseleave = columnDragDrop('leave', cell, connector);\n\n        this.style.width = this.group.width + 'px';\n\n        if (cell.renderLabelCallBackFn) {\n            return cell.renderLabelCallBackFn(\n                cell,\n                this.connector,\n                sorticonElement,\n                resizeColumnElement,\n                mousedown,\n                mouseenter,\n                mouseleave\n            );\n        }\n\n        if (cell.type === 'empty') {\n            return html`\n                <style>\n                    .free-grid .hideme {\n                        background-color: ${getComputedStyle(this.ref).getPropertyValue(\n                            '--freegrid-main-bg-color'\n                        )};\n                    }\n                </style>\n                <span\n                    .cell=${cell}\n                    class=\"free-grid-label hideme\"\n                    @mouseenter=${!cell.disableDragDrop && mouseenter}\n                    @mouseleave=${!cell.disableDragDrop && mouseleave}\n                >\n                </span>\n                ${resizeColumnElement(this.ref, this.group)}\n            `;\n        } else {\n            return html`\n                <span\n                    .cell=${cell}\n                    class=\"free-grid-label\"\n                    @mousedown=${(e: any) => {\n                        cell.sortable && sortCallback(e);\n                        !cell.disableDragDrop && mousedown(e);\n                    }}\n                    @mouseenter=${!cell.disableDragDrop && mouseenter}\n                    @mouseleave=${!cell.disableDragDrop && mouseleave}\n                    >${label} ${sorticonElement(this.connector, cell)}</span\n                >\n                ${resizeColumnElement(this.ref, this.group)}\n            `;\n        }\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '../';\nimport { html } from 'lit-html';\n\n@customElement('free-grid-row')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-row';\n    connector: GridInterface;\n    row: { i: number };\n    ref: FreeGrid;\n    currentHeight: number;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.__rowHeight + 'px';\n        this.currentHeight = this.row.i * config.__rowHeight;\n        this.style.transform = `translate3d(0px, ${this.currentHeight}px, 0px)`;\n        this.ref.addEventListener('vertical-scroll', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'vertical-scroll') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const config = this.connector.config;\n\n        // check if height is changed\n        if (this.currentHeight !== this.row.i * config.__rowHeight) {\n            this.currentHeight = this.row.i * config.__rowHeight;\n            this.style.transform = `translate3d(0px, ${this.row.i * config.__rowHeight}px, 0px)`;\n        }\n\n        const rowClick = (e: any) => {\n            this.connector.selection.highlightRow(<any>e, this.row.i);\n            this.ref.triggerEvent('vertical-scroll');\n        };\n\n        if (this.connector.selection.isSelected(this.row.i)) {\n            this.classList.add('free-grid-selected-row');\n        } else {\n            this.classList.remove('free-grid-selected-row');\n        }\n\n        const grouping =\n            this.connector.config.groupingSet && this.connector.config.groupingSet.length;\n\n        return html`\n            <free-grid-col\n                class=\"free-grid-grouping-row\"\n                style=\"width:${grouping ? grouping * 15 : 0}px;left:0; display:${grouping\n                    ? 'block'\n                    : 'none'}\"\n            >\n            </free-grid-col>\n            ${config.groups.map((group) => {\n                return html`\n                    <free-grid-group-row\n                        @click=${rowClick}\n                        .connector=${this.connector}\n                        .rowNo=${this.row.i}\n                        .ref=${this.ref}\n                        .group=${group}\n                    >\n                    </free-grid-group-row>\n                `;\n            })}\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { FreeGrid } from '..';\nimport { html, svg } from 'lit-html';\n\n@customElement('free-grid-row-group')\nexport default class extends HTMLElement {\n    classList: any = 'free-grid-row';\n    connector: GridInterface;\n    row: { i: number };\n    ref: FreeGrid;\n    currentHeight: number;\n\n    connectedCallback() {\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.__rowHeight + 'px';\n        this.currentHeight = this.row.i * config.__rowHeight;\n        this.style.transform = `translate3d(0px, ${this.currentHeight}px, 0px)`;\n        this.ref.addEventListener('vertical-scroll', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'vertical-scroll') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const config = this.connector.config;\n\n        // check if height is changed\n        //  if (this.currentHeight !== this.row.i * config.__rowHeight) {\n        this.currentHeight = this.row.i * config.__rowHeight;\n        this.style.transform = `translate3d(0px, ${this.row.i * config.__rowHeight}px, 0px)`;\n        // }\n        const entity = this.connector.displayedDataset[this.row.i];\n\n        if (entity) {\n            const changeGrouping = () => {\n                if (entity.__groupExpanded) {\n                    this.connector.groupCollapse(entity.__groupID);\n                } else {\n                    this.connector.groupExpand(entity.__groupID);\n                }\n            };\n\n            const defaultMarkup = html`\n                <i @click=${changeGrouping}>\n                    <svg\n                        class=\"free-grid-icon\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 16 16\"\n                    >\n                        ${entity.__groupExpanded\n                            ? svg`<path d=\"M4.8 7.5h6.5v1H4.8z\" />`\n                            : svg`<path d=\"M7.4 4.8v2.7H4.7v1h2.7v3h1v-3h2.8v-1H8.5V4.8h-1z\" />`}\n                    </svg></i\n                ><span> ${entity.__groupName} (${entity.__groupTotal})</span>\n            `;\n\n            return html`\n                ${entity.__groupLvl\n                    ? html`\n                          <free-grid-col\n                              class=\"free-grid-col free-grid-grouping-row\"\n                              style=\"width:${entity.__groupLvl\n                                  ? entity.__groupLvl * 15\n                                  : 0}px;left:0\"\n                          >\n                          </free-grid-col>\n                      `\n                    : ''}\n                ${html`\n                    <free-grid-col\n                        class=\"free-grid-col-group\"\n                        style=\"left:${entity.__groupLvl ? entity.__groupLvl * 15 : 0}px;right:0\"\n                    >\n                        ${defaultMarkup}\n                    </free-grid-col>\n                `}\n            `;\n        } else {\n            return '';\n        }\n    }\n}\n","import './free-grid-body';\nimport './free-grid-cell-row';\nimport './free-grid-cell-filter';\nimport './free-grid-cell-label';\nimport './free-grid-group-filter';\nimport './free-grid-group-label';\nimport './free-grid-group-row';\nimport './free-grid-header';\nimport './free-grid-footer';\nimport './free-grid-panel';\nimport './free-grid-row';\nimport './free-grid-row-group';\nimport { scrollEvent } from '../scrollEvent';\nimport { GridInterface } from '../gridInterface';\nimport { rowCache } from '../interfaces';\nimport { html } from 'lit-html';\nimport { FreeGrid } from '../';\nimport { columnDragDropPanel } from '../dragEvent';\n\nexport function generate(connector: GridInterface, rowPositionCache: rowCache[], ref: FreeGrid) {\n    const scroll = scrollEvent(connector, rowPositionCache, ref);\n    const enter = columnDragDropPanel('enter', connector);\n    const leave = columnDragDropPanel('leave', connector);\n\n    return html`\n        <free-grid-panel\n            .connector=${connector}\n            .ref=${ref}\n            @mouseleave=${leave}\n            @mouseenter=${enter}\n        ></free-grid-panel>\n        <free-grid-header .connector=${connector} .ref=${ref}></free-grid-header>\n        <free-grid-body\n            .connector=${connector}\n            .rowPositionCache=${rowPositionCache}\n            @scroll=${scroll}\n            .ref=${ref}\n        ></free-grid-body>\n        <free-grid-footer .connector=${connector} .ref=${ref}></free-grid-footer>\n    `;\n}\n","import { IFilterObj, IEntity } from './interfaces';\r\n\r\nexport class ArrayFilter {\r\n    private lastFilter: IFilterObj[];\r\n    public operators: any = {\r\n        EQUAL: 1,\r\n        LESS_THAN_OR_EQUAL_TO: 2,\r\n        GREATER_THAN_OR_EQUAL_TO: 3,\r\n        LESS_THAN: 4,\r\n        GREATER_THAN: 5,\r\n        CONTAINS: 6,\r\n        NOT_EQUAL_TO: 7,\r\n        DOES_NOT_CONTAIN: 8,\r\n        BEGIN_WITH: 9,\r\n        END_WITH: 10\r\n    };\r\n\r\n    constructor() {\r\n        this.lastFilter = [];\r\n    }\r\n\r\n    public getLastFilter(): IFilterObj[] {\r\n        return this.lastFilter;\r\n    }\r\n\r\n    public getFilterFromType(type: string) {\r\n        switch (type) {\r\n            case 'date':\r\n            case 'number':\r\n                return 'GREATER_THAN';\r\n            case 'bool':\r\n                return 'EQUAL_TO';\r\n            default:\r\n                return 'BEGIN_WITH';\r\n        }\r\n    }\r\n\r\n    public runQueryOn(objArray: IEntity[], ObjFilter: IFilterObj[]) {\r\n        this.lastFilter = ObjFilter;\r\n\r\n        const resultArray = objArray.filter((data) => {\r\n            // lets have true as default, so all that should not be there we set false..\r\n            let result = true;\r\n            ObjFilter.forEach((x: IFilterObj) => {\r\n                // vars\r\n                let rowValue: any;\r\n                let filterValue: any;\r\n                let filterOperator = x.operator;\r\n                let newFilterOperator: number;\r\n                let type: string = x.type;\r\n\r\n                if (x.value === 'null') {\r\n                    type = 'null';\r\n                }\r\n\r\n                rowValue = data[x.attribute];\r\n\r\n                // helper for boolean\r\n                const typeBool: { true: boolean; false: boolean } = {\r\n                    true: true,\r\n                    false: false\r\n                };\r\n\r\n                // lets set some defaults/corrections if its all wrong\r\n                switch (type) {\r\n                    case 'null':\r\n                        filterOperator = 1;\r\n\r\n                        break;\r\n                    case 'number':\r\n                        filterValue = Number(x.value);\r\n                        if (!filterValue) {\r\n                            // needs to be 0\r\n                            filterValue = 0;\r\n                        }\r\n                        filterOperator = filterOperator || 1;\r\n                        if (filterOperator === 6) {\r\n                            filterOperator = 1;\r\n                        }\r\n                        break;\r\n                    case 'text':\r\n                        if (rowValue === null || rowValue === undefined) {\r\n                            rowValue = '';\r\n                        } else {\r\n                            rowValue = rowValue.toLowerCase();\r\n                        }\r\n                        filterValue = x.value.toLowerCase();\r\n                        filterOperator = filterOperator || 9;\r\n                        newFilterOperator = filterOperator;\r\n\r\n                        // if filter operator is BEGIN WITH\r\n                        if (x.value.charAt(0) === '*' && filterOperator === 9) {\r\n                            newFilterOperator = 6;\r\n                            filterValue = filterValue.substr(1, filterValue.length);\r\n                        }\r\n\r\n                        // if filter operator is EQUAL TO\r\n                        // wildcard first = end with\r\n                        if (x.value.charAt(0) === '*' && filterOperator === 1) {\r\n                            newFilterOperator = 10;\r\n                            filterValue = filterValue.substr(1, filterValue.length);\r\n                        }\r\n\r\n                        // wildcard end and first = contains\r\n                        if (\r\n                            x.value.charAt(x.value.length - 1) === '*' &&\r\n                            filterOperator === 1 &&\r\n                            newFilterOperator === 10\r\n                        ) {\r\n                            newFilterOperator = 6;\r\n                            filterValue = filterValue.substr(0, filterValue.length - 1);\r\n                        }\r\n\r\n                        // begin with since wildcard is in the end\r\n                        if (\r\n                            x.value.charAt(x.value.length - 1) === '*' &&\r\n                            filterOperator === 1 &&\r\n                            newFilterOperator !== 10 &&\r\n                            newFilterOperator !== 6\r\n                        ) {\r\n                            newFilterOperator = 9;\r\n                            filterValue = filterValue.substr(0, filterValue.length - 1);\r\n                        }\r\n\r\n                        // set the filteroperator from new if changed\r\n                        if (filterOperator !== newFilterOperator) {\r\n                            filterOperator = newFilterOperator;\r\n                        }\r\n                        break;\r\n                    case 'boolean':\r\n                        filterValue = typeBool[x.value];\r\n                        filterOperator = 1;\r\n                        break;\r\n\r\n                    default:\r\n                        // todo: take the stuff under equal to and put in a function\r\n                        // and also call i from here.. or just make it fail?\r\n                        try {\r\n                            rowValue = rowValue.toLowerCase();\r\n                        } catch (err) {\r\n                            rowValue = rowValue;\r\n                        }\r\n                        try {\r\n                            filterValue = x.value.toLowerCase();\r\n                        } catch (err) {\r\n                            filterValue = x.value;\r\n                        }\r\n                        filterOperator = filterOperator || 1;\r\n                        break;\r\n                }\r\n\r\n                // filter from what operator used\r\n                switch (filterOperator) {\r\n                    case 1: // equal\r\n                        if (rowValue !== filterValue) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 2: // less or equal\r\n                        if (!(rowValue <= filterValue)) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 3: // greater or equal\r\n                        if (!(rowValue >= filterValue)) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 4: // greate\r\n                        if (!(rowValue < filterValue)) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 5: // greater\r\n                        if (!(rowValue > filterValue)) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 6: // contains\r\n                        if (rowValue.indexOf(filterValue) === -1) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 7: // not equal to\r\n                        if (rowValue === filterValue) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 8: // does not contain\r\n                        if (rowValue.indexOf(filterValue) !== -1) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 9: // begin with\r\n                        if (rowValue.substring(0, filterValue.length) !== filterValue) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    case 10: // end with\r\n                        if (\r\n                            rowValue.substring(\r\n                                rowValue.length - filterValue.length,\r\n                                rowValue.length\r\n                            ) !== filterValue\r\n                        ) {\r\n                            result = false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (rowValue !== filterValue) {\r\n                            result = false;\r\n                        }\r\n                }\r\n                if (type === 'text') {\r\n                    if (x.value.charAt(0) === '*' && x.value.length === 1) {\r\n                        result = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return result;\r\n        });\r\n\r\n        return resultArray;\r\n    }\r\n}\r\n","import { ICell, ISortObjectInterface } from './interfaces';\n\nexport class ArraySort {\n    private lastSort: ISortObjectInterface[];\n    private curSort: ISortObjectInterface[];\n    private localeCompareCode: string;\n    private localeCompareOptions: any;\n\n    constructor() {\n        this.lastSort = [];\n        this.curSort = [];\n        this.localeCompareCode = null;\n        this.localeCompareOptions = { sensitivity: 'base' };\n    }\n\n    public setLocaleCompare(code: string, options?: any): void {\n        this.localeCompareCode = code ? code : null;\n        this.localeCompareOptions = options ? options : { sensitivity: 'base' };\n    }\n\n    public reset(defaultSortAttribute?: string): void {\n        if (defaultSortAttribute) {\n            this.lastSort = [{ attribute: defaultSortAttribute, asc: true, no: 0 }];\n            this.curSort = [{ attribute: defaultSortAttribute, asc: true, no: 0 }];\n        } else {\n            this.lastSort = [];\n            this.curSort = [];\n        }\n    }\n\n    public SetConfigSort(configColumns: ICell[]) {\n        const attribute: string[] = [];\n        const asc: boolean[] = [];\n        const no: number[] = [];\n        this.lastSort.forEach((x) => {\n            attribute.push(x.attribute);\n            asc.push(x.asc);\n            no.push(x.no);\n        });\n        configColumns.forEach((col) => {\n            const i = attribute.indexOf(col.attribute);\n            if (col.sortable) {\n                if (i !== -1) {\n                    col.sortable.sortAscending = asc[i] === true;\n                    col.sortable.sortNo = no[i];\n                } else {\n                    col.sortable.sortAscending = null;\n                    col.sortable.sortNo = null;\n                }\n            }\n        });\n    }\n\n    public clearConfigSort(configColumns: ICell[]) {\n        configColumns.forEach((col) => {\n            if (col.sortable) {\n                col.sortable.sortAscending = null;\n                col.sortable.sortNo = null;\n            }\n        });\n    }\n\n    public setLastSort(array: ISortObjectInterface[]): void {\n        this.lastSort = array;\n        this.curSort = array;\n    }\n\n    public setOrderBy(\n        param: ISortObjectInterface | string | ISortObjectInterface[],\n        add?: boolean\n    ): void {\n        if (Array.isArray(param)) {\n            this.lastSort = param;\n            this.curSort = param;\n        } else {\n            let sort: any;\n            const useSetValue = false;\n            if (typeof param === 'string') {\n                sort = {\n                    attribute: param,\n                    asc: true\n                };\n            } else {\n                if (param.asc === undefined) {\n                    sort = {\n                        attribute: param.attribute,\n                        asc: true\n                    };\n                } else {\n                    sort = {\n                        attribute: param.attribute,\n                        asc: param.asc\n                    };\n                }\n            }\n\n            // do we add or is it the first one\n            if (add && this.lastSort.length > 0) {\n                // its adding, so lets get last one\n                this.curSort = this.lastSort;\n                let exist = false;\n\n                // loop to se if it exist from before\n                this.curSort.forEach((x) => {\n                    if (x.attribute === sort.attribute) {\n                        exist = true;\n                        x.asc = sort.asc;\n                    }\n                });\n\n                // if it dont exist we add it, else there isnt anythin else to do for now\n                if (!exist) {\n                    this.curSort.push(sort);\n                    this.curSort[this.curSort.length - 1].no = this.curSort.length;\n                }\n                this.lastSort = this.curSort;\n            } else {\n                // if not adding, just set it\n                this.curSort = [sort];\n                this.curSort[0].no = 1;\n                if (this.lastSort[0]) {\n                    if (this.lastSort[0].attribute === this.curSort[0].attribute) {\n                        if (this.lastSort[0].asc === this.curSort[0].asc) {\n                            if (!useSetValue) {\n                                this.curSort[0].asc = this.curSort[0].asc === true ? false : true;\n                            }\n                        }\n                    }\n                }\n                this.lastSort = this.curSort;\n            }\n        }\n    }\n\n    public getOrderBy(): ISortObjectInterface[] {\n        return this.curSort;\n    }\n\n    public runOrderbyOn(array: object[]): void {\n        // super simple for now.. atleast I have som form for sort\n        const thisSort = this.getOrderBy();\n\n        // this is mix from different sources... from what I can tell it works now\n        array.sort((obj1: object, obj2: object) => {\n            let result = 0;\n\n            for (let i = 0; i < thisSort.length && result === 0; ++i) {\n                // loop until all are sorted\n                const currentObj = thisSort[i];\n                const v1 = obj1[currentObj.attribute] || '';\n                const v2 = obj2[currentObj.attribute] || '';\n\n                // compares with locale\n                const getLocaleCompareResult = (x1: string, x2: string): number => {\n                    let resultLocale = null;\n                    if (this.localeCompareCode) {\n                        resultLocale = x1.localeCompare(\n                            x2,\n                            this.localeCompareCode,\n                            this.localeCompareOptions\n                        );\n                    } else {\n                        resultLocale = x1.localeCompare(x2);\n                    }\n\n                    return resultLocale;\n                };\n\n                if (v1 !== v2) {\n                    if (currentObj.asc) {\n                        // ASC\n                        if (typeof v1 === 'string' && typeof v1 === 'string') {\n                            if (\n                                getLocaleCompareResult(v1, v2) < 0 &&\n                                getLocaleCompareResult(v1, v2) !== 0\n                            ) {\n                                result = -1;\n                            } else {\n                                result = 1;\n                            }\n                        } else {\n                            if (v1 < v2) {\n                                result = -1;\n                            } else {\n                                result = 1;\n                            }\n                        }\n                    } else {\n                        if (typeof v1 === 'string' && typeof v1 === 'string') {\n                            if (\n                                getLocaleCompareResult(v1, v2) < 0 &&\n                                getLocaleCompareResult(v1, v2) !== 0\n                            ) {\n                                result = 1;\n                            } else {\n                                result = -1;\n                            }\n                        } else {\n                            if (v1 < v2) {\n                                result = 1;\n                            } else {\n                                result = -1;\n                            }\n                        }\n                    }\n                }\n            }\n\n            return result;\n        });\n\n        // set current sort as last sort that was used\n        this.lastSort = this.getOrderBy().slice(0);\n    }\n}\n","import { IGroupingObj, IEntity } from './interfaces';\n\n/**\n * This takes care the generating the flat array the grid can use for grouping\n *\n */\nexport class ArrayGrouping {\n    private groups: IEntity[][];\n    private grouping: IGroupingObj[];\n    private expanded: Set<string>;\n\n    constructor() {\n        this.grouping = [];\n        this.expanded = new Set([]);\n    }\n\n    public reset() {\n        this.groups = [];\n        this.grouping = [];\n        this.expanded = new Set([]);\n    }\n\n    public group(arrayToGroup: IEntity[], grouping: IGroupingObj[], keepExpanded?: boolean) {\n        // if grouping\n        if (grouping.length > 0) {\n            // temp holder for groups as we create them\n            if (!keepExpanded) {\n                this.expanded = new Set([]);\n            }\n\n            // variable to hold our groups\n            const groups: IEntity[][] = [];\n\n            grouping.forEach((groupBy, groupNo) => {\n                if (groupNo === 0) {\n                    // create main group and add to groups array\n                    const mainGroup = this.createMainGrouping(arrayToGroup, groupBy.field, groupNo);\n                    groups.push(mainGroup);\n                } else {\n                    // get last group created, and group children\n                    const childGroupArray = groups[groups.length - 1];\n                    const newSubGroup = this.groupChildren(childGroupArray, groupBy.field, groupNo);\n                    groups.push(newSubGroup);\n                }\n            });\n\n            // set to our class wo we have it for later\n            this.groups = groups;\n\n            // set to clas so we can get it later\n            this.grouping = grouping;\n\n            // do we want what was expanded still to be expanded, if so just return firts grouping\n            if (!keepExpanded) {\n                return groups[0];\n            } else {\n                return this.expandOneOrAll(null, this.expanded);\n            }\n        } else {\n            // set all rows to 0 grouping\n            arrayToGroup.forEach((row) => {\n                row.__groupLvl = 0;\n            });\n\n            // clear prev grouping\n            this.grouping = [];\n\n            return arrayToGroup;\n        }\n    }\n\n    public getExpanded() {\n        return Array.from(this.expanded);\n    }\n\n    public setExpanded(x: string[]) {\n        this.expanded = new Set(x);\n    }\n\n    public getGrouping(): IGroupingObj[] {\n        return this.grouping;\n    }\n\n    public setGrouping(g: IGroupingObj[]) {\n        this.grouping = g;\n    }\n\n    public expandOneOrAll(id: string, array?: Set<string>) {\n        let all = id ? false : true; // if no id, then all\n        if (!id) {\n            if (array) {\n                all = false;\n            }\n        }\n\n        if (!array) {\n            array = new Set([]);\n        }\n        let subGroup: Function;\n        const collection: IEntity[] = [];\n        const mainGroups = this.groups[0];\n\n        // loop children\n        // g = group\n        // sg = subgroup\n        subGroup = (g: IEntity) => {\n            g.__groupChildren.forEach((sg: IEntity) => {\n                collection.push(sg);\n                switch (true) {\n                    case all:\n                    case sg.__groupID === id:\n                    case array.has(sg.__groupID):\n                    case sg.__groupID !== id && sg.__groupExpanded:\n                        if (sg.__groupChildren) {\n                            sg.__groupExpanded = true;\n                            this.expanded.add(sg.__groupID);\n                            subGroup(sg);\n                        }\n                        break;\n                    default:\n                        // need anything here ?\n                        break;\n                }\n            });\n        };\n\n        // loop main groups\n        mainGroups.forEach((g: IEntity) => {\n            collection.push(g);\n            switch (true) {\n                case all:\n                case g.__groupID === id:\n                case array.has(g.__groupID):\n                case g.__groupID !== id && g.__groupExpanded:\n                    g.__groupExpanded = true;\n                    this.expanded.add(g.__groupID);\n                    if (g.__groupChildren) {\n                        subGroup(g);\n                    }\n                    break;\n                default:\n                    // need anything here ?\n                    break;\n            }\n        });\n\n        return collection;\n    }\n\n    public collapseOneOrAll(id?: string) {\n        const all = id ? false : true; // if no id, then all\n        id = id === undefined ? null : id;\n        let subGroup: Function;\n        const collection: IEntity[] = [];\n        const mainGroups = this.groups[0];\n\n        // lopp children\n        subGroup = (g: IEntity) => {\n            g.__groupChildren.forEach((sg: IEntity) => {\n                switch (true) {\n                    case all:\n                        if (sg.__groupChildren) {\n                            sg.__groupExpanded = false;\n                            this.expanded.delete(sg.__groupID);\n                            subGroup(sg);\n                        }\n                        break;\n                    case sg.__groupID === id:\n                        collection.push(sg);\n                        this.expanded.delete(sg.__groupID);\n                        sg.__groupExpanded = false;\n                        break;\n                    default:\n                        collection.push(sg);\n                        if (sg.__groupChildren && sg.__groupExpanded) {\n                            subGroup(sg);\n                        }\n                        break;\n                }\n            });\n        };\n\n        // loop main groups\n        mainGroups.forEach((g: IEntity) => {\n            collection.push(g);\n            switch (true) {\n                case all:\n                    g.__groupExpanded = false;\n                    this.expanded.delete(g.__groupID);\n                    if (g.__groupChildren) {\n                        subGroup(g);\n                    }\n                    break;\n                case g.__groupID === id:\n                    g.__groupExpanded = false;\n                    this.expanded.delete(g.__groupID);\n                    break;\n                default:\n                    if (g.__groupChildren && g.__groupExpanded) {\n                        subGroup(g);\n                    }\n                    break;\n            }\n        });\n\n        return collection;\n    }\n\n    private createMainGrouping(array: IEntity[], groupBy: string, groupNo: number) {\n        const tempGroupArray: IEntity[] = [];\n        let curGroup: IEntity = {} as IEntity;\n        let tempValue: string = null;\n\n        // first level, here we use array\n        array.forEach((element) => {\n            let gidm = element[groupBy];\n            gidm = typeof gidm === 'boolean' ? gidm.toString() : gidm;\n            gidm = gidm || ' blank';\n\n            if (gidm !== tempValue) {\n                curGroup = {\n                    __groupName: gidm,\n                    __group: true,\n                    __groupID: gidm,\n                    __groupLvl: groupNo,\n                    __groupChildren: [element],\n                    __groupTotal: 1,\n                    __groupExpanded: false\n                };\n                element.__groupLvl = groupNo + 1;\n                tempValue = gidm;\n                tempGroupArray.push(curGroup);\n            } else {\n                element.__groupLvl = groupNo + 1;\n                curGroup.__groupChildren.push(element);\n                curGroup.__groupTotal++;\n            }\n        });\n\n        return tempGroupArray;\n    }\n\n    private groupChildren(childGroupArray: IEntity[], groupBy: string, groupNo: number) {\n        const tempGroupArray: IEntity[] = [];\n\n        let curGroup: IEntity = {} as IEntity;\n\n        // loop groups\n        childGroupArray.forEach((element: IEntity) => {\n            let tempValue: string = null;\n            // loop children\n            const rebuiltChildrenArray: IEntity[] = [];\n            element.__groupChildren.forEach((child: IEntity) => {\n                const gidm = child[groupBy] || ' blank';\n                if (gidm !== tempValue) {\n                    const gidc = element.__groupID;\n                    curGroup = {\n                        __groupName: gidm,\n                        __groupID: gidc + '-' + gidm,\n                        __group: true,\n                        __groupLvl: groupNo,\n                        __groupChildren: [child],\n                        __groupTotal: 1,\n                        __groupExpanded: false\n                    };\n                    child.__groupLvl = groupNo + 1;\n\n                    tempValue = gidm;\n                    rebuiltChildrenArray.push(curGroup);\n                    tempGroupArray.push(curGroup);\n                } else {\n                    child.__groupLvl = groupNo + 1;\n                    curGroup.__groupChildren.push(child);\n                    curGroup.__groupTotal++;\n                }\n            });\n\n            // replace children with new groups\n            element.__groupChildren = rebuiltChildrenArray;\n        });\n\n        return tempGroupArray;\n    }\n}\n","import { ArrayFilter } from './arrayFilter';\nimport { ArraySort } from './arraySort';\nimport { ArrayGrouping } from './arrayGrouping';\nimport {\n    ISortObjectInterface,\n    IFilterObj,\n    IEntity,\n    IGroupingObj,\n    IGridConfig,\n    ICell\n} from './interfaces';\nimport { GridInterface } from './gridInterface';\n\n/**\n * Helper class for calling internal sort, filter and grouping classes\n *\n */\nexport class ArrayUtils {\n    public arrayFilter: ArrayFilter;\n    public arraySort: ArraySort;\n    public arrayGrouping: ArrayGrouping;\n    public sortCallbackBinded: any;\n    public filterCallbackBinded: (event: any, col: ICell, config: IGridConfig) => void;\n    public groupingCallbackBinded: (event: any, col: ICell) => void;\n    private gridInterface: GridInterface;\n    public removeGroupBinded: any;\n\n    constructor(gridInterface: GridInterface) {\n        this.arrayFilter = new ArrayFilter();\n        this.arraySort = new ArraySort();\n        this.arrayGrouping = new ArrayGrouping();\n        this.sortCallbackBinded = this.sortCallback.bind(this);\n        this.filterCallbackBinded = this.filterCallback.bind(this);\n        this.groupingCallbackBinded = this.groupingCallback.bind(this);\n        this.removeGroupBinded = this.removeGroup.bind(this);\n        this.gridInterface = gridInterface;\n    }\n\n    public orderBy(\n        collection: IEntity[],\n        attribute: string | ISortObjectInterface,\n        addToCurrentSort?: boolean\n    ): { fixed: IEntity[]; full: IEntity[] } {\n        const groupingFields = this.getGrouping().map((data: IGroupingObj) => data.field);\n        const grouping = this.getGrouping();\n        let result: { fixed: IEntity[]; full: IEntity[] } = {\n            fixed: null,\n            full: null\n        };\n\n        if (groupingFields.length > 0) {\n            // get last sort\n            const lastSort = this.getOrderBy();\n\n            // reset sort\n            this.resetSort();\n\n            // loop\n            let exist = false;\n\n            // if not adding, create new sort array\n            let newSort: ISortObjectInterface[] = [];\n\n            let count = 0;\n            // loop existing\n            if (!attribute) {\n                newSort = lastSort;\n            } else {\n                lastSort.forEach((sort: ISortObjectInterface) => {\n                    count++;\n                    if (groupingFields.indexOf(sort.attribute) !== -1 || addToCurrentSort) {\n                        newSort.push(sort);\n                        if (sort.attribute === attribute) {\n                            sort.asc = sort.asc === true ? false : true;\n                            sort.no = count;\n                            exist = true;\n                        }\n                    } else {\n                        if (sort.attribute === attribute) {\n                            sort.asc = sort.asc === true ? false : true;\n                            sort.no = count;\n                            exist = true;\n                            newSort.push(sort);\n                        }\n                    }\n                });\n            }\n\n            // set last sort\n            this.setLastSort(newSort);\n\n            // if it does not exist, then add\n            if (!exist && attribute) {\n                this.setOrderBy(attribute, true);\n            }\n\n            // run orderby\n            this.runOrderbyOn(collection);\n\n            // regroup\n            const groupedArray = this.group(collection, grouping, true);\n            // set result\n            result = {\n                fixed: groupedArray,\n                full: collection\n            };\n        } else {\n            if (!attribute) {\n                // no attribute, just reset last sort...\n                const lastSort = this.getOrderBy();\n                this.resetSort();\n                this.setLastSort(lastSort);\n                this.runOrderbyOn(collection);\n                result = {\n                    fixed: collection,\n                    full: collection\n                };\n            } else {\n                this.setOrderBy(attribute, addToCurrentSort);\n                this.runOrderbyOn(collection);\n                result = {\n                    fixed: collection,\n                    full: collection\n                };\n            }\n        }\n        this.gridInterface.config.sortingSet = this.arraySort.getOrderBy();\n\n        return result;\n    }\n\n    public getGrouping(): IGroupingObj[] {\n        return this.arrayGrouping.getGrouping();\n    }\n\n    public setGrouping(g: IGroupingObj[]) {\n        this.arrayGrouping.setGrouping(g);\n    }\n\n    public getExpanded() {\n        return this.arrayGrouping.getExpanded();\n    }\n\n    public setExpanded(x: string[]) {\n        this.arrayGrouping.setExpanded(x);\n    }\n\n    public groupCollapse(id: string): void {\n        this.gridInterface.displayedDataset = this.arrayGrouping.collapseOneOrAll(id);\n        this.gridInterface.config.groupingExpanded = this.arrayGrouping.getExpanded();\n        this.gridInterface.publishEvent('collecton-grouping');\n    }\n\n    public groupExpand(id: string): void {\n        this.gridInterface.displayedDataset = this.arrayGrouping.expandOneOrAll(id);\n        this.gridInterface.config.groupingExpanded = this.arrayGrouping.getExpanded();\n        this.gridInterface.publishEvent('collecton-grouping');\n    }\n\n    public getOrderBy(): ISortObjectInterface[] {\n        return this.arraySort.getOrderBy();\n    }\n\n    public setLastSort(array: ISortObjectInterface[]): void {\n        this.arraySort.setLastSort(array);\n    }\n\n    public setOrderBy(\n        attribute: string | ISortObjectInterface | ISortObjectInterface[],\n        addToCurrentSort?: boolean\n    ): void {\n        this.arraySort.setOrderBy(attribute, addToCurrentSort);\n    }\n\n    public runOrderbyOn(array: IEntity[]): void {\n        this.arraySort.runOrderbyOn(array);\n    }\n\n    public resetSort(defaultSortAttribute?: string): void {\n        this.arraySort.reset(defaultSortAttribute);\n    }\n\n    public resetGrouping(): void {\n        this.arrayGrouping.reset();\n    }\n\n    public getCurrentFilter(): IFilterObj[] {\n        return this.arrayFilter.getLastFilter();\n    }\n\n    private group(array: IEntity[], grouping: IGroupingObj[], keepExpanded: boolean): IEntity[] {\n        const x = this.arrayGrouping.group(array, grouping, keepExpanded);\n        this.gridInterface.config.groupingExpanded = this.arrayGrouping.getExpanded();\n\n        return x;\n    }\n\n    private removeGroup(group: IGroupingObj) {\n        const currentGrouping = this.getGrouping();\n        const x = currentGrouping.indexOf(group);\n        if (x !== -1) {\n            currentGrouping.splice(x, 1);\n        }\n\n        if (currentGrouping.length) {\n            const newdata = this.group(this.gridInterface.filteredDataset, currentGrouping, true);\n            this.gridInterface.displayedDataset = newdata;\n        } else {\n            this.gridInterface.displayedDataset = this.gridInterface.filteredDataset;\n        }\n        this.gridInterface.publishEvent('collecton-grouping');\n    }\n\n    private groupingCallback(_event: any, col: ICell) {\n        let newF = col ? true : false;\n        const groupings: IGroupingObj[] = this.gridInterface.config.groupingSet || [];\n        col &&\n            groupings.forEach((g) => {\n                if (g.field === col.attribute) {\n                    newF = false;\n                }\n            });\n\n        if (newF) {\n            groupings.push({ title: col.header, field: col.attribute });\n        }\n        this.arraySort.clearConfigSort(this.gridInterface.config.groups.flatMap((x) => x.rows));\n        this.arraySort.reset();\n        groupings.forEach((group: IGroupingObj) => {\n            this.arraySort.setOrderBy(group.field, true);\n        });\n        this.arraySort.runOrderbyOn(this.gridInterface.filteredDataset);\n        this.arraySort.SetConfigSort(this.gridInterface.config.groups.flatMap((x) => x.rows));\n        if (groupings.length) {\n            const result = this.group(this.gridInterface.filteredDataset, groupings, true);\n            this.gridInterface.config.groupingSet = this.getGrouping();\n            this.gridInterface.config.sortingSet = this.getOrderBy();\n            this.gridInterface.displayedDataset = result;\n        } else {\n            this.gridInterface.displayedDataset = this.gridInterface.filteredDataset;\n        }\n        this.gridInterface.publishEvent('collecton-grouping');\n    }\n\n    private sortCallback(event: any, col: ICell) {\n        // toggle sort\n        const sortAsc =\n            col.sortable.sortAscending === null ? true : col.sortable.sortAscending ? false : true;\n\n        // clear config, so it can be set after new sort\n        this.arraySort.clearConfigSort(this.gridInterface.config.groups.flatMap((x) => x.rows));\n\n        // sort, update config, set viewRows and rerender\n        const result = this.orderBy(\n            this.gridInterface.filteredDataset,\n            { attribute: col.attribute, asc: sortAsc },\n            (<any>event).shiftKey\n        );\n        this.gridInterface.config.sortingSet = this.getOrderBy();\n        this.arraySort.SetConfigSort(this.gridInterface.config.groups.flatMap((x) => x.rows));\n        this.gridInterface.displayedDataset = result.fixed;\n        this.gridInterface.publishEvent('collecton-sort');\n    }\n\n    private filterCallback(event: any, col: ICell, config: IGridConfig) {\n        // depending on col type we need to get data from correct value\n\n        switch (col.type) {\n            case 'date':\n                col.filterable.currentValue = new Date(event.target.valueAsDate);\n                break;\n            case 'number':\n                col.filterable.currentValue = event.target.valueAsNumber;\n                break;\n            case 'boolean':\n                col.filterable.currentValue = event.target.indeterminate\n                    ? null\n                    : event.target.checked;\n                break;\n            default:\n                col.filterable.currentValue = event.target.value;\n        }\n\n        const filter: IFilterObj[] = [];\n        let columns = config.groups.flatMap((x) => x.rows);\n        columns.forEach((col) => {\n            const f = col.filterable;\n            if (f && f.currentValue !== null && f.currentValue !== undefined) {\n                filter.push({\n                    attribute: col.attribute,\n                    type: col.type || 'text',\n                    operator: f.operator\n                        ? this.arrayFilter.operators[f.operator]\n                        : this.arrayFilter.operators[this.arrayFilter.getFilterFromType(col.type)],\n                    value: f.currentValue\n                });\n            }\n        });\n        this.gridInterface.filteredDataset = this.arrayFilter.runQueryOn(\n            this.gridInterface.completeDataset,\n            filter\n        );\n        const result = this.orderBy(this.gridInterface.filteredDataset, null, false);\n        this.arraySort.SetConfigSort(this.gridInterface.config.groups.flatMap((x) => x.rows));\n        this.gridInterface.displayedDataset = result.fixed;\n        this.gridInterface.publishEvent('collecton-filter');\n    }\n}\n","import { GridInterface } from './gridInterface';\n\nexport class Selection {\n    // private mode: 'none' | 'single' | 'multiple';\n    private selectedRows: number;\n    private selection: Set<number>;\n    private lastRowSelected: number;\n    private lastKeyKodeUsed: string;\n    private key = 0;\n    private gridInterface: GridInterface;\n\n    constructor(gridInterface: GridInterface) {\n        this.gridInterface = gridInterface;\n        this.selectedRows = 0;\n        this.selection = new Set([]);\n    }\n\n    public getKey() {\n        this.key++;\n\n        return this.key;\n    }\n\n    public isSelected(row: number): boolean {\n        let result = false;\n        if (this.selectedRows > 0) {\n            result = this.selection.has(this.getRowKey(row));\n        }\n\n        return result;\n    }\n\n    public deSelectAll(): void {\n        this.selection.clear();\n        this.selectedRows = this.selection.size;\n    }\n\n    public highlightRow(e: MouseEvent, currentRow: number): void {\n        let isSel: boolean;\n        let currentselectedRows = this.getSelectedRows();\n        let currentKeyKode = '';\n\n        this.gridInterface.__selectInternal(currentRow);\n\n        if (currentRow !== this.lastRowSelected || currentselectedRows[0] !== currentRow) {\n            if (currentRow <= this.gridInterface.displayedDataset.length - 1) {\n                // do I need to check this?\n\n                if (this.gridInterface.config.selectionMode === 'multiple') {\n                    // if multiselect duh!\n\n                    if (e.shiftKey) {\n                        currentKeyKode = 'shift';\n                        currentselectedRows = this.getSelectedRows();\n                        if (currentselectedRows.length > 0 && this.lastKeyKodeUsed === 'none') {\n                            this.lastRowSelected = currentselectedRows[0];\n                            this.lastKeyKodeUsed = 'shift';\n                        }\n                    }\n\n                    if (e.ctrlKey) {\n                        currentKeyKode = 'ctrl';\n                    }\n\n                    if (!e.ctrlKey && !e.shiftKey) {\n                        currentKeyKode = 'none';\n                    }\n\n                    switch (true) {\n                        case currentKeyKode === 'none':\n                            this.select(currentRow, false);\n                            break;\n                        case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'ctrl':\n                            isSel = this.isSelected(currentRow);\n                            if (isSel === true) {\n                                this.deSelect(currentRow);\n                            } else {\n                                this.select(currentRow, true);\n                            }\n                            this.lastRowSelected = currentRow;\n                            break;\n\n                        case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'shift':\n                            const oldSel = this.getSelectedRows();\n                            this.selectRange(this.lastRowSelected, currentRow);\n                            const newSel = this.getSelectedRows();\n                            this.setSelectedRows(oldSel.concat(newSel));\n\n                            break;\n\n                        case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'ctrl':\n                            isSel = this.isSelected(currentRow);\n                            if (isSel === true) {\n                                this.deSelect(currentRow);\n                            } else {\n                                this.select(currentRow, true);\n                            }\n                            this.lastRowSelected = currentRow;\n                            break;\n\n                        case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'ctrl':\n                            isSel = this.isSelected(currentRow);\n                            if (isSel === true) {\n                                this.deSelect(currentRow);\n                            } else {\n                                this.select(currentRow, true);\n                            }\n                            this.lastRowSelected = currentRow;\n                            break;\n\n                        case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'shift':\n                            if (this.lastRowSelected > currentRow) {\n                                this.selectRange(currentRow, this.lastRowSelected);\n                            } else {\n                                this.selectRange(this.lastRowSelected, currentRow);\n                            }\n\n                            break;\n\n                        case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'shift':\n                            if (this.lastRowSelected !== -1) {\n                                if (this.lastRowSelected > currentRow) {\n                                    this.selectRange(currentRow, this.lastRowSelected);\n                                } else {\n                                    this.selectRange(this.lastRowSelected, currentRow);\n                                }\n                            } else {\n                                this.lastRowSelected = currentRow;\n                                this.select(currentRow, false);\n                            }\n                            break;\n                        default:\n                            console.error('error, this should not happen, debug selection');\n                    }\n                } else {\n                    this.select(currentRow, false);\n                }\n                this.lastKeyKodeUsed = currentKeyKode;\n\n                // update selection on rows\n                this.gridInterface.publishEvent('selectionChange');\n            }\n        } else {\n            // same row clicked again\n            if (e.ctrlKey) {\n                currentKeyKode = 'ctrl';\n            }\n\n            // if ctrl button we want to remove selection\n            if (currentKeyKode === 'ctrl') {\n                this.lastKeyKodeUsed = currentKeyKode;\n                isSel = this.isSelected(currentRow);\n                if (isSel === true) {\n                    this.deSelect(currentRow);\n                }\n                this.lastRowSelected = currentRow;\n            } else {\n                // else we just want to make it current..\n                this.select(currentRow, false);\n            }\n            // update selection on rows\n            this.gridInterface.publishEvent('selectionChange');\n        }\n    }\n\n    /**\n     * todo, optional key\n     */\n    private getRowKey(row: number): number {\n        return (\n            (this.gridInterface.displayedDataset[row] as any) &&\n            (this.gridInterface.displayedDataset[row] as any).__KEY\n        );\n    }\n\n    private getRowKeys(): any[] {\n        const keys: any[] = [];\n        (this.gridInterface.displayedDataset as any).forEach((data: any) => {\n            keys.push(data.__KEY);\n        });\n\n        return keys;\n    }\n\n    private deSelect(row: number): void {\n        this.selection.delete(this.getRowKey(row));\n        this.selectedRows = this.selection.size;\n    }\n\n    private select(row: number, add?: boolean): void {\n        switch (this.gridInterface.config.selectionMode) {\n            case 'none':\n            case null:\n            case undefined:\n                break;\n            case 'single':\n                this.selection.clear();\n                this.selection.add(this.getRowKey(row));\n                this.selectedRows = this.selection.size;\n                break;\n            case 'multiple':\n                if (!add) {\n                    this.selection.clear();\n                    this.selection.add(this.getRowKey(row));\n                    this.selectedRows = this.selection.size;\n                } else {\n                    this.selection.add(this.getRowKey(row));\n                    this.selectedRows = this.selection.size;\n                }\n                break;\n            default:\n            // nothing-> warn ?\n        }\n    }\n\n    private selectRange(start: number, end: number): void {\n        if (this.gridInterface.config.selectionMode === 'multiple') {\n            this.selection.clear();\n            for (let i = start; i < end + 1; i++) {\n                this.selection.add(this.getRowKey(i));\n            }\n            this.selectedRows = this.selection.size;\n        }\n    }\n\n    private getSelectedRows(): number[] {\n        const array: number[] = [];\n        const keys = this.getRowKeys();\n        if (this.selectedRows > 0) {\n            keys.forEach((key, index) => {\n                if (this.selection.has(key) === true) {\n                    array.push(index);\n                }\n            });\n        }\n\n        return array;\n    }\n\n    private setSelectedRows(newRows: number[]): void {\n        if (this.selectedRows > 0) {\n            this.selection.clear();\n        }\n        for (let i = 0; i < newRows.length; i++) {\n            this.selection.add(this.getRowKey(newRows[i]));\n        }\n        this.selectedRows = this.selection.size;\n    }\n}\n","import { IEntity } from './interfaces';\n\n/**\n * Entity will keep track of edited properties of the row object\n */\n\nexport class EntityHandler {\n    __editedProps? = {};\n    __originalValues? = {};\n    __currentValues? = {};\n    __newprops? = {};\n    __edited? = false;\n    __controller?: EntityHandler;\n    __KEY?: string | number;\n    __group?: boolean;\n    __groupID?: string;\n    __groupName?: string;\n    __groupLvl?: number;\n    __groupTotal?: number;\n    __groupChildren?: IEntity[];\n    __groupExpanded?: boolean;\n\n    get(target: object, prop: string) {\n        if (prop === '__controller') {\n            return this;\n        }\n        if (\n            [\n                '__KEY',\n                '__group',\n                '__groupID',\n                '__groupName',\n                '__groupLvl',\n                '__groupTotal',\n                '__groupChildren',\n                '__groupExpanded'\n            ].indexOf(prop) > -1\n        ) {\n            return this[prop];\n        }\n        return target[prop];\n    }\n\n    set(obj: object, prop: string, value: any) {\n        let update = true;\n\n        if (prop[0] === '_' && prop[1] === '_') {\n            update = false;\n            if (\n                [\n                    '__KEY',\n                    '__group',\n                    '__groupID',\n                    '__groupName',\n                    '__groupLvl',\n                    '__groupTotal',\n                    '__groupChildren',\n                    '__groupExpanded'\n                ].indexOf(prop) > -1\n            ) {\n                this[prop] = value;\n            }\n        }\n\n        if (update) {\n            if (obj.hasOwnProperty(prop)) {\n                if (!this.__editedProps.hasOwnProperty(prop)) {\n                    this.__originalValues[prop] = obj[prop];\n                    this.__editedProps[prop] = true;\n                }\n                this.__currentValues[prop] = value;\n                obj[prop] = value;\n            } else {\n                if (!this.__newprops.hasOwnProperty(prop)) {\n                    this.__originalValues[prop] = obj[prop];\n                    this.__newprops[prop] = true;\n                }\n            }\n            this.__edited = true;\n            this.__currentValues[prop] = value;\n            obj[prop] = value;\n        }\n\n        return true;\n    }\n}\n","import { FreeGrid } from '.';\nimport { IGroupingObj, IGridConfig, IEntity, ICell } from './interfaces';\nimport { ArrayUtils } from './arrayUtils';\nimport { Selection } from './selection';\nimport { EntityHandler } from './entity';\n\nexport class GridInterface {\n    /**\n     * Have all the data\n     **/\n    private __DATASET_ALL: IEntity[] = [];\n\n    /**\n     * filtered data only\n     **/\n    private __DATASET_FILTERED: IEntity[] = [];\n\n    /**\n     * displayed dataset, with grouping etc\n     **/\n    private __DATASET_VIEW: IEntity[] = [];\n\n    /**\n     * utils for sorting/filter/grouping data\n     **/\n    private __arrayUtils: ArrayUtils;\n\n    /**\n     * keep track of selected rows\n     **/\n    private __selection: Selection;\n\n    /**\n     * connected grid\n     **/\n    private __freeGrid: FreeGrid;\n\n    /**\n     * for subscribing event (current entity etc)\n     **/\n    private __subscribers: Function[] = [];\n\n    currentEntity: IEntity = null;\n\n    constructor(private __CONFIG: IGridConfig) {\n        // set groupheight\n        let cellheight = 1;\n        __CONFIG.groups.forEach((group) => {\n            if (group.rows) {\n                group.rows.forEach((_c, i) => {\n                    if (cellheight < i + 1) {\n                        cellheight = i + 1;\n                    }\n                });\n            }\n        });\n        __CONFIG.__cellRows = cellheight;\n        __CONFIG.__rowHeight = __CONFIG.cellHeight * cellheight;\n\n        //set left on groups\n        let totalWidth = 0;\n        __CONFIG.groups.reduce((agg, element) => {\n            element.__left = agg;\n            totalWidth = totalWidth + element.width;\n            return element.__left + element.width;\n        }, 0);\n        __CONFIG.__rowWidth = totalWidth;\n\n        this.__arrayUtils = new ArrayUtils(this);\n        this.__selection = new Selection(this);\n        if (this.__CONFIG.sortingSet) {\n            this.__arrayUtils.setOrderBy(this.__CONFIG.sortingSet);\n        }\n        if (this.__CONFIG.groupingSet) {\n            this.__arrayUtils.setGrouping(this.__CONFIG.groupingSet);\n        }\n        if (this.__CONFIG.groupingExpanded) {\n            this.__arrayUtils.setExpanded(this.__CONFIG.groupingExpanded);\n        }\n    }\n\n    manualConfigChange() {\n        if (this.config) {\n            if (this.config.sortingSet) {\n                this.__arrayUtils.setOrderBy(this.config.sortingSet);\n            }\n            if (this.config.groupingSet) {\n                this.__arrayUtils.setGrouping(this.config.groupingSet);\n            }\n            if (this.config.groupingExpanded) {\n                this.__arrayUtils.setExpanded(this.config.groupingExpanded);\n            }\n\n            const result = this.__arrayUtils.orderBy(this.filteredDataset, null, false);\n            this.__arrayUtils.arraySort.SetConfigSort(this.config.groups.flatMap((x) => x.rows));\n            this.displayedDataset = result.fixed;\n        }\n        this.reRender();\n    }\n\n    setData(data: any[], add: boolean = false) {\n        const olddataSetlength = this.__DATASET_ALL.length;\n\n        if (add) {\n            const x = Array.from(data, (o) => new Proxy(o, new EntityHandler() as any));\n            this.__DATASET_ALL.push(...x);\n            this.__DATASET_FILTERED.push(...x);\n            this.__DATASET_ALL.forEach((entity, i) => {\n                if (entity && !(<any>entity).__KEY) {\n                    (<any>entity).__KEY = this.selection.getKey();\n                } else {\n                    if (!this.__DATASET_ALL[i]) {\n                        this.__DATASET_ALL[i] = { __KEY: this.selection.getKey() };\n                    }\n                }\n            });\n        } else {\n            this.__DATASET_ALL = Array.from(data, (o) => new Proxy(o, new EntityHandler() as any)); // <- do I want to update user array Im allready setting a key on it ?\n            this.__DATASET_ALL.forEach((entity, i) => {\n                if (entity && !(<any>entity).__KEY) {\n                    (<any>entity).__KEY = this.selection.getKey();\n                } else {\n                    if (!this.__DATASET_ALL[i]) {\n                        this.__DATASET_ALL[i] = { __KEY: this.selection.getKey() };\n                    }\n                }\n            });\n            this.__DATASET_FILTERED = this.__DATASET_ALL.slice();\n            this.__DATASET_VIEW = this.__DATASET_ALL.slice();\n        }\n\n        if (this.__freeGrid && olddataSetlength !== this.__DATASET_ALL.length) {\n            const node = this.__freeGrid.getElementsByTagName('free-grid-body')[0];\n            if (node) {\n                node.scrollTop = 0;\n            }\n            this.__freeGrid.resetRowCache();\n        }\n\n        if (this.config.sortingSet) {\n            this.__arrayUtils.setOrderBy(this.config.sortingSet);\n        }\n        if (this.config.groupingSet) {\n            this.__arrayUtils.setGrouping(this.config.groupingSet);\n        }\n\n        const result = this.__arrayUtils.orderBy(this.filteredDataset, null, false);\n        this.__arrayUtils.arraySort.SetConfigSort(this.config.groups.flatMap((x) => x.rows));\n        this.displayedDataset = result.fixed;\n        this.publishEvent('collection-change');\n    }\n\n    get config() {\n        return this.__CONFIG;\n    }\n\n    set config(config: IGridConfig) {\n        this.__CONFIG = config;\n    }\n\n    get completeDataset() {\n        return this.__DATASET_ALL;\n    }\n\n    set filteredDataset(value) {\n        this.__DATASET_FILTERED = value;\n    }\n    get filteredDataset() {\n        return this.__DATASET_FILTERED;\n    }\n\n    set displayedDataset(value) {\n        this.__DATASET_VIEW = value;\n    }\n\n    get displayedDataset() {\n        return this.__DATASET_VIEW;\n    }\n\n    get selection() {\n        return this.__selection;\n    }\n\n    public __selectInternal(row: number) {\n        this.currentEntity = this.displayedDataset[row];\n        //console.log('new current entity:', this.currentEntity)\n    }\n\n    public select(row: number) {\n        this.selection.highlightRow({} as any, row - 1);\n    }\n\n    public next() {\n        let row = this.displayedDataset.indexOf(this.currentEntity) + 1;\n        if (this.displayedDataset.length - 1 < row) {\n            row = 0;\n        }\n        this.selection.highlightRow({} as any, row);\n    }\n\n    public prev() {\n        let row = this.displayedDataset.indexOf(this.currentEntity) - 1;\n        if (row < 0) {\n            row = this.displayedDataset.length - 1;\n            this.selection.highlightRow({} as any, row);\n        }\n        this.selection.highlightRow({} as any, row);\n    }\n\n    public first() {\n        this.selection.highlightRow({} as any, 0);\n    }\n\n    public last() {\n        this.selection.highlightRow({} as any, this.displayedDataset.length - 1);\n    }\n\n    public edited() {\n        return this.__DATASET_ALL.filter((entity) => {\n            if (entity.__controller.__edited) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    publishEvent(event: string) {\n        this.reRender();\n        let keep = this.__subscribers.filter((element) => {\n            return element(event);\n        });\n        this.__subscribers = keep;\n    }\n\n    addEventListener(callable: (event: string) => boolean) {\n        this.__subscribers.push(callable);\n    }\n\n    reRender() {\n        if (this.__freeGrid) this.__freeGrid.reRender();\n    }\n\n    render() {\n        if (this.__freeGrid) this.__freeGrid.render();\n    }\n\n    groupingCallback(event: any, col: ICell) {\n        this.__arrayUtils.groupingCallbackBinded(event, col);\n    }\n\n    filterCallback(event: any, col: ICell) {\n        this.__arrayUtils.filterCallbackBinded(event, col, this.__CONFIG);\n    }\n\n    sortCallback(event: any, col: ICell) {\n        this.__arrayUtils.sortCallbackBinded(event, col);\n    }\n\n    removeGroup(group: IGroupingObj) {\n        this.__arrayUtils.removeGroupBinded(group);\n    }\n\n    groupExpand(id: string) {\n        this.__arrayUtils.groupExpand(id);\n    }\n\n    groupCollapse(id: string) {\n        this.__arrayUtils.groupCollapse(id);\n    }\n\n    connectGrid(freeGrid: FreeGrid) {\n        this.__freeGrid = freeGrid;\n    }\n\n    disconnectGrid() {\n        this.__freeGrid = null;\n    }\n}\n","import { render, html } from 'lit-html';\nexport { IGridConfig } from './interfaces';\nimport { GridInterface } from './gridInterface';\nimport { customElement } from '@simple-html/core';\nimport { generate } from './elements/generate';\nexport { GridInterface } from './gridInterface';\n\n@customElement('free-grid')\nexport class FreeGrid extends HTMLElement {\n    private __DATASOURCE_INTERFACE: GridInterface;\n    public rowCache: { i: number }[] = [];\n\n    set interface(value: GridInterface) {\n        this.__DATASOURCE_INTERFACE = value;\n        this.__DATASOURCE_INTERFACE.connectGrid(this);\n    }\n\n    get interface() {\n        return this.__DATASOURCE_INTERFACE;\n    }\n\n    public connectedCallback() {\n        this.resetRowCache();\n        this.render();\n    }\n\n    public disconnectedCallback() {\n        this.__DATASOURCE_INTERFACE && this.__DATASOURCE_INTERFACE.disconnectGrid();\n    }\n\n    public reRender() {\n        requestAnimationFrame(() => {\n            this.render();\n            this.triggerEvent('reRender');\n        });\n    }\n\n    public manualConfigChange() {\n        console.log('not implemented');\n    }\n\n    public triggerEvent(eventName: string, data?: any) {\n        // console.log(eventName)\n        const event = new CustomEvent(eventName, {\n            bubbles: true,\n            detail: {\n                data\n            }\n        });\n        this.dispatchEvent(event);\n    }\n\n    public resetRowCache() {\n        if (this.interface) {\n            let rowsNeeded = Math.round(Math.floor(850 / this.interface.config.__rowHeight));\n            if (rowsNeeded > 40) {\n                rowsNeeded = 40;\n            }\n            const cacheLength =\n                this.interface.displayedDataset.length > rowsNeeded\n                    ? rowsNeeded\n                    : this.interface.displayedDataset.length;\n            this.rowCache = [];\n            for (let i = 0; i < cacheLength; i++) {\n                this.rowCache.push({ i: i });\n            }\n        } else {\n            this.rowCache = [];\n        }\n    }\n\n    public render() {\n        return new Promise(() => {\n            // console.time('render');\n            if (this.interface) {\n                render(html` ${generate(this.interface, this.rowCache, this)} `, this);\n\n                if (this.interface.config.lastScrollTop) {\n                    // set initial scroll top/left\n                    // nice when reloading a page etc\n                    const node = this.getElementsByTagName('free-grid-body')[0];\n                    if (node && node.scrollTop !== this.interface.config.lastScrollTop) {\n                        node.scrollTop = this.interface.config.lastScrollTop;\n                        node.scrollLeft = this.interface.config.scrollLeft;\n                        this.interface.config.lastScrollTop = 0;\n                    }\n                }\n            } else {\n                if (this.isConnected) {\n                    console.error('no config set');\n\n                    render(html``, this);\n                }\n            }\n            //console.timeEnd('render');\n        });\n    }\n}\n","// tslint:disable:max-line-length\n// tslint:disable:quotemark\nexport const data = [\n    'Flss',\n    'Banishevitz',\n    null,\n    'task-force',\n    'Tracee',\n    'Dregan',\n    null,\n    'User-centric',\n    'Corly',\n    'Lunge',\n    null,\n    'Ameliorated',\n    'Tobe',\n    'Marian',\n    null,\n    'uniform',\n    'Amalita',\n    'Allam',\n    null,\n    'intermediate',\n    'Janos',\n    'Becke',\n    null,\n    'encompassing',\n    'Willi',\n    'Jaram',\n    null,\n    'frame',\n    'Sharyl',\n    'Beck',\n    null,\n    'background',\n    'Alejandro',\n    'Brayley',\n    null,\n    'Cross-platform',\n    'Amy',\n    'Lazar',\n    null,\n    'Enterprise-wide',\n    'Alaster',\n    'Wakley',\n    null,\n    'system-worthy',\n    'Gwennie',\n    'Killford',\n    null,\n    'Horizontal',\n    'Blake',\n    'Batho',\n    null,\n    'attitude',\n    'Troy',\n    'MacKaig',\n    null,\n    'mission-critical',\n    'Brit',\n    'Fuggles',\n    null,\n    'fault-tolerant',\n    'Virgie',\n    'Cleugher',\n    null,\n    'foreground',\n    'Jecho',\n    'Bisacre',\n    null,\n    'tertiary',\n    'Alisander',\n    'Pherps',\n    null,\n    'needs-based',\n    'Cordell',\n    'Fairholm',\n    null,\n    'Multi-lateral',\n    'Roderigo',\n    'Moreno',\n    null,\n    'core',\n    'Terrell',\n    'MacAiline',\n    null,\n    'time-frame',\n    'Rodrick',\n    'Cisland',\n    null,\n    'parallelism',\n    'Ezra',\n    'Skentelbury',\n    null,\n    'forecast',\n    'Madelina',\n    'Hansod',\n    null,\n    'core',\n    'Martica',\n    'Samsonsen',\n    null,\n    'bottom-line',\n    'Redd',\n    'Scutchings',\n    null,\n    'bi-directional',\n    'Delmor',\n    'Hutcheon',\n    null,\n    'high-level',\n    'Kip',\n    'Edwick',\n    null,\n    'Object-based',\n    'Kari',\n    'Rosenzwig',\n    null,\n    'regional',\n    'Rubetta',\n    'Skelton',\n    null,\n    'Extended',\n    'Nanci',\n    'Craw',\n    null,\n    'Right-sized',\n    'Duane',\n    'Cherry',\n    null,\n    'model',\n    'Clarabelle',\n    'Pendergrast',\n    null,\n    'intangible',\n    'Daria',\n    'Rosas',\n    null,\n    'time-frame',\n    'Francesca',\n    'Glentworth',\n    null,\n    'circuit',\n    'Abigael',\n    'Capun',\n    null,\n    'Right-sized',\n    'Sallee',\n    'Ybarra',\n    null,\n    'Managed',\n    'Ezmeralda',\n    'Phillips',\n    null,\n    'standardization',\n    'Stephan',\n    'Stidever',\n    null,\n    'software',\n    'Smith',\n    'Shouler',\n    null,\n    'Future-proofed',\n    'Hobie',\n    'Lung',\n    null,\n    'time-frame',\n    'Blane',\n    'Minchi',\n    null,\n    'global',\n    'Dall',\n    'Amoore',\n    null,\n    'systemic',\n    'Tybie',\n    'Amaya',\n    null,\n    'Automated',\n    'Paul',\n    'Tyrrell',\n    null,\n    'Triple-buffered',\n    'Reggie',\n    'Gellert',\n    null,\n    'transitional',\n    'Alvera',\n    'Misk',\n    null,\n    'Polarised',\n    'Urban',\n    'Bengoechea',\n    null,\n    'local',\n    'Ferdie',\n    'Woollam',\n    null,\n    'analyzer',\n    'Constantine',\n    'Eggleton',\n    null,\n    'strategy',\n    'Mada',\n    'Cowins',\n    null,\n    'Focused',\n    'Alecia',\n    'Lomath',\n    null,\n    'bottom-line',\n    'Donall',\n    'Minucci',\n    null,\n    'web-enabled',\n    'Patty',\n    'Driffield',\n    null,\n    'real-time',\n    'Anne-corinne',\n    'Fasset',\n    null,\n    'product',\n    'Halsy',\n    'Edyson',\n    null,\n    'homogeneous',\n    'Donnajean',\n    'Fingleton',\n    null,\n    'initiative',\n    'Fonz',\n    'Kerfod',\n    null,\n    'static',\n    'Gage',\n    'Gaze',\n    null,\n    'pricing structure',\n    'Duff',\n    'Dummigan',\n    null,\n    'clear-thinking',\n    'Taite',\n    'Wegner',\n    null,\n    'Triple-buffered',\n    'Bird',\n    'Abbey',\n    null,\n    'needs-based',\n    'Muire',\n    'Esherwood',\n    null,\n    'Distributed',\n    'Kirbee',\n    'Dobbin',\n    null,\n    'middleware',\n    'Verge',\n    \"D'Aulby\",\n    null,\n    'portal',\n    'Abner',\n    'McNay',\n    null,\n    'Synergized',\n    'Benji',\n    'Adame',\n    null,\n    'protocol',\n    'Noemi',\n    'Aime',\n    null,\n    'orchestration',\n    'Jayson',\n    'MacTeggart',\n    null,\n    'Total',\n    'Barthel',\n    'Ranscomb',\n    null,\n    'human-resource',\n    'Bryan',\n    'Winsor',\n    null,\n    'background',\n    'Menard',\n    'Dowdle',\n    null,\n    'database',\n    'Amby',\n    'Strafford',\n    null,\n    'Diverse',\n    'Norean',\n    'Roper',\n    null,\n    'Cross-group',\n    'Gasper',\n    'Chawner',\n    null,\n    'secondary',\n    'Bamby',\n    'Poland',\n    null,\n    'groupware',\n    'Ronda',\n    'Chestle',\n    null,\n    'secured line',\n    'Asa',\n    'Rackam',\n    null,\n    'info-mediaries',\n    'Crista',\n    'Julien',\n    null,\n    'Balanced',\n    'Daniel',\n    'Ybarra',\n    null,\n    'infrastructure',\n    'Germayne',\n    'Roseman',\n    null,\n    'neural-net',\n    'Marla',\n    'Hourican',\n    null,\n    'Vision-oriented',\n    'Howie',\n    'Sheach',\n    null,\n    'Polarised',\n    'Mal',\n    'Pearcehouse',\n    null,\n    'firmware',\n    'Kelbee',\n    'Wilstead',\n    null,\n    'Synergized',\n    'Randi',\n    'Bachmann',\n    null,\n    'optimizing',\n    'Granny',\n    'Oldcroft',\n    null,\n    'orchestration',\n    'Zonda',\n    'Barnett',\n    null,\n    'projection',\n    'Fredrick',\n    'Paulus',\n    null,\n    'next generation',\n    'Olva',\n    'Durnill',\n    null,\n    'scalable',\n    'Fanchon',\n    'Clapison',\n    null,\n    'benchmark',\n    'Berkly',\n    'Clack',\n    null,\n    'Right-sized',\n    'Lowell',\n    'Carwithim',\n    null,\n    'zero defect',\n    'Zahara',\n    'Orrah',\n    null,\n    'actuating',\n    'Gina',\n    'Andreix',\n    null,\n    'structure',\n    'Holden',\n    'Snodin',\n    null,\n    'application',\n    'Jyoti',\n    'Sweetzer',\n    null,\n    'standardization',\n    'Lesly',\n    'Illem',\n    null,\n    'fault-tolerant',\n    'Vernor',\n    'Swinn',\n    null,\n    'Optimized',\n    'Dalton',\n    'Click',\n    null,\n    'product',\n    'Reiko',\n    'Cauldwell',\n    null,\n    'methodology',\n    'Cherrita',\n    'Pimlock',\n    null,\n    'solution-oriented',\n    'Ronald',\n    'Semkins',\n    null,\n    'even-keeled',\n    'Shellie',\n    'Alcott',\n    null,\n    'Business-focused',\n    'Ronny',\n    'Coatts',\n    null,\n    'Universal',\n    'Thia',\n    'Voden',\n    null,\n    'pricing structure',\n    'Fabian',\n    'Spillett',\n    null,\n    'forecast',\n    'Minnaminnie',\n    'Dove',\n    null,\n    'Ergonomic',\n    'Thurstan',\n    'Merredy',\n    null,\n    'capability',\n    'Marjy',\n    'Grestye',\n    null,\n    'Synergistic',\n    'Ginni',\n    'Swyre',\n    null,\n    'synergy',\n    'Brandie',\n    'Cuseick',\n    null,\n    'definition',\n    'Curt',\n    'McDonagh',\n    null,\n    'Persevering',\n    'Nathaniel',\n    'Skull',\n    null,\n    'actuating',\n    'Sandye',\n    'Tunn',\n    null,\n    'Optional',\n    'Felice',\n    'McNish',\n    null,\n    'object-oriented',\n    'Dorisa',\n    \"O'Currane\",\n    null,\n    'Adaptive',\n    'Horst',\n    'Baitson',\n    null,\n    'forecast',\n    'Benny',\n    'Smittoune',\n    null,\n    'encryption',\n    'Marie',\n    'Austick',\n    null,\n    'Polarised',\n    'Marwin',\n    'Sines',\n    null,\n    'Front-line',\n    'Isidora',\n    'Housbie',\n    null,\n    'Integrated',\n    'Ynes',\n    'Dulieu',\n    null,\n    'analyzing',\n    'Field',\n    'Fermoy',\n    null,\n    'throughput',\n    'Maddy',\n    'Perrott',\n    null,\n    'mobile',\n    'Kenon',\n    'Chicotti',\n    null,\n    'Versatile',\n    'Jody',\n    'Demer',\n    null,\n    'Centralized',\n    'Fernandina',\n    'Hlavac',\n    null,\n    'fault-tolerant',\n    'Kort',\n    'Mollnar',\n    null,\n    'cohesive',\n    'Gael',\n    'Osburn',\n    null,\n    'Ameliorated',\n    'Francklyn',\n    'Dell Casa',\n    null,\n    'Optional',\n    'Kitti',\n    'Frotton',\n    null,\n    'Versatile',\n    'Maddalena',\n    'Lemmon',\n    null,\n    'real-time',\n    'Kirk',\n    'Nemchinov',\n    null,\n    'Configurable',\n    'Jodee',\n    'Swatheridge',\n    null,\n    'Sharable',\n    'Cynthie',\n    'Fitzhenry',\n    null,\n    'background',\n    'Ree',\n    'Reidie',\n    null,\n    'intermediate',\n    'Harriett',\n    'Ballintyne',\n    null,\n    '4th generation',\n    'Angus',\n    'Carpenter',\n    null,\n    'Diverse',\n    'Finley',\n    'Gardiner',\n    null,\n    'Total',\n    'Thadeus',\n    'Barhims',\n    null,\n    'Exclusive',\n    'Nichol',\n    'Zipsell',\n    null,\n    'support',\n    'Daniel',\n    'Giacubbo',\n    null,\n    'disintermediate',\n    'Andris',\n    'Lanegran',\n    null,\n    'website',\n    'Mill',\n    'Bursnall',\n    null,\n    'multi-state',\n    'Dorris',\n    'Mabee',\n    null,\n    'Multi-tiered',\n    'Rosina',\n    'St Pierre',\n    null,\n    'leverage',\n    'Emeline',\n    'Crickmoor',\n    null,\n    'Ergonomic',\n    'Isahella',\n    'Bastide',\n    null,\n    'even-keeled',\n    'Janith',\n    'Benettelli',\n    null,\n    'Persistent',\n    'Jarred',\n    'Dominichetti',\n    null,\n    'Object-based',\n    'Cherin',\n    'Berr',\n    null,\n    'definition',\n    'Lennie',\n    'Causton',\n    null,\n    'matrix',\n    'Brnaby',\n    'Dionisetti',\n    null,\n    'context-sensitive',\n    'Cele',\n    'Doberer',\n    null,\n    'mobile',\n    'Joachim',\n    'Vasiljevic',\n    null,\n    'non-volatile',\n    'Ashli',\n    'Lamberts',\n    null,\n    'leading edge',\n    'Enos',\n    'Pieracci',\n    null,\n    'transitional',\n    'Budd',\n    'Tomkys',\n    null,\n    'hub',\n    'Marybeth',\n    'Lassey',\n    null,\n    'well-modulated',\n    'Matthias',\n    'Crownshaw',\n    null,\n    'Face to face',\n    'Kaspar',\n    'Sherwen',\n    null,\n    'Secured',\n    'Linell',\n    'Brumwell',\n    null,\n    'Enhanced',\n    'Ambur',\n    'Driutti',\n    null,\n    'Intuitive',\n    'Billy',\n    'Chalcroft',\n    null,\n    'project',\n    'Gherardo',\n    'Lindeberg',\n    null,\n    'monitoring',\n    'Giuditta',\n    'Wrate',\n    null,\n    'monitoring',\n    'Sky',\n    'Biasetti',\n    null,\n    'local area network',\n    'Curcio',\n    'Choak',\n    null,\n    'Horizontal',\n    'Marleah',\n    'Friatt',\n    null,\n    'Fully-configurable',\n    'Connie',\n    'Toland',\n    null,\n    'Quality-focused',\n    'Wally',\n    'Poynser',\n    null,\n    'client-driven',\n    'Ward',\n    'Edison',\n    null,\n    'empowering',\n    'Tania',\n    'Moulsdall',\n    null,\n    'encryption',\n    'Hobie',\n    'McCarroll',\n    null,\n    'systematic',\n    'Axe',\n    \"O'Dowd\",\n    null,\n    'contextually-based',\n    'Westbrooke',\n    'Brabbs',\n    null,\n    'Synergistic',\n    'Noll',\n    'Gariff',\n    null,\n    'User-centric',\n    'Adriane',\n    'Duckett',\n    null,\n    'structure',\n    'Jolie',\n    'Biglin',\n    null,\n    'dynamic',\n    'Allene',\n    'Kitchingman',\n    null,\n    'function',\n    'Karel',\n    'Minshull',\n    null,\n    'optimal',\n    'Milli',\n    'Capaldo',\n    null,\n    'Enhanced',\n    'Shurlocke',\n    'Bulbrook',\n    null,\n    'hub',\n    'Audrey',\n    'Ewbanck',\n    null,\n    'data-warehouse',\n    'Emilie',\n    'Snelle',\n    null,\n    'hardware',\n    'Benyamin',\n    'de Keyser',\n    null,\n    'Front-line',\n    'Revkah',\n    'Archibold',\n    null,\n    'Grass-roots',\n    'Ingrim',\n    'Wall',\n    null,\n    'circuit',\n    'Julio',\n    'Davidowsky',\n    null,\n    'portal',\n    'Heindrick',\n    'Eastgate',\n    null,\n    'protocol',\n    'Calla',\n    'Bynold',\n    null,\n    'background',\n    'Tabbi',\n    'Bonicelli',\n    null,\n    'intermediate',\n    'Kleon',\n    'Kemmey',\n    null,\n    'well-modulated',\n    'Denyse',\n    'Ginie',\n    null,\n    'Persevering',\n    'Terrel',\n    'Dawkes',\n    null,\n    'system engine',\n    'Shea',\n    'Spurnier',\n    null,\n    'function',\n    'Demetra',\n    'Roizin',\n    null,\n    'open architecture',\n    'Roselin',\n    'Tallach',\n    null,\n    'moratorium',\n    'Kissie',\n    'Robardet',\n    null,\n    'project',\n    'Erv',\n    'Cockren',\n    null,\n    'neural-net',\n    'Clywd',\n    'Kivlin',\n    null,\n    'installation',\n    'Kyle',\n    'Abrami',\n    null,\n    'real-time',\n    'Elwyn',\n    'Peppin',\n    null,\n    'tertiary',\n    'Donetta',\n    'Leaburn',\n    null,\n    'multi-state',\n    'Clayborn',\n    'Hulles',\n    null,\n    'installation',\n    'Edlin',\n    'Dumberell',\n    null,\n    'initiative',\n    'Anny',\n    'Fance',\n    null,\n    'installation',\n    'Willey',\n    'Scripture',\n    null,\n    'Synergized',\n    'Conrade',\n    'Penhaligon',\n    null,\n    'challenge',\n    'Christalle',\n    'Ambrosio',\n    null,\n    'optimal',\n    'Malynda',\n    'Natalie',\n    null,\n    'algorithm',\n    'Mae',\n    'Caughte',\n    null,\n    'De-engineered',\n    'Cathi',\n    'Badger',\n    null,\n    'budgetary management',\n    'Clem',\n    'Fishley',\n    null,\n    'definition',\n    'Glynnis',\n    'Glendining',\n    null,\n    'Re-engineered',\n    'Cyrus',\n    'Aronow',\n    null,\n    'customer loyalty',\n    'Mehetabel',\n    'Siley',\n    null,\n    'Exclusive',\n    'Benjamen',\n    'Karlqvist',\n    null,\n    '6th generation',\n    'Lorri',\n    'Blumson',\n    null,\n    'empowering',\n    'Letta',\n    'Iamittii',\n    null,\n    'Business-focused',\n    'Mose',\n    'Blaske',\n    null,\n    'collaboration',\n    'Flem',\n    'Selliman',\n    null,\n    'Synergized',\n    'Belia',\n    'Chicotti',\n    null,\n    'Networked',\n    'Franky',\n    'Sheaber',\n    null,\n    'cohesive',\n    'Gianna',\n    'Busson',\n    null,\n    'Networked',\n    'Cecilio',\n    'Douthwaite',\n    null,\n    'model',\n    'Joelie',\n    'Node',\n    null,\n    'optimizing',\n    'Kiley',\n    'Hartlebury',\n    null,\n    'actuating',\n    'Ellary',\n    \"O'Lagene\",\n    null,\n    'stable',\n    'Tades',\n    'Tewes',\n    null,\n    'motivating',\n    'Rouvin',\n    'Jean',\n    null,\n    'Advanced',\n    'Bryant',\n    'Jacobsz',\n    null,\n    'Business-focused',\n    'Rab',\n    'Haymes',\n    null,\n    'context-sensitive',\n    'Debi',\n    'Bernardeau',\n    null,\n    'Distributed',\n    'Kally',\n    'Habbeshaw',\n    null,\n    'responsive',\n    'Grissel',\n    'Mullard',\n    null,\n    'Customizable',\n    'Margeaux',\n    'Bode',\n    null,\n    'hardware',\n    'Kristos',\n    'Mealand',\n    null,\n    'impactful',\n    'Rayshell',\n    'Lorek',\n    null,\n    'responsive',\n    'Celeste',\n    'Maltby',\n    null,\n    'Polarised',\n    'Claiborne',\n    'Sundin',\n    null,\n    'artificial intelligence',\n    'Aland',\n    'Darton',\n    null,\n    'fresh-thinking',\n    'Carmelina',\n    'Dumberell',\n    null,\n    'Implemented',\n    'Gwenette',\n    'Royall',\n    null,\n    'systemic',\n    'Egan',\n    'Ball',\n    null,\n    'context-sensitive',\n    'Chance',\n    'Shakshaft',\n    null,\n    'User-centric',\n    'Lilli',\n    'McKeown',\n    null,\n    'user-facing',\n    'Garek',\n    'de la Valette Parisot',\n    null,\n    'benchmark',\n    'Louise',\n    'Sweetnam',\n    null,\n    'intangible',\n    'Harman',\n    'Summerfield',\n    null,\n    'Future-proofed',\n    'Claresta',\n    'Faiers',\n    null,\n    'internet solution',\n    'Heather',\n    'Lamberti',\n    null,\n    'functionalities',\n    'Holly',\n    'MacAndreis',\n    null,\n    'Sharable',\n    'Westley',\n    'Abbets',\n    null,\n    'Cross-platform',\n    'Haskel',\n    'Kitley',\n    null,\n    'Innovative',\n    'Quintin',\n    'MacClay',\n    null,\n    'migration',\n    'Arron',\n    'De Bruin',\n    null,\n    'Adaptive',\n    'Radcliffe',\n    'Sexti',\n    null,\n    'customer loyalty',\n    'Larry',\n    'Geely',\n    null,\n    'asymmetric',\n    'Leanora',\n    \"O'Neary\",\n    null,\n    'projection',\n    'Pattin',\n    'Jardine',\n    null,\n    '24 hour',\n    'Roderich',\n    'Maben',\n    null,\n    'clear-thinking',\n    'Miquela',\n    'Heninghem',\n    null,\n    'tertiary',\n    'Catherina',\n    'Rafter',\n    null,\n    '6th generation',\n    'Saunders',\n    'Volonte',\n    null,\n    'Advanced',\n    'Bee',\n    'Trazzi',\n    null,\n    'Customizable',\n    'Rex',\n    'McQuade',\n    null,\n    'Innovative',\n    'Millie',\n    'Tulley',\n    null,\n    'encompassing',\n    'Kittie',\n    'Sains',\n    null,\n    'Profound',\n    'Lizzie',\n    'Ebbin',\n    null,\n    'intangible',\n    'Ludovika',\n    'Nolder',\n    null,\n    'Object-based',\n    'Hanson',\n    'Maffucci',\n    null,\n    'Polarised',\n    'Ricky',\n    'Carrel',\n    null,\n    'Team-oriented',\n    'Oralee',\n    'Bullen',\n    null,\n    'Exclusive',\n    'Baxter',\n    'Capell',\n    null,\n    'homogeneous',\n    'Averill',\n    'Davidi',\n    null,\n    'access',\n    'Liz',\n    'Breadmore',\n    null,\n    'eco-centric',\n    'Kare',\n    'Ottey',\n    null,\n    'info-mediaries',\n    'Aundrea',\n    'Litherland',\n    null,\n    'Business-focused',\n    'Avie',\n    'Coltart',\n    null,\n    'bi-directional',\n    'Edy',\n    'Kinsella',\n    null,\n    'concept',\n    'Marcy',\n    'Ceney',\n    null,\n    'Diverse',\n    'Lianna',\n    'Hallgate',\n    null,\n    'function',\n    'Kamila',\n    'Cave',\n    null,\n    'projection',\n    'Carie',\n    'Laffoley-Lane',\n    null,\n    'Profit-focused',\n    'Isidor',\n    'Dunnan',\n    null,\n    'encompassing',\n    'Fernando',\n    'Pyle',\n    null,\n    'Customer-focused',\n    'Darline',\n    'Dugdale',\n    null,\n    'coherent',\n    'Gertie',\n    'Merryman',\n    null,\n    'heuristic',\n    'Horatius',\n    'Wermerling',\n    null,\n    'User-friendly',\n    'Demott',\n    'Geddes',\n    null,\n    'Decentralized',\n    'Klarrisa',\n    'Sang',\n    null,\n    'Virtual',\n    'Ceil',\n    'Morrallee',\n    null,\n    'systematic',\n    'Khalil',\n    'Maffetti',\n    null,\n    'tertiary',\n    'Willow',\n    'Fass',\n    null,\n    'Public-key',\n    'Cora',\n    'Patmore',\n    null,\n    'Quality-focused',\n    'Land',\n    'Permain',\n    null,\n    'installation',\n    'Reta',\n    'Snoday',\n    null,\n    'Persistent',\n    'Isidore',\n    'Tarbard',\n    null,\n    'actuating',\n    'Rolph',\n    'Moodie',\n    null,\n    'contingency',\n    'Merle',\n    'Gowenlock',\n    null,\n    '24 hour',\n    'Nerta',\n    'Springthorp',\n    null,\n    '24 hour',\n    'Clair',\n    'Strase',\n    null,\n    'static',\n    'Tracie',\n    'Oty',\n    null,\n    'heuristic',\n    'Georg',\n    'Christal',\n    null,\n    'secured line',\n    'Guy',\n    'Goulthorp',\n    null,\n    'Open-source',\n    'Vlad',\n    'August',\n    null,\n    '4th generation',\n    'Vanda',\n    'Crane',\n    null,\n    'Customizable',\n    'Letta',\n    'Gillimgham',\n    null,\n    'stable',\n    'Merry',\n    'Tomsa',\n    null,\n    'coherent',\n    'Leola',\n    'Tremblett',\n    null,\n    'bifurcated',\n    'Domenic',\n    'Brownlow',\n    null,\n    'infrastructure',\n    'Dugald',\n    'Defrain',\n    null,\n    'Profit-focused',\n    'Conrad',\n    'Theunissen',\n    null,\n    'high-level',\n    'Torrey',\n    'Silk',\n    null,\n    'Grass-roots',\n    'Arni',\n    'Duesbury',\n    null,\n    'dedicated',\n    'Jessalin',\n    'Krebs',\n    null,\n    'Profound',\n    'Brocky',\n    'Pasek',\n    null,\n    'Polarised',\n    'Clemmie',\n    'Blood',\n    null,\n    'content-based',\n    'Lanny',\n    'Trorey',\n    null,\n    'function',\n    'Kalvin',\n    'Noonan',\n    null,\n    'frame',\n    'Donia',\n    'Kenworthey',\n    null,\n    'firmware',\n    'Halie',\n    'Pardi',\n    null,\n    'bi-directional',\n    'Aubry',\n    'Ninnotti',\n    null,\n    'Multi-channelled',\n    'Annamarie',\n    'Trundell',\n    null,\n    'Intuitive',\n    'Brockie',\n    'Water',\n    null,\n    'Right-sized',\n    'Rosamund',\n    'MacDonogh',\n    null,\n    'parallelism',\n    'Trumann',\n    'Angrock',\n    null,\n    'matrices',\n    'Carling',\n    'Piddlehinton',\n    null,\n    'Automated',\n    'Dane',\n    'Condict',\n    null,\n    'core',\n    'Constancia',\n    'Springate',\n    null,\n    'context-sensitive',\n    'Harlin',\n    'Iggalden',\n    null,\n    'Optimized',\n    'Aluino',\n    'Cripin',\n    null,\n    'Multi-layered',\n    'Fernande',\n    'Rigler',\n    null,\n    'matrix',\n    'Hendrick',\n    'Robberecht',\n    null,\n    'groupware',\n    'Quintus',\n    'Clair',\n    null,\n    'Exclusive',\n    'Joletta',\n    'Moores',\n    null,\n    'concept',\n    'Berri',\n    'Tidbold',\n    null,\n    'transitional',\n    'Hazel',\n    'Coatham',\n    null,\n    'algorithm',\n    'Derk',\n    'Wandless',\n    null,\n    'Pre-emptive',\n    'Marley',\n    'Gainor',\n    null,\n    'Face to face',\n    'Benji',\n    'De Beauchemp',\n    null,\n    'fault-tolerant',\n    'Gabrila',\n    'Schollick',\n    null,\n    'workforce',\n    'Win',\n    'Tunnow',\n    null,\n    'zero administration',\n    'Jonathon',\n    'Seville',\n    null,\n    'local',\n    'Hillery',\n    'Petrelluzzi',\n    null,\n    'alliance',\n    'Mariska',\n    'Lomb',\n    null,\n    'mobile',\n    'Hayyim',\n    'Whitechurch',\n    null,\n    'needs-based',\n    'Valentino',\n    'Kyne',\n    null,\n    'encryption',\n    'Panchito',\n    'Peskett',\n    null,\n    'standardization',\n    'Larissa',\n    'Rummery',\n    null,\n    'alliance',\n    'Courtenay',\n    'Mayo',\n    null,\n    'zero tolerance',\n    'Anabal',\n    'Stobbe',\n    null,\n    'high-level',\n    'Nerta',\n    'Marritt',\n    null,\n    'asynchronous',\n    'Marco',\n    'Haythorne',\n    null,\n    'Triple-buffered',\n    'Adeline',\n    'Scrivens',\n    null,\n    'Adaptive',\n    'Caralie',\n    'MacGille',\n    null,\n    'Versatile',\n    'Gaynor',\n    \"O'Doogan\",\n    null,\n    'Synergized',\n    'Murry',\n    'Epinoy',\n    null,\n    'Open-architected',\n    'Dalenna',\n    'Collinette',\n    null,\n    'frame',\n    'Byrle',\n    'Menault',\n    null,\n    'hardware',\n    'Talya',\n    'Darington',\n    null,\n    'Public-key',\n    'Lira',\n    'MacCardle',\n    null,\n    'methodical',\n    'Marrissa',\n    'Czyz',\n    null,\n    'multimedia',\n    'Gerhardt',\n    'Smitherham',\n    null,\n    'architecture',\n    'Benedick',\n    'Antic',\n    null,\n    'local area network',\n    'Seamus',\n    'Radki',\n    null,\n    'service-desk',\n    'Agnese',\n    'Deppe',\n    null,\n    'orchestration',\n    'Zerk',\n    'Duligall',\n    null,\n    'Synergistic',\n    'Jenny',\n    'Avo',\n    null,\n    'hierarchy',\n    'Tabitha',\n    'Jenman',\n    null,\n    'Reduced',\n    'Clea',\n    'Shera',\n    null,\n    'bi-directional',\n    'Morrie',\n    'MacCumeskey',\n    null,\n    'superstructure',\n    'Kris',\n    'Quest',\n    null,\n    'throughput',\n    'Oran',\n    'Rout',\n    null,\n    'firmware',\n    'Annis',\n    'Betham',\n    null,\n    'Integrated',\n    'Allin',\n    'Hostan',\n    null,\n    'Self-enabling',\n    'Warden',\n    'Sagg',\n    null,\n    'parallelism',\n    'Kendall',\n    'Murdy',\n    null,\n    'pricing structure',\n    'Durante',\n    'McMurray',\n    null,\n    'regional',\n    'Berry',\n    'Souley',\n    null,\n    'Profound',\n    'Naoma',\n    'Crace',\n    null,\n    'grid-enabled',\n    'Ives',\n    'Jamieson',\n    null,\n    'emulation',\n    'Odele',\n    'Kivell',\n    null,\n    'Implemented',\n    'Malory',\n    'Wallbutton',\n    null,\n    'Customizable',\n    'Cale',\n    'Wagenen',\n    null,\n    'customer loyalty',\n    'Karl',\n    'Rattery',\n    null,\n    'protocol',\n    'Gerty',\n    'Smelley',\n    null,\n    'Expanded',\n    'Pip',\n    'Mothersole',\n    null,\n    '5th generation',\n    'Arlana',\n    'Danielski',\n    null,\n    'next generation',\n    'Yule',\n    'Shitliffe',\n    null,\n    'Cross-platform',\n    'Theobald',\n    'Reddyhoff',\n    null,\n    'maximized',\n    'Kerianne',\n    'Lythgoe',\n    null,\n    'Networked',\n    'Zedekiah',\n    'Hawsby',\n    null,\n    'Visionary',\n    'Randell',\n    'Leathwood',\n    null,\n    'complexity',\n    'Franchot',\n    'Cumine',\n    null,\n    'knowledge base',\n    'Corbet',\n    'Muff',\n    null,\n    'Right-sized',\n    'Christoffer',\n    'Gecke',\n    null,\n    'disintermediate',\n    'Briana',\n    'Laskey',\n    null,\n    'intranet',\n    'Angus',\n    'Artist',\n    null,\n    'pricing structure',\n    'Jodie',\n    'Kittel',\n    null,\n    'holistic',\n    'Dorelia',\n    'McIlenna',\n    null,\n    'Team-oriented',\n    'Brandy',\n    'Shaplin',\n    null,\n    'Seamless',\n    'Morrie',\n    'De Mico',\n    null,\n    'circuit',\n    'Flory',\n    'Dows',\n    null,\n    'Digitized',\n    'Tess',\n    'Chetwin',\n    null,\n    'Profound',\n    'Kinny',\n    'Zamora',\n    null,\n    'secondary',\n    'Tracy',\n    'Kleinplac',\n    null,\n    'hub',\n    'Uta',\n    'Lydiate',\n    null,\n    'secondary',\n    'Vera',\n    'Loan',\n    null,\n    'collaboration',\n    'Benni',\n    'Penniell',\n    null,\n    'zero defect',\n    'Reggis',\n    'Holdforth',\n    null,\n    'frame',\n    'Adria',\n    'Monte',\n    null,\n    'contingency',\n    'Faith',\n    'Chedzoy',\n    null,\n    'archive',\n    'Ingrid',\n    'Graser',\n    null,\n    '5th generation',\n    'Enriqueta',\n    'Tie',\n    null,\n    'radical',\n    'Gasper',\n    'Teenan',\n    null,\n    'parallelism',\n    'Fifine',\n    'Lahiff',\n    null,\n    'system engine',\n    'Sophi',\n    'Fealy',\n    null,\n    '6th generation',\n    'Joshia',\n    'Caurah',\n    null,\n    'collaboration',\n    'Branden',\n    'Byard',\n    null,\n    'product',\n    'Dyann',\n    'Tibb',\n    null,\n    'support',\n    'Loni',\n    'Wenn',\n    null,\n    'maximized',\n    'Marleah',\n    'Sail',\n    null,\n    'Balanced',\n    'Stanislaus',\n    'Fley',\n    null,\n    'Ergonomic',\n    'Pascale',\n    'Furst',\n    null,\n    'maximized',\n    'Gus',\n    'Draijer',\n    null,\n    'Phased',\n    'Blake',\n    'Nannini',\n    null,\n    'matrices',\n    'Anthea',\n    'Faloon',\n    null,\n    'stable',\n    'Alexandr',\n    'Dargie',\n    null,\n    'impactful',\n    'Nickolas',\n    'Losemann',\n    null,\n    'Function-based',\n    'Ruttger',\n    'Summerfield',\n    null,\n    'support',\n    'Tanhya',\n    'Somerville',\n    null,\n    'Configurable',\n    'Von',\n    'Brasher',\n    null,\n    'Robust',\n    'Gal',\n    'Coverly',\n    null,\n    'Multi-layered',\n    'Olly',\n    'Piola',\n    null,\n    'parallelism',\n    'Roxanna',\n    'Brunesco',\n    null,\n    'Innovative',\n    'Elias',\n    'Barehead',\n    null,\n    'groupware',\n    'Cozmo',\n    'Aleksich',\n    null,\n    'Object-based',\n    'Had',\n    'Parsall',\n    null,\n    'website',\n    'Jessamine',\n    'Parsonson',\n    null,\n    'Realigned',\n    'Erinn',\n    'Harrad',\n    null,\n    'mobile',\n    'Trudy',\n    'Ternott',\n    null,\n    'background',\n    'Leighton',\n    'Newick',\n    null,\n    'application',\n    'Flem',\n    'Sabater',\n    null,\n    'model',\n    'Horton',\n    'Luthwood',\n    null,\n    'pricing structure',\n    'Yuma',\n    'Laxston',\n    null,\n    'leading edge',\n    'Quintana',\n    'Barnwall',\n    null,\n    'bandwidth-monitored',\n    'Ulrikaumeko',\n    'Ruter',\n    null,\n    'Customizable',\n    'Stephana',\n    'Djurkovic',\n    null,\n    'implementation',\n    'Agna',\n    'Freak',\n    null,\n    'conglomeration',\n    'Faith',\n    'Courtman',\n    null,\n    'exuding',\n    'Vassili',\n    'Novakovic',\n    null,\n    'mobile',\n    'Issi',\n    'Vale',\n    null,\n    'Intuitive',\n    'Olenolin',\n    'Wogdon',\n    null,\n    'Triple-buffered',\n    'Nerte',\n    'Oglevie',\n    null,\n    'directional',\n    'Conrad',\n    'Lanney',\n    null,\n    'uniform',\n    'Glenden',\n    'Bauduccio',\n    null,\n    'methodology',\n    'Booth',\n    'Gherarducci',\n    null,\n    'Ergonomic',\n    'Row',\n    'Bosch',\n    null,\n    'Multi-layered',\n    'Riordan',\n    'La Croce',\n    null,\n    'Reduced',\n    'Brandy',\n    'Whicher',\n    null,\n    'Fully-configurable',\n    'Gaultiero',\n    'McLay',\n    null,\n    'parallelism',\n    'Stanly',\n    'Marquis',\n    null,\n    'firmware',\n    'Jany',\n    'Byas',\n    null,\n    'attitude-oriented',\n    'Noam',\n    'Shambroke',\n    null,\n    'directional',\n    'Susy',\n    'Spratt',\n    null,\n    'User-friendly',\n    'Goddart',\n    'Mayling',\n    null,\n    'superstructure',\n    'Delila',\n    'Hankins',\n    null,\n    'encoding',\n    'Rab',\n    'Devine',\n    null,\n    'contingency',\n    'Engracia',\n    'Gradon',\n    null,\n    'forecast',\n    'Allyn',\n    'Steljes',\n    null,\n    'intermediate',\n    'Rolando',\n    'Bernat',\n    null,\n    'discrete',\n    'Adamo',\n    'Boyles',\n    null,\n    'Monitored',\n    'Brittan',\n    'Hollyman',\n    null,\n    'Object-based',\n    'Leeland',\n    'Opie',\n    null,\n    'Cross-group',\n    'Chrysa',\n    'Fairpool',\n    null,\n    'system engine',\n    'Bernetta',\n    'Veivers',\n    null,\n    'optimizing',\n    'Kate',\n    'Gullan',\n    null,\n    'Intuitive',\n    'Flossie',\n    'Claiton',\n    null,\n    'complexity',\n    'Marga',\n    'Baude',\n    null,\n    'complexity',\n    'Teodoro',\n    'Philliphs',\n    null,\n    'impactful',\n    'Hilary',\n    'Cottier',\n    null,\n    'multi-tasking',\n    'Cord',\n    'Galliard',\n    null,\n    'Public-key',\n    'Lisabeth',\n    'Fish',\n    null,\n    'array',\n    'Cad',\n    'Merrin',\n    null,\n    'Vision-oriented',\n    'Evvie',\n    'Gillum',\n    null,\n    'Persistent',\n    'Ethe',\n    'Glashby',\n    null,\n    'Digitized',\n    'Ham',\n    'Vallender',\n    null,\n    'interactive',\n    'Dulciana',\n    'Andrysiak',\n    null,\n    'adapter',\n    'Powell',\n    'Mar',\n    null,\n    'Configurable',\n    'Dollie',\n    'Hurdidge',\n    null,\n    'Stand-alone',\n    'Conchita',\n    'Twatt',\n    null,\n    'zero defect',\n    'Hi',\n    'Sherbrook',\n    null,\n    'Face to face',\n    'Lonnard',\n    'Hegdonne',\n    null,\n    'systemic',\n    'Konrad',\n    'Jewes',\n    null,\n    'Expanded',\n    'Freemon',\n    'Aldus',\n    null,\n    'Synchronised',\n    'Adeline',\n    'Sauvan',\n    null,\n    'Secured',\n    'Jodi',\n    'Creegan',\n    null,\n    'Self-enabling',\n    'Crista',\n    'Bussen',\n    null,\n    'utilisation',\n    'Wilek',\n    'Leavesley',\n    null,\n    'multimedia',\n    'Steffane',\n    'Freshwater',\n    null,\n    '3rd generation',\n    'Gil',\n    'Ramberg',\n    null,\n    'Multi-layered',\n    'Hazlett',\n    'Matiasek',\n    null,\n    'interface',\n    'Odell',\n    'Boldock',\n    null,\n    'Balanced',\n    'Deck',\n    'Gorner',\n    null,\n    'holistic',\n    'Yasmin',\n    'Rowlatt',\n    null,\n    'ability',\n    'Guendolen',\n    \"O'Hagerty\",\n    null,\n    'neural-net',\n    'Brian',\n    'Elden',\n    null,\n    'Reduced',\n    'Calida',\n    'Bemment',\n    null,\n    'Distributed',\n    'Dickie',\n    'Mott',\n    null,\n    'secured line',\n    'Lloyd',\n    'Monelle',\n    null,\n    'Cross-platform',\n    'Glennie',\n    'Corson',\n    null,\n    'Cross-platform',\n    'Aubry',\n    'Jojic',\n    null,\n    'Multi-tiered',\n    'Sutherland',\n    'MacIlraith',\n    null,\n    'asynchronous',\n    'Percy',\n    'Kitlee',\n    null,\n    'Versatile',\n    'Elnora',\n    'Madine',\n    null,\n    'web-enabled',\n    'Kitti',\n    'Greenman',\n    null,\n    'Secured',\n    'Akim',\n    'Waller',\n    null,\n    'Integrated',\n    'Corene',\n    'Sale',\n    null,\n    'tertiary',\n    'Rorie',\n    'Muirhead',\n    null,\n    'Customizable',\n    'Alejandro',\n    'McDuffy',\n    null,\n    'superstructure',\n    'Nevins',\n    'Sandford',\n    null,\n    'task-force',\n    'Charlotte',\n    'Roswarn',\n    null,\n    'pricing structure',\n    'Barbette',\n    'Norval',\n    null,\n    'stable',\n    'Ardra',\n    'Lorek',\n    null,\n    'eco-centric',\n    'Rubie',\n    'Proven',\n    null,\n    'superstructure',\n    'Moira',\n    'Syseland',\n    null,\n    'data-warehouse',\n    'Murielle',\n    'Banat',\n    null,\n    'moderator',\n    'Armand',\n    'Cawse',\n    null,\n    'Stand-alone',\n    'Gale',\n    'Cars',\n    null,\n    'User-friendly',\n    'Rance',\n    'Leamon',\n    null,\n    'executive',\n    'Barde',\n    'Rosenfarb',\n    null,\n    'project',\n    'Keslie',\n    'Callinan',\n    null,\n    'Monitored',\n    'Nedda',\n    'Anyene',\n    null,\n    'process improvement',\n    'Jamill',\n    'Harvison',\n    null,\n    'even-keeled',\n    'Vonny',\n    'Gerssam',\n    null,\n    'Right-sized',\n    'Winnah',\n    'Gladeche',\n    null,\n    'non-volatile',\n    'Lissi',\n    'Jeffree',\n    null,\n    'frame',\n    'Guillermo',\n    'Glass',\n    null,\n    'installation',\n    'Emily',\n    'Zoppie',\n    null,\n    'service-desk',\n    'Annaliese',\n    'Davall',\n    null,\n    'background',\n    'Homerus',\n    'Rowell',\n    null,\n    'regional',\n    'Gabriele',\n    'McKeachie',\n    null,\n    'encoding',\n    'Philippine',\n    'Versey',\n    null,\n    'Multi-tiered',\n    'Hartwell',\n    'Knaggs',\n    null,\n    'executive',\n    'Gunilla',\n    'Elwood',\n    null,\n    'Self-enabling',\n    'Cyndi',\n    'Mulrenan',\n    null,\n    'protocol',\n    'Nan',\n    'Izzat',\n    null,\n    'local',\n    'Corby',\n    'Hobble',\n    null,\n    'benchmark',\n    'Elmer',\n    'Ingree',\n    null,\n    'Re-contextualized',\n    'Delinda',\n    'Terrelly',\n    null,\n    'database',\n    'Ofella',\n    'Derges',\n    null,\n    'Self-enabling',\n    'Rickie',\n    'Alans',\n    null,\n    'systematic',\n    'Sauveur',\n    'Tomet',\n    null,\n    'matrix',\n    'Jody',\n    'Greet',\n    null,\n    'local area network',\n    'Archaimbaud',\n    'Waskett',\n    null,\n    'user-facing',\n    'Berget',\n    'Kemball',\n    null,\n    'Fundamental',\n    'Jourdain',\n    'Moen',\n    null,\n    'upward-trending',\n    'Maryrose',\n    'Oxlade',\n    null,\n    'user-facing',\n    'Anallese',\n    'Petrushka',\n    null,\n    '4th generation',\n    'Maison',\n    'Schooley',\n    null,\n    'static',\n    'Tuck',\n    'Ramsbottom',\n    null,\n    'Up-sized',\n    'Lorilee',\n    'Sallings',\n    null,\n    'modular',\n    'Port',\n    'Lyford',\n    null,\n    'capability',\n    'Becki',\n    'Munt',\n    null,\n    'Face to face',\n    'Tybalt',\n    'Yates',\n    null,\n    'methodical',\n    'Viviene',\n    'Tejero',\n    null,\n    'adapter',\n    'Camilla',\n    'Manoelli',\n    null,\n    'Phased',\n    'Camellia',\n    'Usherwood',\n    null,\n    'focus group',\n    'Mignon',\n    'Baack',\n    null,\n    'Object-based',\n    'Gloriane',\n    'Mehmet',\n    null,\n    'Managed',\n    'Verine',\n    'Jenks',\n    null,\n    '3rd generation',\n    'Goober',\n    'Lepick',\n    null,\n    'coherent',\n    'Hedy',\n    'Burren',\n    null,\n    'zero tolerance',\n    'Floyd',\n    'Twiddy',\n    null,\n    'disintermediate',\n    'Tabbatha',\n    'Fooks',\n    null,\n    'asynchronous',\n    'Sebastien',\n    'Madelin',\n    null,\n    'national',\n    'Kassey',\n    'Leates',\n    null,\n    'model',\n    'Selle',\n    'Braidwood',\n    null,\n    'Programmable',\n    'Raffaello',\n    'Bensley',\n    null,\n    'data-warehouse',\n    'Raye',\n    'Caldaro',\n    null,\n    'Enhanced',\n    'Jeff',\n    'Currall',\n    null,\n    'intranet',\n    'Rawley',\n    'Love',\n    null,\n    'approach',\n    'Lillian',\n    'Muckart',\n    null,\n    'moderator',\n    'Bren',\n    'Glasspoole',\n    null,\n    'grid-enabled',\n    'Silvio',\n    'Brant',\n    null,\n    'standardization',\n    'Carlyn',\n    'Burkman',\n    null,\n    'Advanced',\n    'Stanton',\n    'Coe',\n    null,\n    'portal',\n    'Constancia',\n    'Dillestone',\n    null,\n    'archive',\n    'Donal',\n    'Skittle',\n    null,\n    'local',\n    'Debi',\n    'Gibbeson',\n    null,\n    'paradigm',\n    'Gabi',\n    'Kiehl',\n    null,\n    'tertiary',\n    'Nevil',\n    'McGreay',\n    null,\n    'Exclusive',\n    'Paule',\n    'Angel',\n    null,\n    'global',\n    'Timothee',\n    'Berwick',\n    null,\n    'task-force',\n    'Gabrielle',\n    'Dearsley',\n    null,\n    'didactic',\n    'Miguela',\n    'Matthiesen',\n    null,\n    'neutral',\n    'Curt',\n    'Keigher',\n    null,\n    'Organic',\n    'Lila',\n    'Lieb',\n    null,\n    'Intuitive',\n    'Brendon',\n    'Martelet',\n    null,\n    'Virtual',\n    'Yorke',\n    'Deetch',\n    null,\n    'directional',\n    'Innis',\n    'Hendin',\n    null,\n    'Customizable',\n    'Berke',\n    'McCrillis',\n    null,\n    'Public-key',\n    'Emerson',\n    'Harvard',\n    null,\n    'transitional',\n    'Gene',\n    'Ferrea',\n    null,\n    'architecture',\n    'Yoshiko',\n    'Ordidge',\n    null,\n    'parallelism',\n    'Burty',\n    'Stuckey',\n    null,\n    'methodology',\n    'Janifer',\n    'Blankman',\n    null,\n    'open system',\n    'Christy',\n    'Bicksteth',\n    null,\n    'multimedia',\n    'Cheston',\n    'Tynewell',\n    null,\n    'optimizing',\n    'Kiah',\n    'Sudron',\n    null,\n    'framework',\n    'Nady',\n    'Rossander',\n    null,\n    '6th generation',\n    'Frazier',\n    'Faust',\n    null,\n    'functionalities',\n    'Angeli',\n    'Leftwich',\n    null,\n    'Quality-focused',\n    'Errick',\n    'Coxwell',\n    null,\n    'installation',\n    'Alan',\n    'Knifton',\n    null,\n    'initiative',\n    'Halsy',\n    'Strippel',\n    null,\n    'conglomeration',\n    'Ludvig',\n    'Ransley',\n    null,\n    'Exclusive',\n    'Jamie',\n    'Moizer',\n    null,\n    'zero administration',\n    'Christophe',\n    'Rawcliffe',\n    null,\n    'Optimized',\n    'Gerick',\n    'Massimi',\n    null,\n    'explicit',\n    'Angela',\n    'Adanez',\n    null,\n    'definition',\n    'Rhona',\n    'Neller',\n    null,\n    'maximized',\n    'Calla',\n    'Brumham',\n    null,\n    '24/7',\n    'Lorianne',\n    'Cosby',\n    null,\n    'Automated',\n    'Brenna',\n    'Gianni',\n    null,\n    'Self-enabling',\n    'Beitris',\n    'Gavrielli',\n    null,\n    'Multi-channelled',\n    'Colline',\n    'Antoszczyk',\n    null,\n    'Optional',\n    'Alard',\n    'Haestier',\n    null,\n    'collaboration',\n    'Kaiser',\n    'MacConneely',\n    null,\n    'budgetary management',\n    'Egbert',\n    'Cadigan',\n    null,\n    'system engine',\n    'Alfy',\n    'Delete',\n    null,\n    'Front-line',\n    'Jacklyn',\n    'Sweetman',\n    null,\n    '5th generation',\n    'Marcellus',\n    'Gonzalvo',\n    null,\n    'moderator',\n    'Alexandrina',\n    'Corona',\n    null,\n    'approach',\n    'Efrem',\n    'Staniland',\n    null,\n    'Decentralized',\n    'Duane',\n    'Olsen',\n    null,\n    'Configurable',\n    'Teri',\n    'Brumby',\n    null,\n    'intermediate',\n    'Damian',\n    'Fullalove',\n    null,\n    'success',\n    'Petronilla',\n    'Renon',\n    null,\n    'implementation',\n    'Libby',\n    'Leathley',\n    null,\n    'Profit-focused',\n    'My',\n    'Bayne',\n    null,\n    'encoding',\n    'Jordana',\n    'Ravenshear',\n    null,\n    'heuristic',\n    'Anetta',\n    'Parrot',\n    null,\n    'Seamless',\n    'Ardella',\n    'Hourahan',\n    null,\n    'policy',\n    'Danny',\n    'McWilliams',\n    null,\n    'bi-directional',\n    'Ravid',\n    'Mesias',\n    null,\n    'structure',\n    'Gibby',\n    'Gellately',\n    null,\n    'software',\n    'Lettie',\n    'Shatford',\n    null,\n    'Persistent',\n    'Natal',\n    'Dell Casa',\n    null,\n    'middleware',\n    'Enoch',\n    'Lawee',\n    null,\n    'alliance',\n    'Janka',\n    'Chevin',\n    null,\n    'optimal',\n    'Danila',\n    'Spurrett',\n    null,\n    'frame',\n    'Melissa',\n    'Behling',\n    null,\n    'intangible',\n    'Laurens',\n    'Northleigh',\n    null,\n    'Open-architected',\n    'Piotr',\n    'Chopping',\n    null,\n    'executive',\n    'Odey',\n    'Shave',\n    null,\n    'mission-critical',\n    'Paolina',\n    'Grindley',\n    null,\n    'Upgradable',\n    'Kile',\n    'Stonehouse',\n    null,\n    'needs-based',\n    'Zane',\n    'Andrichuk',\n    null,\n    'Synergized',\n    'Barbee',\n    'Zupone',\n    null,\n    'actuating',\n    'Gan',\n    'Rennock',\n    null,\n    'dedicated',\n    'Trey',\n    'Thorndycraft',\n    null,\n    'regional',\n    'Guglielmo',\n    'Spritt',\n    null,\n    'portal',\n    'Omar',\n    'Pina',\n    null,\n    'instruction set',\n    'Thatcher',\n    'Maasze',\n    null,\n    'Persistent',\n    'Cirilo',\n    'MacPaik',\n    null,\n    '6th generation',\n    'Hirsch',\n    'Whitcomb',\n    null,\n    'Function-based',\n    'Cully',\n    'Wilhelmy',\n    null,\n    'knowledge user',\n    'Rodger',\n    'Whiston',\n    null,\n    'Multi-channelled',\n    'Chiquia',\n    'Bicknell',\n    null,\n    'User-centric',\n    'Renie',\n    'Dungate',\n    null,\n    'Mandatory',\n    'Devina',\n    'Bruntjen',\n    null,\n    'Triple-buffered',\n    'Linoel',\n    'Edgell',\n    null,\n    'Optimized',\n    'Hildagard',\n    'Saladino',\n    null,\n    'initiative',\n    'Susi',\n    'Walentynowicz',\n    null,\n    'policy',\n    'Rosalyn',\n    'Warbeys',\n    null,\n    'national',\n    'Minnnie',\n    'Moral',\n    null,\n    'forecast',\n    'Tiler',\n    'Slaney',\n    null,\n    'definition',\n    'Felicle',\n    'Shepstone',\n    null,\n    '4th generation',\n    'Ree',\n    'Waters',\n    null,\n    'forecast',\n    'Alexina',\n    'Overstall',\n    null,\n    'grid-enabled',\n    'Sonya',\n    'Bisacre',\n    null,\n    'parallelism',\n    'Deanne',\n    'Corpes',\n    null,\n    'toolset',\n    'Tresa',\n    'Hanhard',\n    null,\n    'mobile',\n    'Norma',\n    'Vondrys',\n    null,\n    'hardware',\n    'Lockwood',\n    'Beevis',\n    null,\n    'application',\n    'Alica',\n    'Edlin',\n    null,\n    'intranet',\n    'Avril',\n    'Dymock',\n    null,\n    'implementation',\n    'Adrian',\n    'Addicott',\n    null,\n    'concept',\n    'Augustine',\n    'Leger',\n    null,\n    'well-modulated',\n    'Merv',\n    'Woolland',\n    null,\n    'content-based',\n    'Jimmy',\n    'Holberry',\n    null,\n    'artificial intelligence',\n    'Stefa',\n    'MacKenney',\n    null,\n    'Optimized',\n    'Petr',\n    'Ifill',\n    null,\n    'portal',\n    'Fifi',\n    'Jubert',\n    null,\n    'Implemented',\n    'Shelli',\n    'Vearnals',\n    null,\n    'Integrated',\n    'Joye',\n    'Cove',\n    null,\n    'Robust',\n    'Gypsy',\n    'Lowen',\n    null,\n    'Vision-oriented',\n    'Barn',\n    'Purry',\n    null,\n    'product',\n    'Rhett',\n    'Barrabeale',\n    null,\n    'Triple-buffered',\n    'Helenelizabeth',\n    'McDuall',\n    null,\n    'knowledge base',\n    'Codi',\n    'Pascow',\n    null,\n    'alliance',\n    'Janeta',\n    'Cornils',\n    null,\n    'Cross-platform',\n    'Donnell',\n    'Tybalt',\n    null,\n    'transitional',\n    'Prisca',\n    'Trimble',\n    null,\n    'paradigm',\n    'Victor',\n    'Stachini',\n    null,\n    'Operative',\n    'Stuart',\n    'Got',\n    null,\n    'firmware',\n    'Merola',\n    'Legg',\n    null,\n    'Innovative',\n    'Gwenore',\n    'McNickle',\n    null,\n    'Seamless',\n    'Rossie',\n    'Petkens',\n    null,\n    'bottom-line',\n    'Harper',\n    'Andrelli',\n    null,\n    'bi-directional',\n    'Rita',\n    'Curds',\n    null,\n    'bottom-line',\n    'Leigha',\n    'Bowart',\n    null,\n    'Enhanced',\n    'Sorcha',\n    'Nudde',\n    null,\n    'Ergonomic',\n    'Jaquelyn',\n    'Gottelier',\n    null,\n    'Reactive',\n    'Editha',\n    'Sammons',\n    null,\n    'national',\n    'Bar',\n    'Blackboro',\n    null,\n    'Profit-focused',\n    'Ralf',\n    'Gero',\n    null,\n    'radical',\n    'Nicolai',\n    'Boddis',\n    null,\n    'eco-centric',\n    'Harwell',\n    'Bygott',\n    null,\n    'task-force',\n    'Iosep',\n    'Jayes',\n    null,\n    'Operative',\n    'Murry',\n    'Freer',\n    null,\n    'foreground',\n    'Clementia',\n    'Noddles',\n    null,\n    'contextually-based',\n    'Dov',\n    'Edgeley',\n    null,\n    'task-force',\n    'Stearn',\n    'Stuchbery',\n    null,\n    'Persevering',\n    'Rossy',\n    'Orvis',\n    null,\n    'Secured',\n    'Deina',\n    'Fibbitts',\n    null,\n    'Fully-configurable',\n    'Teodor',\n    'Laity',\n    null,\n    'mobile',\n    'Goddard',\n    'Scoon',\n    null,\n    'productivity',\n    'Constantina',\n    'Olivello',\n    null,\n    'logistical',\n    'Kippy',\n    'Tromans',\n    null,\n    'Exclusive',\n    'Emmett',\n    'Letchford',\n    null,\n    'utilisation',\n    'Heidi',\n    'De Freyne',\n    null,\n    'Compatible',\n    'Dodi',\n    'MacKenny',\n    null,\n    'Organic',\n    'Alford',\n    'Colmer',\n    null,\n    'Persevering',\n    'Kally',\n    'Kirke',\n    null,\n    'framework',\n    'Timi',\n    'Graalman',\n    null,\n    'cohesive',\n    'Morgun',\n    'Scullard',\n    null,\n    'dedicated',\n    'Fairfax',\n    'Hedling',\n    null,\n    'budgetary management',\n    'Judie',\n    'Topper',\n    null,\n    'secured line',\n    'Jock',\n    'Rameau',\n    null,\n    'database',\n    'Clive',\n    'Cookes',\n    null,\n    'open system',\n    'Derry',\n    'Mosten',\n    null,\n    'Ameliorated',\n    'Riannon',\n    'Haycox',\n    null,\n    'collaboration',\n    'Todd',\n    'Bowich',\n    null,\n    'info-mediaries',\n    'Brook',\n    'Grunnill',\n    null,\n    'Operative',\n    'Esmaria',\n    'Ryson',\n    null,\n    'Enhanced',\n    'Dunn',\n    'Burdon',\n    null,\n    'architecture',\n    'Miguela',\n    'Monckton',\n    null,\n    'multi-state',\n    'Jany',\n    'Gethings',\n    null,\n    'clear-thinking',\n    'Lorelei',\n    'Ivanikhin',\n    null,\n    'migration',\n    'Grannie',\n    'Sandiland',\n    null,\n    'Universal',\n    'Ogdon',\n    'Chadburn',\n    null,\n    'structure',\n    'Westley',\n    'Elvish',\n    null,\n    'real-time',\n    'Jacquelyn',\n    \"O'Hegertie\",\n    null,\n    'Configurable',\n    'Magdalene',\n    'Durno',\n    null,\n    'open system',\n    'Theodore',\n    'Saur',\n    null,\n    'cohesive',\n    'Lanie',\n    'Peek',\n    null,\n    'real-time',\n    'Cort',\n    'Clayworth',\n    null,\n    'policy',\n    'Emmery',\n    'Saffon',\n    null,\n    'initiative',\n    'Cyril',\n    'Pembery',\n    null,\n    'high-level',\n    'Rene',\n    'Pavic',\n    null,\n    'systematic',\n    'Dione',\n    'Bence',\n    null,\n    'Front-line',\n    'Ravid',\n    'Breache',\n    null,\n    'focus group',\n    'Tiphani',\n    'Nesterov',\n    null,\n    'orchestration',\n    'Lily',\n    'Gerding',\n    null,\n    'Synergized',\n    'Evelin',\n    'Hounsom',\n    null,\n    'eco-centric',\n    'Jasper',\n    'Sysland',\n    null,\n    'leading edge',\n    'Rudolph',\n    'Rogerot',\n    null,\n    'cohesive',\n    'Gilbertina',\n    'Moorman',\n    null,\n    'application',\n    'Vida',\n    'Caves',\n    null,\n    'superstructure',\n    'Ambrosio',\n    'Snowsill',\n    null,\n    'bi-directional',\n    'Courtnay',\n    'Reede',\n    null,\n    'array',\n    'Perceval',\n    'Maunder',\n    null,\n    'collaboration',\n    'Hagan',\n    'Pedel',\n    null,\n    'implementation',\n    'Kate',\n    'de la Valette Parisot',\n    null,\n    'Stand-alone',\n    'Lutero',\n    'Bladder',\n    null,\n    'Function-based',\n    'Lilian',\n    'Alcido',\n    null,\n    'monitoring',\n    'Sonia',\n    'Maylam',\n    null,\n    'structure',\n    'Ronny',\n    'Went',\n    null,\n    'Enhanced',\n    'Neila',\n    'Rapps',\n    null,\n    'optimal',\n    'Isobel',\n    'Salvati',\n    null,\n    'local area network',\n    'Georgetta',\n    'Clearie',\n    null,\n    'Integrated',\n    'Page',\n    'Padbery',\n    null,\n    'infrastructure',\n    'Alverta',\n    'Petrillo',\n    null,\n    'homogeneous',\n    'Katee',\n    'Briiginshaw',\n    null,\n    'zero tolerance',\n    'Prue',\n    'Poller',\n    null,\n    'secured line',\n    'Rex',\n    'Banasik',\n    null,\n    'database',\n    'Yvon',\n    'Spurrier',\n    null,\n    'artificial intelligence',\n    'Gustave',\n    'Messier',\n    null,\n    'portal',\n    'Regan',\n    'Bollis',\n    null,\n    'projection',\n    'Marco',\n    'Humpage',\n    null,\n    'intranet',\n    'Kahlil',\n    'Normanton',\n    null,\n    'Re-contextualized',\n    'Sheffie',\n    'Luddy',\n    null,\n    'multimedia',\n    'Federico',\n    'Swinbourne',\n    null,\n    'modular',\n    'Art',\n    'Paradine',\n    null,\n    'analyzer',\n    'Corry',\n    'Hedlestone',\n    null,\n    'complexity',\n    'Schuyler',\n    'Luck',\n    null,\n    'needs-based',\n    'Farah',\n    'Haddock',\n    null,\n    'Fundamental',\n    'Candy',\n    'Bercevelo',\n    null,\n    'strategy',\n    'Lorraine',\n    'Pinwill',\n    null,\n    'interface',\n    'Keelia',\n    'Shellcross',\n    null,\n    'Future-proofed',\n    'Annie',\n    'Klimschak',\n    null,\n    'Devolved',\n    'Albie',\n    'Limb',\n    null,\n    'methodology',\n    'Chance',\n    'Bru',\n    null,\n    'Profit-focused',\n    'Deloria',\n    'Tonn',\n    null,\n    'Cross-group',\n    'Augustina',\n    'Sanbrooke',\n    null,\n    'Open-architected',\n    'Ari',\n    \"O' Loughran\",\n    null,\n    'Reduced',\n    'Gray',\n    'Jermin',\n    null,\n    'Upgradable',\n    'Cynthia',\n    'Drinkale',\n    null,\n    'knowledge base',\n    'Garret',\n    'Duffett',\n    null,\n    'dedicated',\n    'Doyle',\n    'Fitzhenry',\n    null,\n    'approach',\n    'Lev',\n    \"O'Crowley\",\n    null,\n    'Optional',\n    'Koren',\n    'Piff',\n    null,\n    'emulation',\n    'Aldous',\n    'Keel',\n    null,\n    'contextually-based',\n    'Micky',\n    'Kubacki',\n    null,\n    'Reduced',\n    'Horten',\n    'Ruberti',\n    null,\n    'global',\n    'Astrid',\n    'Twydell',\n    null,\n    'Secured',\n    'Dallon',\n    'Maingot',\n    null,\n    'Optimized',\n    'Abbott',\n    'Siaspinski',\n    null,\n    '6th generation',\n    'Lyman',\n    'Geeve',\n    null,\n    'support',\n    'Danila',\n    'Dukesbury',\n    null,\n    'neutral',\n    'Bradan',\n    'Caton',\n    null,\n    'Reverse-engineered',\n    'Obed',\n    'Challenor',\n    null,\n    'Automated',\n    'Rhiamon',\n    \"D'Antoni\",\n    null,\n    'function',\n    'Caralie',\n    'Milnthorpe',\n    null,\n    'Virtual',\n    'Rosina',\n    'Maudlen',\n    null,\n    'Exclusive',\n    'Reinwald',\n    'Gilbride',\n    null,\n    'zero administration',\n    'Bianca',\n    'Pound',\n    null,\n    'Synergistic',\n    'Heywood',\n    'Bizzey',\n    null,\n    'discrete',\n    'Ginnie',\n    'York',\n    null,\n    'Reactive',\n    'Bailie',\n    'Ingreda',\n    null,\n    'interactive',\n    'Appolonia',\n    'Murcott',\n    null,\n    'Future-proofed',\n    'Humbert',\n    'Lademann',\n    null,\n    'matrices',\n    'Eustace',\n    'McInulty',\n    null,\n    'middleware',\n    'Jordain',\n    'Tisun',\n    null,\n    'Phased',\n    'Doyle',\n    'Kleint',\n    null,\n    'system engine',\n    'Blayne',\n    'Schimke',\n    null,\n    'value-added',\n    'Berget',\n    'Caras',\n    null,\n    'support',\n    'Helene',\n    'Blesing',\n    null,\n    'real-time',\n    'Garland',\n    'Delete',\n    null,\n    'multimedia',\n    'Kacey',\n    'Dionsetti',\n    null,\n    'Devolved',\n    'Melony',\n    'Simmans',\n    null,\n    'cohesive',\n    'Bari',\n    'Bilovus',\n    null,\n    'executive',\n    'Tamarah',\n    'Schuchmacher',\n    null,\n    'process improvement',\n    'Denys',\n    'Maycock',\n    null,\n    'task-force',\n    'Monica',\n    'Canfer',\n    null,\n    'needs-based',\n    'Jeremie',\n    'Martinec',\n    null,\n    'toolset',\n    'Granthem',\n    'Murfin',\n    null,\n    'zero tolerance',\n    'Eachelle',\n    'Byrcher',\n    null,\n    'initiative',\n    'Cointon',\n    'Wearden',\n    null,\n    'uniform',\n    'Blayne',\n    'Levinge',\n    null,\n    'client-server',\n    'Eldridge',\n    'De Wolfe',\n    null,\n    'local',\n    'Chadwick',\n    'Gaveltone',\n    null,\n    'Team-oriented',\n    'Leroi',\n    'Robic',\n    null,\n    'encryption',\n    'Ravid',\n    'Commins',\n    null,\n    'orchestration',\n    'Taddeo',\n    'Chominski',\n    null,\n    'Monitored',\n    'Damaris',\n    'Browne',\n    null,\n    'Ergonomic',\n    'Noby',\n    'Pearl',\n    null,\n    'Multi-layered',\n    'Missie',\n    'Gerwood',\n    null,\n    'initiative',\n    'Olive',\n    'Clow',\n    null,\n    'solution-oriented',\n    'Karilynn',\n    'Butt Gow',\n    null,\n    'Phased',\n    'Helene',\n    'Baly',\n    null,\n    'protocol',\n    'Saundra',\n    'Donaway',\n    null,\n    'regional',\n    'Max',\n    'Bailess',\n    null,\n    'Multi-lateral',\n    'Gasparo',\n    'Martlew',\n    null,\n    'disintermediate',\n    'Chicky',\n    'Sweetland',\n    null,\n    'exuding',\n    'Durward',\n    'Messam',\n    null,\n    'Multi-channelled',\n    'Angie',\n    'Keach',\n    null,\n    'Pre-emptive',\n    'Elsa',\n    'Kernan',\n    null,\n    'Ergonomic',\n    'Benni',\n    'Borthwick',\n    null,\n    'multi-state',\n    'Correy',\n    'Scroggins',\n    null,\n    '3rd generation',\n    'Kalie',\n    'Janse',\n    null,\n    'intangible',\n    'Stormy',\n    'Zimek',\n    null,\n    'Digitized',\n    'Thane',\n    'Fenelow',\n    null,\n    'Profound',\n    'Grady',\n    'Toma',\n    null,\n    'leading edge',\n    'Bartel',\n    'McGuggy',\n    null,\n    'solution',\n    'Jyoti',\n    'Feltham',\n    null,\n    'contingency',\n    'Linda',\n    'Filipiak',\n    null,\n    'background',\n    'Reine',\n    'McKendo',\n    null,\n    'array',\n    'Lusa',\n    'Lofthouse',\n    null,\n    'Virtual',\n    'Malena',\n    'Juara',\n    null,\n    'Reverse-engineered',\n    'Addie',\n    'Matt',\n    null,\n    'maximized',\n    'Egor',\n    'Lober',\n    null,\n    'Reverse-engineered',\n    'Andreana',\n    'Probert',\n    null,\n    'Public-key',\n    'Ervin',\n    'Hannabus',\n    null,\n    'bottom-line',\n    'Dorey',\n    'Spears',\n    null,\n    'Graphical User Interface',\n    'Sandi',\n    'Stoak',\n    null,\n    'service-desk',\n    'Bette',\n    'Aulds',\n    null,\n    'Digitized',\n    'Forrester',\n    'Burnel',\n    null,\n    'Fundamental',\n    'Terry',\n    'Todhunter',\n    null,\n    'radical',\n    'Arlee',\n    'Borgne',\n    null,\n    'web-enabled',\n    'Vivi',\n    'Peck',\n    null,\n    'content-based',\n    'Vite',\n    'Van Baaren',\n    null,\n    'client-driven',\n    'Mercy',\n    'Vamplers',\n    null,\n    'utilisation',\n    'Sharlene',\n    'Keaton',\n    null,\n    'Balanced',\n    'Josh',\n    'Winskill',\n    null,\n    'Expanded',\n    'Mischa',\n    'Assinder',\n    null,\n    'moratorium',\n    'Gustie',\n    'Flaubert',\n    null,\n    'Automated',\n    'Elfrieda',\n    'Jarratt',\n    null,\n    'utilisation',\n    'Tallie',\n    'Lockhurst',\n    null,\n    'intranet',\n    'Roslyn',\n    'Fittis',\n    null,\n    'parallelism',\n    'Jordan',\n    'Daviddi',\n    null,\n    'regional',\n    'Patrizius',\n    'Sowerbutts',\n    null,\n    '6th generation',\n    'Simone',\n    'Sperling',\n    null,\n    'secured line',\n    'Glen',\n    'Wilcocke',\n    null,\n    'parallelism',\n    'Wynn',\n    'Oolahan',\n    null,\n    'leverage',\n    'Kailey',\n    'Peebles',\n    null,\n    'product',\n    'Libbey',\n    'Sissland',\n    null,\n    'real-time',\n    'Wilbur',\n    'Over',\n    null,\n    'Open-architected',\n    'Benedikt',\n    'Pilbeam',\n    null,\n    'Customizable',\n    'Van',\n    'Riordan',\n    null,\n    'synergy',\n    'Edan',\n    'Soppit',\n    null,\n    'Mandatory',\n    'Teodor',\n    'Daunay',\n    null,\n    'framework',\n    'Agathe',\n    'Jubb',\n    null,\n    'open architecture',\n    'Ina',\n    'Bertlin',\n    null,\n    'directional',\n    'Lulita',\n    'Vigietti',\n    null,\n    'Graphical User Interface',\n    'Sawyere',\n    'Pyle',\n    null,\n    'foreground',\n    'Loralie',\n    'Carsey',\n    null,\n    'zero tolerance',\n    'Maureene',\n    'Aggio',\n    null,\n    'strategy',\n    'Fabian',\n    \"O'Kieran\",\n    null,\n    'systemic',\n    'Ozzy',\n    'Cordle',\n    null,\n    'parallelism',\n    'Bent',\n    'Crain',\n    null,\n    'Ameliorated',\n    'Teddie',\n    'Kondratowicz',\n    null,\n    'hybrid',\n    'Kyrstin',\n    'Rugiero',\n    null,\n    '24 hour',\n    'Aeriel',\n    'Bristow',\n    null,\n    'support',\n    'Denna',\n    'Goodfellowe',\n    null,\n    'Cloned',\n    'Vittoria',\n    'Barnett',\n    null,\n    'task-force',\n    'Nixie',\n    'Lodemann',\n    null,\n    'model',\n    'Tisha',\n    'Kubacek',\n    null,\n    'scalable',\n    'Urson',\n    'Lethley',\n    null,\n    '5th generation',\n    'Calvin',\n    'Briereton',\n    null,\n    'help-desk',\n    'Angie',\n    'Chatell',\n    null,\n    'product',\n    'Pandora',\n    'Brabender',\n    null,\n    'pricing structure',\n    'Aubrey',\n    'Vanini',\n    null,\n    'intranet',\n    'Miranda',\n    'Hansell',\n    null,\n    'architecture',\n    'Sybil',\n    'Furst',\n    null,\n    'orchestration',\n    'Sylvan',\n    'Eddolls',\n    null,\n    'application',\n    'Alec',\n    'Wharin',\n    null,\n    'coherent',\n    'Sig',\n    'Forder',\n    null,\n    '3rd generation',\n    'Loydie',\n    'Tanton',\n    null,\n    'encompassing',\n    'Trip',\n    'Cotes',\n    null,\n    'client-driven',\n    'Ange',\n    'Hundley',\n    null,\n    'application',\n    'Beverlie',\n    'Armour',\n    null,\n    'solution',\n    'Dallon',\n    'Gallemore',\n    null,\n    'Focused',\n    'Wilek',\n    'McIan',\n    null,\n    'fault-tolerant',\n    'Odessa',\n    'Hembry',\n    null,\n    'Managed',\n    'Cristabel',\n    'Soughton',\n    null,\n    'methodical',\n    'Theadora',\n    'Millott',\n    null,\n    'customer loyalty',\n    'Cirillo',\n    'Batisse',\n    null,\n    'intermediate',\n    'Martainn',\n    'Hum',\n    null,\n    'Fundamental',\n    'Brigitta',\n    'Argile',\n    null,\n    'architecture',\n    'Madella',\n    'Jerwood',\n    null,\n    'bottom-line',\n    'Ralf',\n    'Hillum',\n    null,\n    'dedicated',\n    'Gwenette',\n    'Blasing',\n    null,\n    'homogeneous',\n    'Richmound',\n    'Noon',\n    null,\n    '4th generation',\n    'Iver',\n    'Chaulk',\n    null,\n    'application',\n    'Rolph',\n    'Bunting',\n    null,\n    'solution-oriented',\n    'Emera',\n    'Relfe',\n    null,\n    'array',\n    'Marybeth',\n    'Dradey',\n    null,\n    'Pre-emptive',\n    'Taber',\n    'Burch',\n    null,\n    'info-mediaries',\n    'Dalila',\n    'Fidian',\n    null,\n    'actuating',\n    'Udell',\n    'Philler',\n    null,\n    'projection',\n    'Justin',\n    'Braune',\n    null,\n    'emulation',\n    'Philbert',\n    'Gillbe',\n    null,\n    'hierarchy',\n    'Gray',\n    'Bushe',\n    null,\n    'Programmable',\n    'Tish',\n    'Dandison',\n    null,\n    'modular',\n    'Alley',\n    'Puller',\n    null,\n    'Quality-focused',\n    'Peadar',\n    'Bye',\n    null,\n    'Compatible',\n    'Jasun',\n    'Dwelly',\n    null,\n    'client-server',\n    'Gerrilee',\n    'Kiddye',\n    null,\n    'Triple-buffered',\n    'Cull',\n    'Lorenzo',\n    null,\n    'Multi-channelled',\n    'Demetre',\n    'Beauman',\n    null,\n    'website',\n    'Frasier',\n    'Philippou',\n    null,\n    'Decentralized',\n    'Joni',\n    'McMearty',\n    null,\n    'portal',\n    'Gris',\n    'Bleas',\n    null,\n    'reciprocal',\n    'Sapphira',\n    'Croke',\n    null,\n    'Compatible',\n    'Wood',\n    'Klaussen',\n    null,\n    'knowledge base',\n    'Kellsie',\n    'Brideau',\n    null,\n    'Versatile',\n    'Alfie',\n    'Ellinor',\n    null,\n    'Innovative',\n    'Arleyne',\n    'Patershall',\n    null,\n    'algorithm',\n    'Hazel',\n    'Kienle',\n    null,\n    'Decentralized',\n    'Osborn',\n    'Hirschmann',\n    null,\n    'executive',\n    'Nahum',\n    'Schulke',\n    null,\n    '4th generation',\n    'Nicky',\n    'Hedley',\n    null,\n    'Secured',\n    'Mabelle',\n    'Kemmet',\n    null,\n    'Team-oriented',\n    'Herta',\n    'Schurcke',\n    null,\n    'structure',\n    'Abigail',\n    'Robecon',\n    null,\n    'explicit',\n    'Jedediah',\n    'Macrae',\n    null,\n    'leverage',\n    'Harris',\n    'Stanex',\n    null,\n    'encompassing',\n    'Roderick',\n    'Doody',\n    null,\n    'coherent',\n    'Christan',\n    'Paur',\n    null,\n    'asynchronous',\n    'Aron',\n    'Leeburne',\n    null,\n    'Versatile',\n    'Mariel',\n    'Bartlosz',\n    null,\n    'Right-sized',\n    'Aldon',\n    'Duckham',\n    null,\n    'Customer-focused',\n    'Niall',\n    'Cristofolini',\n    null,\n    'Compatible',\n    'Aile',\n    'Rickaert',\n    null,\n    'heuristic'\n];\n","import * as internalDataArray from './dummyData';\n\nexport class DummyDataGenerator {\n    public rowTop: number;\n    private totalGenerated: number;\n    private internalDataArray: any;\n\n    constructor() {\n        this.totalGenerated = 0;\n        // transform json object to an array\n        this.internalDataArray = internalDataArray.data;\n    }\n\n    public reset(): void {\n        this.totalGenerated = 0;\n    }\n\n    public generateData(no: any): any {\n        const dummyArray = [];\n        for (let i = 0; i < no; i++) {\n            // up count\n            this.totalGenerated++;\n\n            const random = function () {\n                const x1 = Math.floor(Math.random() * 3) + 0;\n                const x2 = Math.floor(Math.random() * 9) + 0;\n                const x3 = Math.floor(Math.random() * 9) + 0;\n                const x4 = Math.floor(Math.random() * 9) + 0;\n                return `${x1}${x2}${x3}${x4}`;\n            };\n\n            const date = new Date(\n                new Date().setDate(new Date().getDate() + (Math.floor(Math.random() * 300) + 0))\n            );\n\n            const data = this.internalDataArray;\n\n            dummyArray.push({\n                index: this.totalGenerated,\n                word1: data[random()],\n                word2: data[random()],\n                word3: data[random()],\n                word4: data[random()],\n                word5: data[random()],\n                word6: data[random()],\n                word7: data[random()],\n                word8: data[random()],\n                word9: data[random()],\n                word10: data[random()],\n                word11: data[random()],\n                word12: data[random()],\n                word13: data[random()],\n                word14: data[random()],\n                word15: data[random()],\n                word16: data[random()],\n                word17: data[random()],\n                word18: data[random()],\n                word19: data[random()],\n                word20: data[random()],\n                word21: data[random()],\n                word22: data[random()],\n                word23: data[random()],\n                word24: data[random()],\n                word25: data[random()],\n                word26: data[random()],\n                word27: data[random()],\n                word28: data[random()],\n                word29: data[random()],\n                word31: data[random()],\n                word32: data[random()],\n                word33: data[random()],\n                word34: data[random()],\n                word35: data[random()],\n                word36: data[random()],\n                number: Math.floor(Math.random() * 9000) + 0,\n                bool: Math.floor(Math.random() * 9000) % 3 ? true : false,\n                date: date\n            });\n        }\n\n        return dummyArray;\n    }\n}\n","import { IGridConfig } from '@simple-html/grid';\n\nlet setup: IGridConfig = {\n    cellHeight: 20,\n    panelHeight: 25,\n    footerHeight: 20,\n    selectionMode: 'multiple',\n\n    groups: [\n        {\n            width: 120,\n            rows: [\n                {\n                    header: 'index',\n                    attribute: 'index',\n                    type: 'number',\n                    sortable: {},\n                    filterable: {}\n                },\n                {\n                    header: 'date',\n                    attribute: 'date',\n                    type: 'date',\n                    sortable: {},\n                    filterable: {},\n                    allowGrouping: true\n                },\n                {\n                    header: '',\n                    attribute: '',\n                    type: 'empty',\n                    filterable: {},\n                    sortable: {},\n                    allowGrouping: true\n                },\n                {\n                    header: 'Number',\n                    attribute: 'number',\n                    type: 'number',\n                    filterable: {},\n                    sortable: {}\n                }\n            ]\n        }\n    ]\n};\n\nlet word = 0;\nfor (let i = 1; i < 10; i++) {\n    let x: any = [];\n    for (let y = 0; y < 4; y++) {\n        word++;\n        x.push({\n            header: 'word' + word,\n            attribute: 'word' + word,\n            filterable: {},\n            sortable: {},\n            allowGrouping: true\n        });\n    }\n\n    setup.groups.push({ width: 120, rows: x });\n}\n\nexport const COL_SETUP = setup;\n","import { html } from 'lit-html';\nimport { COL_SETUP as gridConfig } from './colSetup';\nimport { DummyDataGenerator } from './dummyDataGenerator';\nimport { GridInterface } from '@simple-html/grid';\nimport { customElement, property, requestRender } from '@simple-html/core';\n\n@customElement('app-component')\nexport default class extends HTMLElement {\n    private data: any = [];\n    private connector: GridInterface;\n    private dummyDataGenerator: DummyDataGenerator;\n    //@ts-ignore\n    @property() private entity: any = null;\n\n    constructor() {\n        super();\n        this.dummyDataGenerator = new DummyDataGenerator();\n        this.data = this.dummyDataGenerator.generateData(1000);\n        this.connector = new GridInterface(gridConfig);\n        this.connector.setData(this.data, false);\n        this.connector.addEventListener(() => {\n            this.entity = this.connector.currentEntity;\n            //console.log('connected', this.isConnected);\n            requestRender(this);\n            return this.isConnected;\n        });\n    }\n\n    public replaceData(x: number) {\n        this.data = this.dummyDataGenerator.generateData(x);\n        this.connector.setData(this.data);\n    }\n    public group() {\n        gridConfig.sortingSet = [\n            {\n                attribute: 'word1',\n                asc: true,\n                no: 1\n            },\n            {\n                attribute: 'word2',\n                asc: true,\n                no: 2\n            },\n            {\n                attribute: 'word3',\n                asc: true,\n                no: 3\n            }\n        ];\n        gridConfig.groupingSet = [\n            { title: 'Word1', field: 'word1' },\n            { title: 'Word2', field: 'word2' }\n        ];\n        gridConfig.groupingExpanded = ['Barton', 'Barton-Aida'];\n\n        this.connector.manualConfigChange();\n    }\n\n    public clear() {\n        gridConfig.groupingExpanded = [];\n        gridConfig.sortingSet = [];\n        gridConfig.groupingSet = [];\n        this.connector.manualConfigChange();\n    }\n\n    public addData(x: number) {\n        //this.data = this.data.concat(this.dummyDataGenerator.generateData(x));\n        this.connector.setData(this.dummyDataGenerator.generateData(x), true);\n    }\n\n    public render() {\n        return html`\n            <div class=\"flex flex-row\">\n                <div>\n                    <div class=\"m-1 p-1\">\n                        <button\n                            @click=${() => {\n                                this.clear();\n                            }}\n                        >\n                            clear grouping/sorting etc\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.group();\n                            }}\n                        >\n                            group\n                        </button>\n                    </div>\n\n                    <div class=\"m-1 p-1\">\n                        <button\n                            @click=${() => {\n                                this.replaceData(100);\n                            }}\n                        >\n                            set 100\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.replaceData(50);\n                            }}\n                        >\n                            set 50\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.replaceData(10);\n                            }}\n                        >\n                            set 10\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.replaceData(1);\n                            }}\n                        >\n                            set 1\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.replaceData(0);\n                            }}\n                        >\n                            set 0\n                        </button>\n                        <button\n                            @click=${() => {\n                                console.log(this.connector.edited());\n                            }}\n                        >\n                            edited\n                        </button>\n                    </div>\n                    <div class=\"m-1 p-1\">\n                        <button\n                            @click=${() => {\n                                this.addData(1);\n                            }}\n                        >\n                            add 1\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.addData(10);\n                            }}\n                        >\n                            add 10\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.addData(100);\n                            }}\n                        >\n                            add 100\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.addData(1000);\n                            }}\n                        >\n                            add 1000\n                        </button>\n                    </div>\n                    <div class=\"m-1 p-1\">\n                        <button\n                            @click=${() => {\n                                this.connector.first();\n                            }}\n                        >\n                            first\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.connector.prev();\n                            }}\n                        >\n                            prev\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.connector.select(5);\n                            }}\n                        >\n                            select row 5\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.connector.next();\n                            }}\n                        >\n                            next\n                        </button>\n                        <button\n                            @click=${() => {\n                                this.connector.last();\n                            }}\n                        >\n                            last\n                        </button>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label class=\"p-1 m-2\"\n                            >word1:\n                            <input\n                                .value=${this.entity?.word1 || ''}\n                                @change=${(e: any) => {\n                                    if (this.entity) {\n                                        this.entity.word1 = e.target.value;\n                                        this.connector.reRender();\n                                    }\n                                }}\n                        /></label>\n                        <label class=\"p-1 m-2\"\n                            >word2:\n                            <input\n                                .value=${this.entity?.word2 || ''}\n                                @change=${(e: any) => {\n                                    if (this.entity) {\n                                        this.entity.word2 = e.target.value;\n                                        this.connector.reRender();\n                                    }\n                                }}\n                        /></label>\n                        <label class=\"p-1 m-2\"\n                            >word3:\n                            <input\n                                .value=${this.entity?.word3 || ''}\n                                @change=${(e: any) => {\n                                    if (this.entity) {\n                                        this.entity.word3 = e.target.value;\n                                        this.connector.reRender();\n                                    }\n                                }}\n                        /></label>\n                    </div>\n                </div>\n                <free-grid\n                    style=\"height:700px;width:100%\"\n                    class=\"free-grid\"\n                    .interface=${this.connector}\n                >\n                </free-grid>\n            </div>\n        `;\n    }\n}\n","import './hmr';\n\nimport '@simple-html/grid/src/grid.css';\n// import main css\nimport './index.css';\n\n// import grid and its css\nimport '@simple-html/grid';\n\n// import our app\nimport './components/app-component';\n\nimport { enableInternalLogger } from '@simple-html/core';\nenableInternalLogger([\n    'FREE-GRID-ROW-GROUP',\n    'FREE-GRID-CELL-ROW',\n    'FREE-GRID-GROUP-ROW',\n    'FREE-GRID-CELL-LABEL',\n    'FREE-GRID-CELL-FILTER',\n    'FREE-GRID-ROW',\n    'FREE-GRID-GROUP-FILTER',\n    'FREE-GRID-GROUP-LABEL',\n    'FREE-GRID-PANEL',\n    'FREE-GRID-FOOTER',\n    'FREE-GRID-BODY',\n    'FREE-GRID-HEADER'\n]);\n\nconsole.log('sample-v:', 1);\n"]}