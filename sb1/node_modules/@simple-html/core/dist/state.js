import { publish } from '.';
let state = window.state || {};
const keys = new Set();
if (!window.state) {
    window.addEventListener('HMR-FUSEBOX', () => {
        window.state = state;
        console.log('HMR-FUSEBOX', window.state);
    });
}
export function getState() {
    state;
}
export function setState(newState) {
    state = newState;
}
export function stateContainer(key, defaultValue, customPublishedTrigger) {
    if (!state.hasOwnProperty(key)) {
        state[key] = defaultValue;
    }
    const currentState = state[key];
    const setter = function (value) {
        state[key] = value;
    };
    const middleware = function (value) {
        setter(value);
        publish(key, value);
    };
    return [currentState, customPublishedTrigger ? setter : middleware];
}
export function validateKey(key) {
    if (keys.has(key)) {
        throw new Error(`state key used allready, use another name`);
    }
    else {
        keys.add(key);
        return key;
    }
}
//# sourceMappingURL=state.js.map