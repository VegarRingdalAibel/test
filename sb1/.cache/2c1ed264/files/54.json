{"contents":"function initSymbolCache() {\n  if (!globalThis._LHF_SYMBOL) {\n    globalThis._LHF_SYMBOL = {};\n    globalThis._LHF_PROP_SYMBOL = {};\n  }\n}\nexports.initSymbolCache = initSymbolCache;\nfunction getObservedAttributesMapSymbol() {\n  if (!globalThis._LHF_SYMBOL.observedAttributesMap) {\n    globalThis._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\n    return globalThis._LHF_SYMBOL.observedAttributesMap;\n  } else {\n    return globalThis._LHF_SYMBOL.observedAttributesMap;\n  }\n}\nexports.getObservedAttributesMapSymbol = getObservedAttributesMapSymbol;\nfunction getObservedAttributesSymbol() {\n  if (!globalThis._LHF_SYMBOL.observedAttributes) {\n    globalThis._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\n    return globalThis._LHF_SYMBOL.observedAttributes;\n  } else {\n    return globalThis._LHF_SYMBOL.observedAttributes;\n  }\n}\nexports.getObservedAttributesSymbol = getObservedAttributesSymbol;\nfunction getPropSymbol(name) {\n  if (!globalThis._LHF_PROP_SYMBOL[name]) {\n    globalThis._LHF_PROP_SYMBOL[name] = Symbol(name);\n    return globalThis._LHF_PROP_SYMBOL[name];\n  } else {\n    return globalThis._LHF_PROP_SYMBOL[name];\n  }\n}\nexports.getPropSymbol = getPropSymbol;\nfunction getLoggerSymbol() {\n  if (!globalThis._LHF_SYMBOL.logger) {\n    globalThis._LHF_SYMBOL.logger = Symbol('logger');\n    return globalThis._LHF_SYMBOL.logger;\n  } else {\n    return globalThis._LHF_SYMBOL.logger;\n  }\n}\nexports.getLoggerSymbol = getLoggerSymbol;\nfunction getLoggerCountSymbol() {\n  if (!globalThis._LHF_SYMBOL.loggerCount) {\n    globalThis._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\n    return globalThis._LHF_SYMBOL.loggerCount;\n  } else {\n    return globalThis._LHF_SYMBOL.loggerCount;\n  }\n}\nexports.getLoggerCountSymbol = getLoggerCountSymbol;\nfunction getTransmitterSymbol() {\n  if (!globalThis._LHF_SYMBOL.transmitter) {\n    globalThis._LHF_SYMBOL.transmitter = Symbol('transmitter');\n    return globalThis._LHF_SYMBOL.transmitter;\n  } else {\n    return globalThis._LHF_SYMBOL.transmitter;\n  }\n}\nexports.getTransmitterSymbol = getTransmitterSymbol;\ninitSymbolCache();\n"}