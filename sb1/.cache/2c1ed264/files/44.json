{"contents":"exports.__esModule = true;\nvar requestRender_1 = __fusereq(50);\nvar symbols_1 = __fusereq(54);\nvar logger_1 = __fusereq(45);\nfunction attribute(options = {}) {\n  return function reg(_class, prop) {\n    Object.defineProperty(_class, prop, {\n      get: function () {\n        return this[symbols_1.getPropSymbol(this.tagName + '_' + prop)];\n      },\n      set: function (x) {\n        logger_1.logger('attribute set', this, this.tagName);\n        const oldValue = this[symbols_1.getPropSymbol(this.tagName + '_' + prop)];\n        this[symbols_1.getPropSymbol(this.tagName + '_' + prop)] = x;\n        if (this.valuesChanged && oldValue !== x) {\n          this.valuesChanged('property', prop, oldValue, x);\n        }\n        if (oldValue !== x && !options.skipRender) {\n          requestRender_1.requestRender(this);\n        }\n      },\n      configurable: true\n    });\n    const attribute = prop.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/\\s+/g, '-').toLowerCase();\n    if (!_class[symbols_1.getObservedAttributesMapSymbol()]) {\n      _class[symbols_1.getObservedAttributesMapSymbol()] = new Map();\n    }\n    _class[symbols_1.getObservedAttributesMapSymbol()].set(attribute, prop);\n    if (_class[symbols_1.getObservedAttributesSymbol()]) {\n      _class[symbols_1.getObservedAttributesSymbol()].push(attribute);\n    } else {\n      _class[symbols_1.getObservedAttributesSymbol()] = [];\n      _class[symbols_1.getObservedAttributesSymbol()].push(attribute);\n    }\n  };\n}\nexports.attribute = attribute;\n"}