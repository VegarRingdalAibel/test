{"contents":"var __fuse_decorate = __fusereq(10);\nexports.__esModule = true;\nvar core_1 = __fusereq(42);\nvar lit_html_1 = __fusereq(11);\nvar viewState_1 = __fusereq(53);\nvar getElementMarkup_1 = __fusereq(13);\nlet __DefaultExport__ = class __DefaultExport__ extends HTMLElement {\n  constructor() {\n    super(...arguments);\n    this.elements = ['sample-default', 'sample-no1', 'sample-no2', 'sample-no3', 'sample-no4'];\n  }\n  connectedCallback() {\n    viewState_1.connectViewState(this, this.render);\n  }\n  render() {\n    const [view, setView] = viewState_1.viewState('element-default');\n    return lit_html_1.html`<section class=\"flex flex-row flex-grow h-full\">\r\n            <div class=\"bg-gray-200 flex flex-col\">\r\n                ${this.elements.map(element => {\n      return lit_html_1.html`<button\r\n                        class=\"p-2 m-2 bg-indigo-300\"\r\n                        @click=${() => setView(element)}\r\n                    >\r\n                        ${element}\r\n                    </button>`;\n    })}\r\n            </div>\r\n            <div class=\"bg-gray-300 flex-grow h-full p-2\">${getElementMarkup_1.getElementMarkup(view)}</div>\r\n        </section>`;\n  }\n};\n__DefaultExport__ = __fuse_decorate.d([core_1.customElement('app-root')], __DefaultExport__);\nexports.default = __DefaultExport__;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/elements/app-root.ts\"],\"names\":[\"HTMLElement\",\"elements\",\"connectedCallback\",\"viewState_1\",\"render\",\"view\",\"setView\",\"lit_html_1\",\"map\",\"element\",\"getElementMarkup_1\",\"core_1\"],\"mappings\":\";;;;;;wBAMe,gCAAcA;;;SACzBC,YAAY,kBAAkB,cAAc,cAAc,cAAc;;EAExEC;IACIC,6BAAiB,MAAM,KAAKC;;EAGhCA;WACWC,MAAMC,WAAWH,sBAAU;WAC3BI;;oJAEG,KAAKN,SAASO,IAAI,AAACC;aACVF;;8HAEM,MAAMD,QAAQG;;wMAErBA;;;;yFAIkCC,oCAAiBL;;;;uCArB5EM,qBAAc\",\"sourcesContent\":[\"import { customElement } from '@simple-html/core';\\r\\nimport { html } from 'lit-html';\\r\\nimport { connectViewState, viewState } from '../state/viewState';\\r\\nimport { getElementMarkup } from './getElementMarkup';\\r\\n\\r\\n@customElement('app-root')\\r\\nexport default class extends HTMLElement {\\r\\n    elements = ['sample-default', 'sample-no1', 'sample-no2', 'sample-no3', 'sample-no4'];\\r\\n\\r\\n    connectedCallback() {\\r\\n        connectViewState(this, this.render);\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const [view, setView] = viewState('element-default');\\r\\n        return html`<section class=\\\"flex flex-row flex-grow h-full\\\">\\r\\n            <div class=\\\"bg-gray-200 flex flex-col\\\">\\r\\n                ${this.elements.map((element) => {\\r\\n                    return html`<button\\r\\n                        class=\\\"p-2 m-2 bg-indigo-300\\\"\\r\\n                        @click=${() => setView(element)}\\r\\n                    >\\r\\n                        ${element}\\r\\n                    </button>`;\\r\\n                })}\\r\\n            </div>\\r\\n            <div class=\\\"bg-gray-300 flex-grow h-full p-2\\\">${getElementMarkup(view)}</div>\\r\\n        </section>`;\\r\\n    }\\r\\n}\\r\\n\"]}"}