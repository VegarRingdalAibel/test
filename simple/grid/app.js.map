{"version":3,"sources":["samples/grid/fuseHmrPlugin.ts","packages/core/src/symbols.ts","packages/core/src/prop.ts","packages/core/src/logger.ts","packages/core/src/requestRender.ts","packages/core/src/property.ts","packages/core/src/customElement.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/disconnectedCallback.ts","packages/core/src/attribute.ts","packages/core/src/index.ts","packages/datasource/src/entity.ts","packages/datasource/src/types.ts","packages/datasource/src/dataContainer.ts","packages/datasource/src/dataSource.ts","packages/datasource/src/index.ts","packages/grid/src/types.ts","packages/grid/src/gridInterface.ts","packages/grid/src/elements/updateRowCache.ts","packages/grid/src/elements/simple-html-grid-body.ts","packages/grid/src/elements/generateMenuWithComponentName.ts","packages/grid/src/elements/simple-html-grid-cell-filter.ts","packages/grid/src/elements/simple-html-grid-group-row.ts","packages/grid/src/elements/simple-html-grid-group-filter.ts","packages/grid/src/elements/simple-html-grid-footer.ts","packages/grid/src/elements/simple-html-grid-header.ts","packages/grid/src/elements/simple-html-grid-panel.ts","packages/grid/src/elements/simple-html-grid-row.ts","packages/grid/src/elements/simple-html-grid-menu-row.ts","packages/grid/src/elements/simple-html-grid-group-label.ts","packages/grid/src/elements/simple-html-grid-row-group.ts","packages/grid/src/elements/simple-html-grid-menu-label.ts","packages/grid/src/elements/simple-html-grid-menu-filter.ts","packages/grid/src/elements/simple-html-grid-menu-panel.ts","packages/grid/src/elements/simple-html-grid-menu-custom.ts","packages/grid/src/elements/dragEvent.ts","packages/grid/src/elements/simple-html-grid-column-chooser.ts","packages/grid/src/elements/scrollEvent.ts","packages/grid/src/elements/simple-html-grid-cell-row.ts","packages/grid/src/elements/resizeColumnElement.ts","packages/grid/src/elements/sorticonElement.ts","packages/grid/src/elements/simple-html-grid-cell-label.ts","packages/grid/src/elements/generateMenu.ts","packages/grid/src/elements/filterDialogCondition/deleteBtn.ts","packages/grid/src/elements/filterDialogCondition/valueInput.ts","packages/grid/src/elements/filterDialogCondition/selectAttributeOrInputBtn.ts","packages/grid/src/elements/filterDialogCondition/selectAttributesBtn.ts","packages/grid/src/elements/filterDialogCondition/selectOperatorBtn.ts","packages/grid/src/elements/filterDialogCondition/filterDialogConditionTemplate.ts","packages/grid/src/elements/filterDialogGroupTemplate.ts","packages/grid/src/elements/simple-html-grid-filter-dialog.ts","packages/grid/src/elements/generate.ts","packages/grid/src/elements/simple-html-grid.ts","packages/grid/src/index.ts","samples/grid/gridSetup/setup.ts","samples/grid/data/dummyData.ts","samples/grid/data/generator.ts","samples/grid/data/datasources.ts","samples/grid/elements/sample-no1.ts","samples/grid/elements/sample-no2.ts","samples/grid/elements/sample-no3.ts","samples/grid/elements/sample-no4.ts","samples/grid/elements/data-buttons.ts","samples/grid/elements/nav-buttons.ts","samples/grid/elements/sample-default.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/createRouteRegex.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/getVariableName.ts","packages/router/src/isVariable.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/gotoURL.ts","packages/router/src/getUrlVars.ts","packages/router/src/getVariables.ts","packages/router/src/getRouteParams.ts","packages/router/src/index.ts","samples/grid/elements/app-root.ts","samples/grid/hmr.ts","samples/grid/index.ts","packages/datasource/src/objectFilter.ts","packages/datasource/src/filter.ts","packages/datasource/src/sort.ts","packages/datasource/src/grouping.ts","packages/datasource/src/selection.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","_class","prop","Object","defineProperty","get","symbols_1","tagName","set","x","configurable","log","skipElements","WeakMap","skip","context","map","has","count","ctx","tag","indexOf","id","getID","registerLoggerContext","text","Math","floor","length","idOnly","y","console","Array","join","isConnected","__wait","requestAnimationFrame","Promise","resolve","render","options","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","elementName","extended","elementClass","value","prototype","isArray","concat","Base","constructor","renderCalled","call","result","template","then","templates","lit_html_1","eventContext","updated","connectedCallback","register","callers","push","disconnectedCallback","forEach","attributeChangedCallback","newValue","attribute","replace","toLowerCase","Map","nameProp","customElements","define","hmrCache","channel","args","i","len","func","apply","setTimeout","events","filter","event","state","keys","Set","addEventListener","newState","obj","part","assign","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","keyString","__editedProps","__originalValues","__currentValues","__newprops","__edited","__KEYSTRING","target","update","EQUAL","LESS_THAN_OR_EQUAL_TO","GREATER_THAN_OR_EQUAL_TO","LESS_THAN","GREATER_THAN","CONTAINS","NOT_EQUAL_TO","DOES_NOT_CONTAIN","BEGIN_WITH","END_WITH","IN","globalKeyCount","UniqueKeyAttribute","__collection","__keyAttribute","EntityHandler","entity_1","overrideEntityHandler","entityHandler","type","getKey","exports","getDataSet","slice","lenght","removeData","data","all","removed","d","splice","setData","from","o","__controller","Proxy","entity","__KEY","dataContainer","__collectionFiltered","__collectionDisplayed","__selectionMode","__listeners","currentEntity","__dataContainer","dataContainer_1","selectionMode","__selection","selection_1","__filter","filter_1","__sorting","sort_1","__grouping","grouping_1","getAllData","__select","row","__callSubscribers","reRunFilter","__internalUpdate","added","getFilter","lastSort","getLastSort","runOrderBy","getGrouping","group","sort","setOrderBy","sortingAttributes","getOrderBy","col","sortingAttributesOrder","ascending","reset","sortIndex","groupings","ObjFilter","setFilter","logicalOperator","filterArguments","removeGroup","oldGroupIndex","expandGroup","expandOneOrAll","collapseGroup","collapseOneOrAll","keeping","callable","keep","handleEvent","addEventListner","removeEventListner","delete","onlyDataRows","getSelectionMode","setSelectionMode","mode","getRow","rowNo","getRows","select","highlightRow","selectFirst","selectPrev","selectNext","selectLast","setLocalCompare","code","setLocaleCompare","resetSort","defaultSortAttribute","param","setGrouping","setExpanded","getExpanded","getSelection","sortReset","getFilterFromType","reloadDatasource","getFilterString","parser","queryString","operator","types_1","valueType","val","split","config","datasource","__subscribers","__handleEvent","__ds","datasource_1","__CONFIG","parseConfig","completeDataset","filteredDataset","displayedDataset","getDatasource","_event","__SimpleHtmlGrid","triggerEvent","groupingSet","groupingExpanded","sortingSet","resetRowCache","dataSourceUpdated","reRender","cellheight","groups","rows","_c","__cellRows","__rowHeight","cellHeight","totalWidth","reduce","agg","element","__left","width","__rowWidth","manualConfigChange","__updateSortConfig","__SCROLL_TOPS","__SCROLL_HEIGHTS","__SCROLL_HEIGHT","cell","ent","height","__group","getScrollVars","edited","publishEvent","groupingCallback","newGrouping","g","title","header","clearConfigSort","flatMap","filterCallback","filterable","currentValue","Date","valueAsDate","valueAsNumber","indeterminate","checked","columns","f","undefined","attributeType","configColumns","sortable","sortAscending","sortNo","attributes","sorting","index","sortCallback","shiftKey","exist","el","groupExpand","groupCollapse","connectGrid","SimpleHtmlGrid","disconnectGrid","getCurrentFilter","setCurrentFilter","isSelected","e","currentRow","getSelectedRows","setReadOnlyState","readonly","setScroll","node","getElementsByTagName","scrollTop","connector","rowPositionCache","ref","newTopPosition","rowTopState","checkValue","rowFound","newRow","HTMLElement","firstLoad","classList","style","top","panelHeight","bottom","footerHeight","removeEventListener","lastScrollTop","scrollLeft","core_1","menu","document","createElement","clientY","documentElement","left","clientX","rowData","body","appendChild","cellPosition","coltype","placeholder","t","opacity","beforeFilterCallbackFn","auto","enterKeyDown","keycode","keyCode","which","boolstyle","setState","classname","change","editEventType","input","contentMenu","button","generateMenuWithComponentName_1","renderFilterCallBackFn","preventDefault","grouping","curleft","display","showEdit","totalRows","mouseEnter","getElementsByClassName","remove","mouseLeave","click","transform","rowClick","dataClip","removeSelf","_type","navigator","clipboard","writeText","err","error","readText","pasteIntoCells","removeChild","allowCopyPaste","changeGrouping","__groupExpanded","__groupID","defaultMarkup","__groupName","__groupTotal","__groupLvl","asc","noToggle","allowGrouping","optionalCells","groupNo","clearAll","callback","dragCell","dragGroup","dragColumnBlock","delayDragEventTimer","_connector","drop","_e","_cell","_group","mouseUp","mouseMove","clearTimeout","textContent","daCell","doCell","toggle","up","oldGroupI","oldRowI","r","optionsCells","newGroupI","newRowI","mousedown","dragEvent_1","scrollBarTimer","activeElement","blur","scrolltop","scrollbars","abs","updateRowCache_1","updateCallback","beforeEditCallbackFn","autoUpdateData","afterEditCallbackFn","renderRowCallBackFn","disabled","originX","originalColumnWidth","movment","screenX","movementX","newColumnWidth","interface","mouseDown","ascTemplate","descTemplate","capalize","toUpperCase","substring","label","mouseup","beforeSortCallbackFn","mouseenter","mouseleave","renderLabelCallBackFn","sorticonElement_1","resizeColumnElement_1","getComputedStyle","getPropertyValue","disableDragDrop","operatorObjectArr","operatorObject","pop","isValue","generateMenu_1","filterAttributes","level","filterDialogGroupTemplate_1","selectAttributesBtn_1","selectOperatorBtn_1","valueInput_1","selectAttributeOrInputBtn_1","deleteBtn_1","parent","filterDialogConditionTemplate_1","scroll","scrollEvent_1","enter","leave","rowCache","__DATASOURCE_INTERFACE","cleanup","generate_1","eventName","bubbles","detail","clientHeight","rowsNeeded","round","cacheLength","l","missingLength","setup","word","x4","random","totalGenerated","internalDataArray","generateData","no","dummyArray","x1","x2","x3","date","setDate","getDate","mod","number","bool","generator","generator_1","EntityHandlerOverride","ds","howMany","setup_1","grid_1","datasources_1","action","query","connector1","connector2","ds1","ds2","btnClass","pathPattern","openEnd","regex","pattern","PATH_SLASH_REGEX_1","path","urlPattern","paths","pathsConfig","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","hash","locationhash","location","parseUrlPattern_1","regexString","createRouteRegex_1","RegExp","test","promise","htmlTemplate","setValue","commit","importStatement","routeMatch_1","params","substr","urls","newUrl","urlparams","URLSearchParams","k","append","toString","string","vars","_m","_paths","_query","getUrlVars_1","getVariables_1","HASH_RENDER_EVENT","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","oldhash","isBackEvent","hashChange","cleanUp","elements","router_1","innerHTML","custom_elements_hmr_polyfill_1","NONE","rowValue","filterValue","filterOperator","newFilterOperator","Number","typeBool","true","false","toISOString","isNaN","charAt","currentFilter","objArray","resultArray","andStatement","orStatement","values","temp","objectFilter_1","lastSorting","currentSorting","localeCompareCode","Intl","Collator","overrideSort","array","thisSort","obj1","obj2","currentObj","v1","v2","localCompare","resultLocale","compare","localeCompare","groupingConfig","expandedGroupIDs","currentGroups","arrayToGroup","keepExpanded","groupBy","mainGroup","createMainGrouping","childGroupArray","newSubGroup","groupChildren","toUppercase","collection","mainGroups","traverseSubGroups","__groupChildren","subGroup","traverseSubGroup","tempGroupArray","curGroup","lastGroupID","groupID","tempValue","rebuiltChildrenArray","child","gidc","dataSource","selectedRows","selection","getRowKey","deSelectAll","clear","size","isSel","currentselectedRows","currentKeyKode","lastRowSelected","lastKeyKodeUsed","ctrlKey","deSelect","oldSel","selectRange","newSel","setSelectedRows","getRowKeys","start","end","newRows"],"mappings":"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MAAM,KAAKpD,MAAM,KAAOoD,MAAM,KAAKpD,MAAM;YAC9DoD,MAAM,KAAKpD,MAAM;UACjBrB,EAAE0D;YACEsO,QAAQ;YACRjO,WAAW;YACXgE,MAAM;YACNqK;YACAY;;;UAGJhT,EAAE0D;YACEsO,QAAQ;YACRsC,UAAU;YACVvQ,WAAW;YACXgE,MAAM;YACNqK;YACAY;;;;QAIRhT,EAAE0D;UACEsO,QAAQ,SAASoO;UACjBrc,WAAW,SAASqc;UACpBhO;UACAY;UACAgH,eAAe;;;;UAIrBqG,KAAKpf,KAAKC,MAAMD,KAAKqf,WAAW,OAAO;IAC7CH,MAAMhQ,OAAOzM;MAAOoN,OAAOuP;MAAIjQ,MAAMpQ;;;SAElCmgB;;;;;;;;;gBChDP,QACA,eACA,MACA,cACA,UACA,UACA,MACA,gBACA,SACA,SACA,MACA,eACA,QACA,UACA,MACA,WACA,WACA,SACA,MACA,gBACA,SACA,SACA,MACA,gBACA,SACA,SACA,MACA,SACA,UACA,QACA,MACA,cACA,aACA,WACA,MACA,kBACA,OACA,SACA,MACA,mBACA,WACA,UACA,MACA,iBACA,WACA,YACA,MACA,cACA,SACA,SACA,MACA,YACA,QACA,WACA,MACA,oBACA,QACA,WACA,MACA,kBACA,UACA,YACA,MACA,cACA,SACA,WACA,MACA,YACA,aACA,UACA,MACA,eACA,WACA,YACA,MACA,iBACA,YACA,UACA,MACA,QACA,WACA,aACA,MACA,cACA,WACA,WACA,MACA,eACA,QACA,eACA,MACA,YACA,YACA,UACA,MACA,QACA,WACA,aACA,MACA,eACA,QACA,cACA,MACA,kBACA,UACA,YACA,MACA,cACA,OACA,UACA,MACA,gBACA,QACA,aACA,MACA,YACA,WACA,WACA,MACA,YACA,SACA,QACA,MACA,eACA,SACA,UACA,MACA,SACA,cACA,eACA,MACA,cACA,SACA,SACA,MACA,cACA,aACA,cACA,MACA,WACA,WACA,SACA,MACA,eACA,UACA,UACA,MACA,WACA,aACA,YACA,MACA,mBACA,WACA,YACA,MACA,YACA,SACA,WACA,MACA,kBACA,SACA,QACA,MACA,cACA,SACA,UACA,MACA,UACA,QACA,UACA,MACA,YACA,SACA,SACA,MACA,aACA,QACA,WACA,MACA,mBACA,UACA,WACA,MACA,gBACA,UACA,QACA,MACA,aACA,SACA,cACA,MACA,SACA,UACA,WACA,MACA,YACA,eACA,YACA,MACA,YACA,QACA,UACA,MACA,WACA,UACA,UACA,MACA,eACA,UACA,WACA,MACA,eACA,SACA,aACA,MACA,aACA,gBACA,UACA,MACA,WACA,SACA,UACA,MACA,eACA,aACA,aACA,MACA,cACA,QACA,UACA,MACA,UACA,QACA,QACA,MACA,qBACA,QACA,YACA,MACA,kBACA,SACA,UACA,MACA,mBACA,QACA,SACA,MACA,eACA,SACA,aACA,MACA,eACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,UACA,SACA,SACA,MACA,cACA,SACA,SACA,MACA,YACA,SACA,QACA,MACA,iBACA,UACA,cACA,MACA,SACA,WACA,YACA,MACA,kBACA,SACA,UACA,MACA,cACA,UACA,UACA,MACA,YACA,QACA,aACA,MACA,WACA,UACA,SACA,MACA,eACA,UACA,WACA,MACA,aACA,SACA,UACA,MACA,aACA,SACA,WACA,MACA,gBACA,OACA,UACA,MACA,kBACA,UACA,UACA,MACA,YACA,UACA,UACA,MACA,kBACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,mBACA,SACA,UACA,MACA,aACA,OACA,eACA,MACA,YACA,UACA,YACA,MACA,cACA,SACA,YACA,MACA,cACA,UACA,YACA,MACA,iBACA,SACA,WACA,MACA,cACA,YACA,UACA,MACA,mBACA,QACA,WACA,MACA,YACA,WACA,YACA,MACA,aACA,UACA,SACA,MACA,eACA,UACA,aACA,MACA,eACA,UACA,SACA,MACA,aACA,QACA,WACA,MACA,aACA,UACA,UACA,MACA,eACA,SACA,YACA,MACA,mBACA,SACA,SACA,MACA,kBACA,UACA,SACA,MACA,aACA,UACA,SACA,MACA,WACA,SACA,aACA,MACA,eACA,YACA,WACA,MACA,qBACA,UACA,WACA,MACA,eACA,WACA,UACA,MACA,oBACA,SACA,UACA,MACA,aACA,QACA,SACA,MACA,qBACA,UACA,YACA,MACA,YACA,eACA,QACA,MACA,aACA,YACA,WACA,MACA,cACA,SACA,WACA,MACA,eACA,SACA,SACA,MACA,WACA,WACA,WACA,MACA,cACA,QACA,YACA,MACA,eACA,aACA,SACA,MACA,aACA,UACA,QACA,MACA,YACA,UACA,UACA,MACA,mBACA,UACA,aACA,MACA,YACA,SACA,WACA,MACA,YACA,SACA,aACA,MACA,cACA,SACA,WACA,MACA,aACA,UACA,SACA,MACA,cACA,WACA,WACA,MACA,cACA,QACA,UACA,MACA,aACA,SACA,UACA,MACA,cACA,SACA,WACA,MACA,UACA,SACA,YACA,MACA,aACA,QACA,SACA,MACA,eACA,cACA,UACA,MACA,kBACA,QACA,WACA,MACA,YACA,QACA,UACA,MACA,eACA,aACA,aACA,MACA,YACA,SACA,WACA,MACA,aACA,aACA,UACA,MACA,aACA,QACA,aACA,MACA,gBACA,SACA,eACA,MACA,YACA,WACA,aACA,MACA,cACA,OACA,UACA,MACA,gBACA,YACA,cACA,MACA,kBACA,SACA,aACA,MACA,WACA,UACA,YACA,MACA,SACA,WACA,WACA,MACA,aACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,mBACA,UACA,YACA,MACA,WACA,QACA,YACA,MACA,eACA,UACA,SACA,MACA,gBACA,UACA,aACA,MACA,YACA,WACA,aACA,MACA,aACA,YACA,WACA,MACA,eACA,UACA,cACA,MACA,cACA,UACA,gBACA,MACA,gBACA,UACA,QACA,MACA,cACA,UACA,WACA,MACA,UACA,UACA,cACA,MACA,qBACA,QACA,WACA,MACA,UACA,WACA,cACA,MACA,gBACA,SACA,YACA,MACA,gBACA,QACA,YACA,MACA,gBACA,QACA,UACA,MACA,OACA,YACA,UACA,MACA,kBACA,YACA,aACA,MACA,gBACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,YACA,SACA,WACA,MACA,aACA,SACA,aACA,MACA,WACA,YACA,aACA,MACA,cACA,YACA,SACA,MACA,cACA,OACA,YACA,MACA,sBACA,UACA,SACA,MACA,cACA,WACA,UACA,MACA,sBACA,UACA,UACA,MACA,mBACA,SACA,WACA,MACA,iBACA,QACA,UACA,MACA,cACA,SACA,aACA,MACA,cACA,SACA,aACA,MACA,cACA,OACA,UACA,MACA,sBACA,cACA,UACA,MACA,eACA,QACA,UACA,MACA,gBACA,WACA,WACA,MACA,aACA,SACA,UACA,MACA,WACA,UACA,eACA,MACA,YACA,SACA,YACA,MACA,WACA,SACA,WACA,MACA,YACA,aACA,YACA,MACA,OACA,UACA,WACA,MACA,kBACA,UACA,UACA,MACA,YACA,YACA,aACA,MACA,cACA,UACA,aACA,MACA,eACA,UACA,QACA,MACA,WACA,SACA,cACA,MACA,UACA,aACA,YACA,MACA,YACA,SACA,UACA,MACA,cACA,SACA,aACA,MACA,gBACA,SACA,UACA,MACA,kBACA,UACA,SACA,MACA,eACA,UACA,UACA,MACA,iBACA,QACA,YACA,MACA,YACA,WACA,UACA,MACA,qBACA,WACA,WACA,MACA,cACA,UACA,YACA,MACA,WACA,OACA,WACA,MACA,cACA,SACA,UACA,MACA,gBACA,QACA,UACA,MACA,aACA,SACA,UACA,MACA,YACA,WACA,WACA,MACA,eACA,YACA,UACA,MACA,gBACA,SACA,aACA,MACA,cACA,QACA,SACA,MACA,gBACA,UACA,aACA,MACA,cACA,WACA,cACA,MACA,aACA,cACA,YACA,MACA,WACA,WACA,WACA,MACA,aACA,OACA,WACA,MACA,iBACA,SACA,UACA,MACA,wBACA,QACA,WACA,MACA,cACA,WACA,cACA,MACA,iBACA,SACA,UACA,MACA,oBACA,aACA,SACA,MACA,aACA,YACA,aACA,MACA,kBACA,SACA,WACA,MACA,cACA,SACA,YACA,MACA,oBACA,QACA,UACA,MACA,iBACA,QACA,YACA,MACA,cACA,SACA,YACA,MACA,aACA,UACA,WACA,MACA,YACA,UACA,UACA,MACA,aACA,WACA,cACA,MACA,SACA,UACA,QACA,MACA,cACA,SACA,cACA,MACA,aACA,UACA,YACA,MACA,UACA,SACA,SACA,MACA,cACA,UACA,QACA,MACA,YACA,UACA,WACA,MACA,oBACA,OACA,UACA,MACA,qBACA,QACA,cACA,MACA,eACA,SACA,aACA,MACA,cACA,WACA,WACA,MACA,gBACA,YACA,QACA,MACA,YACA,WACA,WACA,MACA,aACA,YACA,SACA,MACA,cACA,WACA,UACA,MACA,aACA,aACA,UACA,MACA,2BACA,SACA,UACA,MACA,kBACA,aACA,aACA,MACA,eACA,YACA,UACA,MACA,YACA,QACA,QACA,MACA,qBACA,UACA,aACA,MACA,gBACA,SACA,WACA,MACA,eACA,SACA,yBACA,MACA,aACA,UACA,YACA,MACA,cACA,UACA,eACA,MACA,kBACA,YACA,UACA,MACA,qBACA,WACA,YACA,MACA,mBACA,SACA,cACA,MACA,YACA,WACA,UACA,MACA,kBACA,UACA,UACA,MACA,cACA,WACA,WACA,MACA,aACA,SACA,YACA,MACA,YACA,aACA,SACA,MACA,oBACA,SACA,SACA,MACA,cACA,WACA,WACA,MACA,cACA,UACA,WACA,MACA,WACA,YACA,SACA,MACA,kBACA,WACA,aACA,MACA,YACA,aACA,UACA,MACA,kBACA,YACA,WACA,MACA,YACA,OACA,UACA,MACA,gBACA,OACA,WACA,MACA,cACA,UACA,UACA,MACA,gBACA,UACA,SACA,MACA,YACA,UACA,SACA,MACA,cACA,YACA,UACA,MACA,gBACA,UACA,YACA,MACA,aACA,SACA,UACA,MACA,iBACA,UACA,UACA,MACA,aACA,UACA,UACA,MACA,eACA,WACA,UACA,MACA,UACA,OACA,aACA,MACA,eACA,QACA,SACA,MACA,kBACA,WACA,cACA,MACA,oBACA,QACA,WACA,MACA,kBACA,OACA,YACA,MACA,WACA,SACA,SACA,MACA,WACA,UACA,YACA,MACA,YACA,UACA,QACA,MACA,cACA,SACA,iBACA,MACA,kBACA,UACA,UACA,MACA,gBACA,YACA,QACA,MACA,oBACA,WACA,WACA,MACA,YACA,UACA,YACA,MACA,aACA,YACA,cACA,MACA,iBACA,UACA,UACA,MACA,iBACA,YACA,QACA,MACA,WACA,QACA,aACA,MACA,cACA,UACA,YACA,MACA,YACA,UACA,QACA,MACA,cACA,QACA,WACA,MACA,mBACA,QACA,WACA,MACA,gBACA,QACA,UACA,MACA,cACA,WACA,WACA,MACA,aACA,SACA,UACA,MACA,eACA,SACA,aACA,MACA,WACA,SACA,eACA,MACA,WACA,SACA,UACA,MACA,UACA,UACA,OACA,MACA,aACA,SACA,YACA,MACA,gBACA,OACA,aACA,MACA,eACA,QACA,UACA,MACA,kBACA,SACA,SACA,MACA,gBACA,SACA,cACA,MACA,UACA,SACA,SACA,MACA,YACA,SACA,aACA,MACA,cACA,WACA,YACA,MACA,kBACA,UACA,WACA,MACA,kBACA,UACA,cACA,MACA,cACA,UACA,QACA,MACA,eACA,QACA,YACA,MACA,aACA,YACA,SACA,MACA,YACA,UACA,SACA,MACA,aACA,WACA,SACA,MACA,iBACA,SACA,UACA,MACA,YACA,UACA,UACA,MACA,SACA,SACA,cACA,MACA,YACA,SACA,SACA,MACA,kBACA,SACA,YACA,MACA,oBACA,aACA,YACA,MACA,aACA,WACA,SACA,MACA,eACA,YACA,aACA,MACA,eACA,WACA,WACA,MACA,YACA,WACA,gBACA,MACA,aACA,QACA,WACA,MACA,QACA,cACA,aACA,MACA,qBACA,UACA,YACA,MACA,aACA,UACA,UACA,MACA,iBACA,YACA,UACA,MACA,UACA,YACA,cACA,MACA,aACA,WACA,SACA,MACA,aACA,WACA,UACA,MACA,WACA,SACA,WACA,MACA,gBACA,SACA,WACA,MACA,aACA,QACA,YACA,MACA,eACA,UACA,UACA,MACA,gBACA,SACA,gBACA,MACA,kBACA,WACA,aACA,MACA,aACA,OACA,UACA,MACA,uBACA,YACA,WACA,MACA,SACA,WACA,eACA,MACA,YACA,WACA,QACA,MACA,UACA,UACA,eACA,MACA,eACA,aACA,QACA,MACA,cACA,YACA,WACA,MACA,mBACA,WACA,WACA,MACA,YACA,aACA,QACA,MACA,kBACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,gBACA,SACA,aACA,MACA,mBACA,WACA,YACA,MACA,YACA,WACA,YACA,MACA,aACA,UACA,YACA,MACA,cACA,SACA,UACA,MACA,oBACA,WACA,cACA,MACA,SACA,SACA,WACA,MACA,YACA,SACA,aACA,MACA,cACA,QACA,aACA,MACA,cACA,YACA,QACA,MACA,cACA,YACA,cACA,MACA,gBACA,YACA,SACA,MACA,sBACA,UACA,SACA,MACA,gBACA,UACA,SACA,MACA,iBACA,QACA,YACA,MACA,eACA,SACA,OACA,MACA,aACA,WACA,UACA,MACA,WACA,QACA,SACA,MACA,kBACA,UACA,eACA,MACA,kBACA,QACA,SACA,MACA,cACA,QACA,QACA,MACA,YACA,SACA,UACA,MACA,cACA,SACA,UACA,MACA,iBACA,UACA,QACA,MACA,eACA,WACA,SACA,MACA,qBACA,WACA,YACA,MACA,YACA,SACA,UACA,MACA,YACA,SACA,SACA,MACA,gBACA,QACA,YACA,MACA,aACA,SACA,UACA,MACA,eACA,UACA,cACA,MACA,gBACA,QACA,WACA,MACA,oBACA,QACA,WACA,MACA,YACA,SACA,WACA,MACA,YACA,OACA,cACA,MACA,kBACA,UACA,aACA,MACA,mBACA,QACA,aACA,MACA,kBACA,YACA,aACA,MACA,aACA,YACA,WACA,MACA,aACA,YACA,UACA,MACA,aACA,WACA,aACA,MACA,cACA,YACA,UACA,MACA,kBACA,UACA,QACA,MACA,eACA,eACA,SACA,MACA,mBACA,UACA,UACA,MACA,YACA,SACA,UACA,MACA,qBACA,SACA,UACA,MACA,YACA,WACA,YACA,MACA,iBACA,UACA,WACA,MACA,YACA,UACA,WACA,MACA,WACA,SACA,QACA,MACA,aACA,QACA,WACA,MACA,YACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,OACA,OACA,WACA,MACA,aACA,QACA,QACA,MACA,iBACA,SACA,YACA,MACA,eACA,UACA,aACA,MACA,SACA,SACA,SACA,MACA,eACA,SACA,WACA,MACA,WACA,UACA,UACA,MACA,kBACA,aACA,OACA,MACA,WACA,UACA,UACA,MACA,eACA,UACA,UACA,MACA,iBACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,iBACA,WACA,SACA,MACA,WACA,SACA,QACA,MACA,WACA,QACA,QACA,MACA,aACA,WACA,QACA,MACA,YACA,cACA,QACA,MACA,aACA,WACA,SACA,MACA,aACA,OACA,WACA,MACA,UACA,SACA,WACA,MACA,YACA,UACA,UACA,MACA,UACA,YACA,UACA,MACA,aACA,YACA,YACA,MACA,kBACA,WACA,eACA,MACA,WACA,UACA,cACA,MACA,gBACA,OACA,WACA,MACA,UACA,OACA,WACA,MACA,iBACA,QACA,SACA,MACA,eACA,WACA,YACA,MACA,cACA,SACA,YACA,MACA,aACA,SACA,YACA,MACA,gBACA,OACA,WACA,MACA,WACA,aACA,aACA,MACA,aACA,SACA,UACA,MACA,UACA,SACA,WACA,MACA,cACA,YACA,UACA,MACA,eACA,QACA,WACA,MACA,SACA,UACA,YACA,MACA,qBACA,QACA,WACA,MACA,gBACA,YACA,YACA,MACA,uBACA,eACA,SACA,MACA,gBACA,YACA,aACA,MACA,kBACA,QACA,SACA,MACA,kBACA,SACA,YACA,MACA,WACA,WACA,aACA,MACA,UACA,QACA,QACA,MACA,aACA,YACA,UACA,MACA,mBACA,SACA,WACA,MACA,eACA,UACA,UACA,MACA,WACA,WACA,aACA,MACA,eACA,SACA,eACA,MACA,aACA,OACA,SACA,MACA,iBACA,WACA,YACA,MACA,WACA,UACA,WACA,MACA,sBACA,aACA,SACA,MACA,eACA,UACA,WACA,MACA,YACA,QACA,QACA,MACA,qBACA,QACA,aACA,MACA,eACA,QACA,UACA,MACA,iBACA,WACA,WACA,MACA,kBACA,UACA,WACA,MACA,YACA,OACA,UACA,MACA,eACA,YACA,UACA,MACA,YACA,SACA,WACA,MACA,gBACA,WACA,UACA,MACA,YACA,SACA,UACA,MACA,aACA,WACA,YACA,MACA,gBACA,WACA,QACA,MACA,eACA,UACA,YACA,MACA,iBACA,YACA,WACA,MACA,cACA,QACA,UACA,MACA,aACA,WACA,WACA,MACA,cACA,SACA,SACA,MACA,cACA,WACA,aACA,MACA,aACA,UACA,WACA,MACA,iBACA,QACA,YACA,MACA,cACA,YACA,QACA,MACA,SACA,OACA,UACA,MACA,mBACA,SACA,UACA,MACA,cACA,QACA,WACA,MACA,aACA,OACA,aACA,MACA,eACA,YACA,aACA,MACA,WACA,UACA,OACA,MACA,gBACA,UACA,YACA,MACA,eACA,YACA,SACA,MACA,eACA,MACA,aACA,MACA,gBACA,WACA,YACA,MACA,YACA,UACA,SACA,MACA,YACA,WACA,SACA,MACA,gBACA,WACA,UACA,MACA,WACA,QACA,WACA,MACA,iBACA,UACA,UACA,MACA,eACA,SACA,aACA,MACA,cACA,YACA,cACA,MACA,kBACA,OACA,WACA,MACA,iBACA,WACA,YACA,MACA,aACA,SACA,WACA,MACA,YACA,QACA,UACA,MACA,YACA,UACA,WACA,MACA,WACA,aACA,aACA,MACA,cACA,SACA,SACA,MACA,WACA,UACA,WACA,MACA,eACA,UACA,QACA,MACA,gBACA,SACA,WACA,MACA,kBACA,WACA,UACA,MACA,kBACA,SACA,SACA,MACA,gBACA,cACA,cACA,MACA,gBACA,SACA,UACA,MACA,aACA,UACA,UACA,MACA,eACA,SACA,YACA,MACA,WACA,QACA,UACA,MACA,cACA,UACA,QACA,MACA,YACA,SACA,YACA,MACA,gBACA,aACA,WACA,MACA,kBACA,UACA,YACA,MACA,cACA,aACA,WACA,MACA,qBACA,YACA,UACA,MACA,UACA,SACA,SACA,MACA,eACA,SACA,UACA,MACA,kBACA,SACA,YACA,MACA,kBACA,YACA,SACA,MACA,aACA,UACA,SACA,MACA,eACA,QACA,QACA,MACA,iBACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,WACA,UACA,YACA,MACA,aACA,SACA,UACA,MACA,uBACA,UACA,YACA,MACA,eACA,SACA,WACA,MACA,eACA,UACA,YACA,MACA,gBACA,SACA,WACA,MACA,SACA,aACA,SACA,MACA,gBACA,SACA,UACA,MACA,gBACA,aACA,UACA,MACA,cACA,WACA,UACA,MACA,YACA,YACA,aACA,MACA,YACA,cACA,UACA,MACA,gBACA,YACA,UACA,MACA,aACA,WACA,UACA,MACA,iBACA,SACA,YACA,MACA,YACA,OACA,SACA,MACA,SACA,SACA,UACA,MACA,aACA,SACA,UACA,MACA,qBACA,WACA,YACA,MACA,YACA,UACA,UACA,MACA,iBACA,UACA,SACA,MACA,cACA,WACA,SACA,MACA,UACA,QACA,SACA,MACA,sBACA,eACA,WACA,MACA,eACA,UACA,WACA,MACA,eACA,YACA,QACA,MACA,mBACA,YACA,UACA,MACA,eACA,YACA,aACA,MACA,kBACA,UACA,YACA,MACA,UACA,QACA,cACA,MACA,YACA,WACA,YACA,MACA,WACA,QACA,UACA,MACA,cACA,SACA,QACA,MACA,gBACA,UACA,SACA,MACA,cACA,WACA,UACA,MACA,WACA,WACA,YACA,MACA,UACA,YACA,aACA,MACA,eACA,UACA,SACA,MACA,gBACA,YACA,UACA,MACA,WACA,UACA,SACA,MACA,kBACA,UACA,UACA,MACA,YACA,QACA,UACA,MACA,kBACA,SACA,UACA,MACA,mBACA,YACA,SACA,MACA,gBACA,aACA,WACA,MACA,YACA,UACA,UACA,MACA,SACA,SACA,aACA,MACA,gBACA,aACA,WACA,MACA,kBACA,QACA,WACA,MACA,YACA,QACA,WACA,MACA,YACA,UACA,QACA,MACA,YACA,WACA,WACA,MACA,aACA,QACA,cACA,MACA,gBACA,UACA,SACA,MACA,mBACA,UACA,WACA,MACA,YACA,WACA,OACA,MACA,UACA,cACA,cACA,MACA,WACA,SACA,WACA,MACA,SACA,QACA,YACA,MACA,YACA,QACA,SACA,MACA,YACA,SACA,WACA,MACA,aACA,SACA,SACA,MACA,UACA,YACA,WACA,MACA,cACA,aACA,YACA,MACA,YACA,WACA,cACA,MACA,WACA,QACA,WACA,MACA,WACA,QACA,QACA,MACA,aACA,WACA,YACA,MACA,WACA,SACA,UACA,MACA,eACA,SACA,UACA,MACA,gBACA,SACA,aACA,MACA,cACA,WACA,WACA,MACA,gBACA,QACA,UACA,MACA,gBACA,WACA,WACA,MACA,eACA,SACA,WACA,MACA,eACA,WACA,YACA,MACA,eACA,WACA,aACA,MACA,cACA,WACA,YACA,MACA,cACA,QACA,UACA,MACA,aACA,QACA,aACA,MACA,kBACA,WACA,SACA,MACA,mBACA,UACA,YACA,MACA,mBACA,UACA,WACA,MACA,gBACA,QACA,WACA,MACA,cACA,SACA,YACA,MACA,kBACA,UACA,WACA,MACA,aACA,SACA,UACA,MACA,uBACA,cACA,aACA,MACA,aACA,UACA,WACA,MACA,YACA,UACA,UACA,MACA,cACA,SACA,UACA,MACA,aACA,SACA,WACA,MACA,QACA,YACA,SACA,MACA,aACA,UACA,UACA,MACA,iBACA,WACA,aACA,MACA,oBACA,WACA,cACA,MACA,YACA,SACA,YACA,MACA,iBACA,UACA,eACA,MACA,wBACA,UACA,WACA,MACA,iBACA,QACA,UACA,MACA,cACA,WACA,YACA,MACA,kBACA,aACA,YACA,MACA,aACA,eACA,UACA,MACA,YACA,SACA,aACA,MACA,iBACA,SACA,SACA,MACA,gBACA,QACA,UACA,MACA,gBACA,UACA,aACA,MACA,WACA,cACA,SACA,MACA,kBACA,SACA,YACA,MACA,kBACA,MACA,SACA,MACA,YACA,WACA,cACA,MACA,aACA,UACA,UACA,MACA,YACA,WACA,YACA,MACA,UACA,SACA,cACA,MACA,kBACA,SACA,UACA,MACA,aACA,SACA,aACA,MACA,YACA,UACA,YACA,MACA,cACA,SACA,aACA,MACA,cACA,SACA,SACA,MACA,YACA,SACA,UACA,MACA,WACA,UACA,YACA,MACA,SACA,WACA,WACA,MACA,cACA,WACA,cACA,MACA,oBACA,SACA,YACA,MACA,aACA,QACA,SACA,MACA,oBACA,WACA,YACA,MACA,cACA,QACA,cACA,MACA,eACA,QACA,aACA,MACA,cACA,UACA,UACA,MACA,aACA,OACA,WACA,MACA,aACA,QACA,gBACA,MACA,YACA,aACA,UACA,MACA,UACA,QACA,QACA,MACA,mBACA,YACA,UACA,MACA,cACA,UACA,WACA,MACA,kBACA,UACA,YACA,MACA,kBACA,SACA,YACA,MACA,kBACA,UACA,WACA,MACA,oBACA,WACA,YACA,MACA,gBACA,SACA,WACA,MACA,aACA,UACA,YACA,MACA,mBACA,UACA,UACA,MACA,aACA,aACA,YACA,MACA,cACA,QACA,iBACA,MACA,UACA,WACA,WACA,MACA,YACA,WACA,SACA,MACA,YACA,SACA,UACA,MACA,cACA,WACA,aACA,MACA,kBACA,OACA,UACA,MACA,YACA,WACA,aACA,MACA,gBACA,SACA,WACA,MACA,eACA,UACA,UACA,MACA,WACA,SACA,WACA,MACA,UACA,SACA,WACA,MACA,YACA,YACA,UACA,MACA,eACA,SACA,SACA,MACA,YACA,SACA,UACA,MACA,kBACA,UACA,YACA,MACA,WACA,aACA,SACA,MACA,kBACA,QACA,YACA,MACA,iBACA,SACA,YACA,MACA,2BACA,SACA,aACA,MACA,aACA,QACA,SACA,MACA,UACA,QACA,UACA,MACA,eACA,UACA,YACA,MACA,cACA,QACA,QACA,MACA,UACA,SACA,SACA,MACA,mBACA,QACA,SACA,MACA,WACA,SACA,cACA,MACA,mBACA,kBACA,WACA,MACA,kBACA,QACA,UACA,MACA,YACA,UACA,WACA,MACA,kBACA,WACA,UACA,MACA,gBACA,UACA,WACA,MACA,YACA,UACA,YACA,MACA,aACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,cACA,WACA,YACA,MACA,YACA,UACA,WACA,MACA,eACA,UACA,YACA,MACA,kBACA,QACA,SACA,MACA,eACA,UACA,UACA,MACA,YACA,UACA,SACA,MACA,aACA,YACA,aACA,MACA,YACA,UACA,WACA,MACA,YACA,OACA,aACA,MACA,kBACA,QACA,QACA,MACA,WACA,WACA,UACA,MACA,eACA,WACA,UACA,MACA,cACA,SACA,SACA,MACA,aACA,SACA,SACA,MACA,cACA,aACA,WACA,MACA,sBACA,OACA,WACA,MACA,cACA,UACA,aACA,MACA,eACA,SACA,SACA,MACA,WACA,SACA,YACA,MACA,sBACA,UACA,SACA,MACA,UACA,WACA,SACA,MACA,gBACA,eACA,YACA,MACA,cACA,SACA,WACA,MACA,aACA,UACA,aACA,MACA,eACA,SACA,aACA,MACA,cACA,QACA,YACA,MACA,WACA,UACA,UACA,MACA,eACA,SACA,SACA,MACA,aACA,QACA,YACA,MACA,YACA,UACA,YACA,MACA,aACA,WACA,WACA,MACA,wBACA,SACA,UACA,MACA,gBACA,QACA,UACA,MACA,YACA,SACA,UACA,MACA,eACA,SACA,UACA,MACA,eACA,WACA,UACA,MACA,iBACA,QACA,UACA,MACA,kBACA,SACA,YACA,MACA,aACA,WACA,SACA,MACA,YACA,QACA,UACA,MACA,gBACA,WACA,YACA,MACA,eACA,QACA,YACA,MACA,kBACA,WACA,aACA,MACA,aACA,WACA,aACA,MACA,aACA,SACA,YACA,MACA,aACA,WACA,UACA,MACA,aACA,aACA,cACA,MACA,gBACA,aACA,SACA,MACA,eACA,YACA,QACA,MACA,YACA,SACA,QACA,MACA,aACA,QACA,aACA,MACA,UACA,UACA,UACA,MACA,cACA,SACA,WACA,MACA,cACA,QACA,SACA,MACA,cACA,SACA,SACA,MACA,cACA,SACA,WACA,MACA,eACA,WACA,YACA,MACA,iBACA,QACA,WACA,MACA,cACA,UACA,WACA,MACA,eACA,UACA,WACA,MACA,gBACA,WACA,WACA,MACA,YACA,cACA,WACA,MACA,eACA,QACA,SACA,MACA,kBACA,YACA,YACA,MACA,kBACA,YACA,SACA,MACA,SACA,YACA,WACA,MACA,iBACA,SACA,SACA,MACA,kBACA,QACA,yBACA,MACA,eACA,UACA,WACA,MACA,kBACA,UACA,UACA,MACA,cACA,SACA,UACA,MACA,aACA,SACA,QACA,MACA,YACA,SACA,SACA,MACA,WACA,UACA,WACA,MACA,sBACA,aACA,WACA,MACA,cACA,QACA,WACA,MACA,kBACA,WACA,YACA,MACA,eACA,SACA,eACA,MACA,kBACA,QACA,UACA,MACA,gBACA,OACA,WACA,MACA,YACA,QACA,YACA,MACA,2BACA,WACA,WACA,MACA,UACA,SACA,UACA,MACA,cACA,SACA,WACA,MACA,YACA,UACA,aACA,MACA,qBACA,WACA,SACA,MACA,cACA,YACA,cACA,MACA,WACA,OACA,YACA,MACA,YACA,SACA,cACA,MACA,cACA,YACA,QACA,MACA,eACA,SACA,WACA,MACA,eACA,SACA,aACA,MACA,YACA,YACA,WACA,MACA,aACA,UACA,cACA,MACA,kBACA,SACA,aACA,MACA,YACA,SACA,QACA,MACA,eACA,UACA,OACA,MACA,kBACA,WACA,QACA,MACA,eACA,aACA,aACA,MACA,oBACA,OACA,eACA,MACA,WACA,QACA,UACA,MACA,cACA,WACA,YACA,MACA,kBACA,UACA,WACA,MACA,aACA,SACA,aACA,MACA,YACA,OACA,aACA,MACA,YACA,SACA,QACA,MACA,aACA,UACA,QACA,MACA,sBACA,SACA,WACA,MACA,WACA,UACA,WACA,MACA,UACA,UACA,WACA,MACA,WACA,UACA,WACA,MACA,aACA,UACA,cACA,MACA,kBACA,SACA,SACA,MACA,WACA,UACA,aACA,MACA,WACA,UACA,SACA,MACA,sBACA,QACA,aACA,MACA,aACA,WACA,YACA,MACA,YACA,WACA,cACA,MACA,WACA,UACA,WACA,MACA,aACA,YACA,YACA,MACA,uBACA,UACA,SACA,MACA,eACA,WACA,UACA,MACA,YACA,UACA,QACA,MACA,YACA,UACA,WACA,MACA,eACA,aACA,WACA,MACA,kBACA,WACA,YACA,MACA,YACA,WACA,YACA,MACA,cACA,WACA,SACA,MACA,UACA,SACA,UACA,MACA,iBACA,UACA,WACA,MACA,eACA,UACA,SACA,MACA,WACA,UACA,WACA,MACA,aACA,WACA,UACA,MACA,cACA,SACA,aACA,MACA,YACA,UACA,WACA,MACA,YACA,QACA,WACA,MACA,aACA,WACA,gBACA,MACA,uBACA,SACA,WACA,MACA,cACA,UACA,UACA,MACA,eACA,WACA,YACA,MACA,WACA,YACA,UACA,MACA,kBACA,YACA,WACA,MACA,cACA,WACA,WACA,MACA,WACA,UACA,WACA,MACA,iBACA,YACA,YACA,MACA,SACA,YACA,aACA,MACA,iBACA,SACA,SACA,MACA,cACA,SACA,WACA,MACA,iBACA,UACA,aACA,MACA,aACA,WACA,UACA,MACA,aACA,QACA,SACA,MACA,iBACA,UACA,WACA,MACA,cACA,SACA,QACA,MACA,qBACA,YACA,YACA,MACA,UACA,UACA,QACA,MACA,YACA,WACA,WACA,MACA,YACA,OACA,WACA,MACA,iBACA,WACA,WACA,MACA,mBACA,UACA,aACA,MACA,WACA,WACA,UACA,MACA,oBACA,SACA,SACA,MACA,eACA,QACA,UACA,MACA,aACA,SACA,aACA,MACA,eACA,UACA,aACA,MACA,kBACA,SACA,SACA,MACA,cACA,UACA,SACA,MACA,aACA,SACA,WACA,MACA,YACA,SACA,QACA,MACA,gBACA,UACA,WACA,MACA,YACA,SACA,WACA,MACA,eACA,SACA,YACA,MACA,cACA,SACA,WACA,MACA,SACA,QACA,aACA,MACA,WACA,UACA,SACA,MACA,sBACA,SACA,QACA,MACA,aACA,QACA,SACA,MACA,sBACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,eACA,SACA,UACA,MACA,4BACA,SACA,SACA,MACA,gBACA,SACA,SACA,MACA,aACA,aACA,UACA,MACA,eACA,SACA,aACA,MACA,WACA,SACA,UACA,MACA,eACA,QACA,QACA,MACA,iBACA,QACA,cACA,MACA,iBACA,SACA,YACA,MACA,eACA,YACA,UACA,MACA,YACA,QACA,YACA,MACA,YACA,UACA,YACA,MACA,cACA,UACA,YACA,MACA,aACA,YACA,WACA,MACA,eACA,UACA,aACA,MACA,YACA,UACA,UACA,MACA,eACA,UACA,WACA,MACA,YACA,aACA,cACA,MACA,kBACA,UACA,YACA,MACA,gBACA,QACA,YACA,MACA,eACA,QACA,WACA,MACA,YACA,UACA,WACA,MACA,WACA,UACA,YACA,MACA,aACA,UACA,QACA,MACA,oBACA,YACA,WACA,MACA,gBACA,OACA,WACA,MACA,WACA,QACA,UACA,MACA,aACA,UACA,UACA,MACA,aACA,UACA,QACA,MACA,qBACA,OACA,WACA,MACA,eACA,UACA,YACA,MACA,4BACA,WACA,QACA,MACA,cACA,WACA,UACA,MACA,kBACA,YACA,SACA,MACA,YACA,UACA,YACA,MACA,YACA,QACA,UACA,MACA,eACA,QACA,SACA,MACA,eACA,UACA,gBACA,MACA,UACA,WACA,WACA,MACA,WACA,UACA,WACA,MACA,WACA,SACA,eACA,MACA,UACA,YACA,WACA,MACA,cACA,SACA,YACA,MACA,SACA,SACA,WACA,MACA,YACA,SACA,WACA,MACA,kBACA,UACA,aACA,MACA,aACA,SACA,WACA,MACA,WACA,WACA,aACA,MACA,qBACA,UACA,UACA,MACA,YACA,WACA,WACA,MACA,gBACA,SACA,SACA,MACA,iBACA,UACA,WACA,MACA,eACA,QACA,UACA,MACA,YACA,OACA,UACA,MACA,kBACA,UACA,UACA,MACA,gBACA,QACA,SACA,MACA,iBACA,QACA,WACA,MACA,eACA,YACA,UACA,MACA,YACA,UACA,aACA,MACA,WACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,WACA,aACA,YACA,MACA,cACA,YACA,WACA,MACA,oBACA,WACA,WACA,MACA,gBACA,YACA,OACA,MACA,eACA,YACA,UACA,MACA,gBACA,WACA,WACA,MACA,eACA,QACA,UACA,MACA,aACA,YACA,WACA,MACA,eACA,aACA,QACA,MACA,kBACA,QACA,UACA,MACA,eACA,SACA,WACA,MACA,qBACA,SACA,SACA,MACA,SACA,YACA,UACA,MACA,eACA,SACA,SACA,MACA,kBACA,UACA,UACA,MACA,aACA,SACA,WACA,MACA,cACA,UACA,UACA,MACA,aACA,YACA,UACA,MACA,aACA,QACA,SACA,MACA,gBACA,QACA,YACA,MACA,WACA,SACA,UACA,MACA,mBACA,UACA,OACA,MACA,cACA,SACA,UACA,MACA,iBACA,YACA,UACA,MACA,mBACA,QACA,WACA,MACA,oBACA,WACA,WACA,MACA,WACA,WACA,aACA,MACA,iBACA,QACA,YACA,MACA,UACA,QACA,SACA,MACA,cACA,YACA,SACA,MACA,cACA,QACA,YACA,MACA,kBACA,WACA,WACA,MACA,aACA,SACA,WACA,MACA,cACA,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","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\r\nexport default function (payload: HMRPayload, helper: HMRHelper) {\r\n    const { updates } = payload;\r\n\r\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\r\n\r\n    if (helper.isStylesheeetUpdate) {\r\n        helper.flushModules(updates);\r\n\r\n        helper.updateModules();\r\n\r\n        helper.callModules(updates);\r\n    } else {\r\n        helper.flushAll();\r\n        helper.updateModules();\r\n\r\n        helper.callEntries();\r\n    }\r\n}\r\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\nimport { logger } from './logger';\n\n/**\n * @customElement- decorator\n *\n */\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\n    return function reg(elementClass: any) {\n        const observedAttributes = elementClass.observedAttributes;\n        Object.defineProperty(elementClass, 'observedAttributes', {\n            set: function (value) {\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\n                return true;\n            },\n            get: function () {\n                return elementClass.prototype[getObservedAttributesSymbol()];\n            },\n            configurable: true\n        });\n\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\n                observedAttributes\n            );\n        }\n        // if @attribute is not used we just use the standard if any\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = observedAttributes;\n        }\n\n        const Base: any = class extends elementClass {\n            constructor() {\n                super();\n                logger('constructor', this, super.tagName);\n            }\n\n            renderCalled() {\n                if (super.renderCalled) {\n                    super.renderCalled.call(this);\n                }\n            }\n\n            render(...result: any[]) {\n                if (super.render) {\n                    logger('render', this, super.tagName);\n                    const template = super.render.call(this, ...result);\n                    Promise.resolve(template).then((templates) => {\n                        render(templates, this as any, { eventContext: this as any });\n                        if (super.updated) {\n                            //delay so it actually get a chance to update\n                            requestAnimationFrame(() => {\n                                super.updated();\n                            });\n                        }\n                    });\n                }\n                this.renderCalled();\n            }\n            connectedCallback() {\n                logger('connectedCallback', this, super.tagName);\n                if (super.connectedCallback) {\n                    super.connectedCallback.call(this);\n                }\n                this.render(this);\n            }\n\n            register(call: Function) {\n                if (this.callers) {\n                    this.callers.push(call);\n                } else {\n                    this.callers = [];\n                    this.callers.push(call);\n                }\n            }\n\n            disconnectedCallback() {\n                logger('disconnectedCallback', this, super.tagName);\n                if (this.callers) {\n                    this.callers.forEach((call: Function) => call());\n                }\n                this.callers = [];\n                if (super.disconnectedCallback) {\n                    super.disconnectedCallback.call(this);\n                }\n            }\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n                logger('attributeChangedCallback', this, super.tagName);\n                //get map\n\n                if (!this[getObservedAttributesMapSymbol()]) {\n                    const attribute = name\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\n                        .replace(/\\s+/g, '-')\n                        .toLowerCase();\n                    this[getObservedAttributesMapSymbol()] = new Map();\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\n                }\n\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\n                this[nameProp] = newValue || '';\n                // if normal attributeChanged is set\n                if (super.attributeChangedCallback) {\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\n                }\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\n                if (super.valuesChanged) {\n                    super.valuesChanged('attribute', name, oldValue, newValue);\n                }\n            }\n        };\n        if (!customElements.get(elementName)) {\n            if (extended) {\n                customElements.define(elementName, Base, extended);\n            } else {\n                customElements.define(elementName, Base);\n            }\n        } else {\n            if ((globalThis as any).hmrCache) {\n                if (extended) {\n                    customElements.define(elementName, Base, extended);\n                } else {\n                    customElements.define(elementName, Base);\n                }\n            }\n        }\n    };\n}\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\n\nlet state = (window as any).state || {};\nconst keys = new Set();\ntype valueSetter<T> = (value: T) => void;\n\n// helper for fusebox hmr event\nif (!(window as any).state) {\n    window.addEventListener('HMR-FUSEBOX', () => {\n        (window as any).state = state;\n        console.log('HMR-FUSEBOX', (window as any).state);\n    });\n}\n\nexport type stateResult<T> = [T, valueSetter<T>];\n\n/**\n * Get current glabal state\n * great for saving state for next time user opens website\n */\nexport function getState() {\n    state;\n}\n\n/**\n * overide current state\n * great for restoring state time user opens website\n */\nexport function setState<T>(newState: T) {\n    state = newState;\n}\n\nexport function assignState<T, K extends keyof T>(obj: T, part: Pick<T, K>) {\n    return Object.assign(obj, part);\n}\n\n/**\n * simple state container\n * @param key key used in state container and event\n * @param defaultValue default state value\n * @param customPublishedTrigger if you do not want it to publish update event\n */\nexport function stateContainer<T>(\n    key: string,\n    defaultValue: T,\n    customPublishedTrigger?: boolean\n): stateResult<T> {\n    //set default value if not set\n    if (!state.hasOwnProperty(key)) {\n        state[key] = defaultValue;\n    }\n\n    const currentState: T = state[key];\n    const setter = function (value: T) {\n        state[key] = value;\n    };\n\n    const middleware = function (value: any) {\n        setter(value);\n        publish(key, value);\n    };\n\n    return [currentState, customPublishedTrigger ? setter : middleware];\n}\n\n/**\n * simple warning if you reuse a key by accident\n * @param key\n */\nexport function validateKey(key: string) {\n    if (keys.has(key)) {\n        throw new Error(`state key used allready, use another name`);\n    } else {\n        keys.add(key);\n        return key;\n    }\n}\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import 'tslib';\r\nexport { attribute } from './attribute';\r\nexport { prop } from './prop';\r\nexport { enableInternalLogger, disableInternalLogger } from './logger';\r\nexport { property } from './property';\r\nexport { customElement } from './customElement';\r\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\r\nexport { validateKey, stateContainer, stateResult } from './state';\r\nexport { requestRender } from './requestRender';\r\nexport { disconnectedCallback } from './disconnectedCallback';\r\n","import { Entity } from './types';\r\n\r\n/**\r\n * Entity will keep track of edited properties of the row object\r\n */\r\n\r\nexport class EntityHandler {\r\n    __editedProps? = {};\r\n    __originalValues? = {};\r\n    __currentValues? = {};\r\n    __newprops? = {};\r\n    __edited? = false;\r\n    __controller?: EntityHandler;\r\n    __KEY?: string | number;\r\n    __KEYSTRING?: string | number;\r\n    __group?: boolean;\r\n    __groupID?: string;\r\n    __groupName?: string;\r\n    __groupLvl?: number;\r\n    __groupTotal?: number;\r\n    __groupChildren?: Entity[];\r\n    __groupExpanded?: boolean;\r\n\r\n    constructor(keyString?: string) {\r\n        this.__KEYSTRING = keyString;\r\n    }\r\n\r\n    get(target: object, prop: string) {\r\n        if (prop === '__controller') {\r\n            return this;\r\n        }\r\n        if (\r\n            [\r\n                '__KEY',\r\n                '__group',\r\n                '__groupID',\r\n                '__groupName',\r\n                '__groupLvl',\r\n                '__groupTotal',\r\n                '__groupChildren',\r\n                '__groupExpanded'\r\n            ].indexOf(prop) > -1\r\n        ) {\r\n            if (prop === '__KEY') {\r\n                if (this.__KEYSTRING) {\r\n                    return target[this.__KEYSTRING];\r\n                }\r\n            }\r\n            return this[prop];\r\n        }\r\n        return target[prop];\r\n    }\r\n\r\n    set(obj: object, prop: string, value: any) {\r\n        let update = true;\r\n\r\n        if (prop[0] === '_' && prop[1] === '_') {\r\n            update = false;\r\n            if (\r\n                [\r\n                    '__KEY',\r\n                    '__group',\r\n                    '__groupID',\r\n                    '__groupName',\r\n                    '__groupLvl',\r\n                    '__groupTotal',\r\n                    '__groupChildren',\r\n                    '__groupExpanded'\r\n                ].indexOf(prop) > -1\r\n            ) {\r\n                this[prop] = value;\r\n            }\r\n        }\r\n\r\n        if (update) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                if (!this.__editedProps.hasOwnProperty(prop)) {\r\n                    this.__originalValues[prop] = obj[prop];\r\n                    this.__editedProps[prop] = true;\r\n                }\r\n                this.__currentValues[prop] = value;\r\n                obj[prop] = value;\r\n            } else {\r\n                if (!this.__newprops.hasOwnProperty(prop)) {\r\n                    this.__originalValues[prop] = obj[prop];\r\n                    this.__newprops[prop] = true;\r\n                }\r\n            }\r\n            this.__edited = true;\r\n            this.__currentValues[prop] = value;\r\n            obj[prop] = value;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { EntityHandler } from './entity';\n\n/**\n *  selecting\n */\nexport type SelectionMode = 'none' | 'single' | 'multiple';\n\n/**\n *  datasource\n */\nexport type DatasourceConfigOptions = { selectionMode: SelectionMode };\n\nexport interface Entity {\n    __controller?: EntityHandler;\n    __KEY?: string | number;\n    __group?: boolean;\n    __groupID?: string;\n    __groupName?: string;\n    __groupLvl?: number;\n    __groupTotal?: number;\n    __groupChildren?: Entity[];\n    __groupExpanded?: boolean;\n}\n\n/**\n *  filtering interfaces\n */\nexport type FilterComparisonOperator =\n    | 'EQUAL'\n    | 'LESS_THAN_OR_EQUAL_TO'\n    | 'GREATER_THAN_OR_EQUAL_TO'\n    | 'LESS_THAN'\n    | 'GREATER_THAN'\n    | 'CONTAINS'\n    | 'NOT_EQUAL_TO'\n    | 'DOES_NOT_CONTAIN'\n    | 'BEGIN_WITH'\n    | 'END_WITH'\n    | 'IN';\n\nexport type DataTypes = 'text' | 'number' | 'image' | 'boolean' | 'date' | 'empty';\nexport type FilterLogicalOperator = 'AND' | 'OR' | 'NONE';\nexport type FilterExpressionType = 'CONDITION' | 'GROUP';\nexport type FilterValueType = 'ATTRIBUTE' | 'VALUE';\n\nexport type FilterArgument = {\n    type?: FilterExpressionType;\n    logicalOperator?: FilterLogicalOperator;\n    attribute?: string | null; //only optional if type is group\n    operator?: FilterComparisonOperator | null; //only optional if type is group\n    value?: string | number | null | Date; //only optional if type is group\n    valueType?: FilterValueType | null;\n    attributeType?: DataTypes;\n    filterArguments?: FilterArgument[];\n};\n\nexport interface FilterAttributeSimple {\n    operator: FilterComparisonOperator;\n    value: any;\n    attribute: string;\n    type: string;\n}\n\n/**\n *  sorting interfaces\n */\n\nexport interface SortArgument {\n    attribute: string;\n    ascending: boolean;\n}\n\n/**\n * grouping interfaces\n */\nexport interface GroupArgument {\n    title: string;\n    attribute: string;\n}\n\n/**\n * nices string values\n */\nexport const OPERATORS = {\n    EQUAL: 'equal to',\n    LESS_THAN_OR_EQUAL_TO: 'less or equal',\n    GREATER_THAN_OR_EQUAL_TO: 'greater than or equal',\n    LESS_THAN: 'less than',\n    GREATER_THAN: 'greater than',\n    CONTAINS: 'contains',\n    NOT_EQUAL_TO: 'not equal to',\n    DOES_NOT_CONTAIN: 'does not contain',\n    BEGIN_WITH: 'start with',\n    END_WITH: 'end with',\n    IN: 'IN'\n};\n","import { Entity } from './index';\nimport { EntityHandler } from './entity';\n\nlet globalKeyCount = 0;\n\n// we need 1 for all datasources not using uniqueKeyAttribute\nexport const getNextKey = function () {\n    globalKeyCount++;\n    return globalKeyCount;\n};\n\nexport class DataContainer {\n    private __collection: Entity[] = [];\n    private __keyAttribute = '';\n    private EntityHandler = EntityHandler;\n\n    constructor(UniqueKeyAttribute?: string) {\n        // we want to add sufix just incase its something like a new\n        this.__keyAttribute = UniqueKeyAttribute;\n    }\n\n    /**\n     * so user can override if they want\n     */\n    public overrideEntityHandler(entityHandler: any) {\n        this.EntityHandler = entityHandler;\n    }\n\n    /**\n     * so I can check\n     */\n    public get type() {\n        return 'DataContainer';\n    }\n\n    private getKey() {\n        return getNextKey();\n    }\n\n    public getDataSet() {\n        return this.__collection.slice();\n    }\n\n    public lenght() {\n        return this.__collection;\n    }\n\n    public removeData(data: Entity | Entity[], all = false) {\n        if (all) {\n            const removed = this.__collection.slice();\n            this.__collection = [];\n            return removed;\n        }\n\n        if (data) {\n            if (Array.isArray(data)) {\n                const removed: Entity[] = [];\n                data.forEach((d) => {\n                    const i = this.__collection.indexOf(d);\n                    if (i !== -1) {\n                        removed.push(this.__collection.splice(i, 1)[0]);\n                    }\n                });\n                return removed;\n            } else {\n                const i = this.__collection.indexOf(data);\n                if (i !== -1) {\n                    return this.__collection.splice(i, 1);\n                }\n            }\n        }\n\n        return [];\n    }\n\n    public setData(data: any[], add = false): Entity[] | void {\n        if (add) {\n            const x = Array.from(data, (o: any | Entity) => {\n                if (o && o.__controller) {\n                    return o;\n                } else {\n                    return new Proxy(o, new this.EntityHandler(this.__keyAttribute) as any);\n                }\n            });\n            this.__collection.push(...x);\n\n            this.__collection.forEach((entity, i) => {\n                if (entity && !(entity as any).__KEY) {\n                    (entity as any).__KEY = this.getKey();\n                } else {\n                    if (!this.__collection[i]) {\n                        this.__collection[i] = { __KEY: this.getKey() };\n                    }\n                }\n            });\n            return x;\n        } else {\n            this.__collection = Array.from(data, (o: any | Entity) => {\n                if (o && o.__controller) {\n                    return o;\n                } else {\n                    return new Proxy(o, new this.EntityHandler(this.__keyAttribute) as any);\n                }\n            });\n\n            this.__collection.forEach((entity, i) => {\n                if (entity && !(entity as any).__KEY) {\n                    (entity as any).__KEY = this.getKey();\n                } else {\n                    if (!this.__collection[i]) {\n                        this.__collection[i] = { __KEY: this.getKey() };\n                    }\n                }\n            });\n        }\n    }\n}\n","import { Filter } from './filter';\nimport { Sort } from './sort';\nimport { Grouping } from './grouping';\nimport { Selection } from './selection';\nimport {\n    Entity,\n    DatasourceConfigOptions,\n    SelectionMode,\n    SortArgument,\n    FilterArgument,\n    GroupArgument,\n    OPERATORS\n} from './types';\nimport { DataContainer } from './dataContainer';\n\ntype callable = Function | { handleEvent: Function };\n\n/**\n * Helper class for calling internal sort, filter and grouping classes\n *\n */\nexport class Datasource {\n    /**\n     * filter controller, holds all logic for filtering\n     */\n    private __filter: Filter;\n\n    /**\n     * sorting controller, holds all logic for sorting\n     */\n    private __sorting: Sort;\n\n    /**\n     * grouping contoller, holds all logic for grouping\n     */\n    private __grouping: Grouping;\n\n    /**\n     * this holds the filtered data, used when sorting and grouping\n     */\n    private __collectionFiltered: Entity[] = [];\n\n    /**\n     * This is the data that is sorted/filtered and grouped\n     */\n    private __collectionDisplayed: Entity[] = [];\n\n    /**\n     * datacontainer is holding the data, you can have many datasources sharing 1 datacontainer\n     */\n    private __dataContainer: DataContainer;\n\n    /**\n     * selection controller, holds selection\n     */\n    private __selection: Selection;\n\n    /**\n     * selection mode used by the selection controller\n     */\n    private __selectionMode: SelectionMode = 'multiple';\n\n    /**\n     * subscribed listerners, gets called when collection changes/is sorted/filtered etc\n     */\n    private __listeners: Set<callable> = new Set();\n\n    /**\n     * current entity, use this with form etc if you have a grid with detail form\n     */\n    public currentEntity: Entity | null = null;\n\n    constructor(dataContainer?: DataContainer, options?: DatasourceConfigOptions) {\n        this.__dataContainer = dataContainer || new DataContainer();\n        this.__selectionMode = options?.selectionMode || 'multiple';\n        this.__selection = new Selection(this);\n        this.__filter = new Filter();\n        this.__sorting = new Sort();\n        this.__grouping = new Grouping();\n    }\n\n    /**\n     * so I can check\n     */\n    public get type() {\n        return 'Datasource';\n    }\n\n    /**\n     * This is the data in the dataContainer\n     */\n    public getAllData(): Entity[] {\n        return this.__dataContainer.getDataSet();\n    }\n\n    /**\n     * INTERNAL: Used by selection to se new current entity\n     * @param row\n     */\n    public __select(row: number) {\n        this.currentEntity = this.__collectionDisplayed[row];\n        this.__callSubscribers('currentEntity');\n    }\n\n    /**\n     * for adding data to datasource, this will also be sendt to dataContainer\n     * so if you replace data the data in the datacontainer also gets replaced\n     * @param data js object\n     * @param add add to current, if false it replaces current collections\n     * @param reRunFilter rerun current filter, grouping/sorting will run automatically\n     */\n    public setData(data: any[], add = false, reRunFilter = false) {\n        if (add) {\n            const x = this.__dataContainer.setData(data, add);\n            if (x) {\n                this.__collectionFiltered.push(...x);\n            }\n        } else {\n            this.__dataContainer.setData(data, add);\n            this.__collectionFiltered = this.getAllData().slice();\n        }\n\n        this.__internalUpdate(reRunFilter);\n        this.__callSubscribers('collection-changed', { added: !!add });\n    }\n\n    /**\n     * runs sorting/grouping, used by setdata/and filter, so we dont rerun sort/grouping many times\n     * this also does not call any events\n     */\n    private __internalUpdate(reRunFilter: boolean) {\n        if (reRunFilter) {\n            if (this.__filter.getFilter()) {\n                this.__collectionFiltered = this.__filter.filter(\n                    this.getAllData(),\n                    this.__filter.getFilter()\n                );\n            } else {\n                this.__collectionFiltered = this.__dataContainer.getDataSet();\n            }\n        }\n\n        const lastSort = this.__sorting.getLastSort();\n        if (lastSort.length) {\n            this.__sorting.runOrderBy(this.__collectionFiltered);\n        }\n\n        if (this.__grouping.getGrouping().length) {\n            this.__collectionDisplayed = this.__grouping.group(\n                this.__collectionFiltered,\n                this.__grouping.getGrouping(),\n                true\n            );\n        } else {\n            //set sorted collection to display\n            this.__collectionDisplayed = this.__collectionFiltered.slice();\n        }\n    }\n\n    /**\n     * sorts current displayed selection\n     * @param args obj/obj array must have attribute and ascending\n     * @param add add to previous sort arguments\n     */\n    public sort(args?: SortArgument | SortArgument[], add?: boolean) {\n        // sort\n        if (!this.__grouping.getGrouping().length) {\n            if (args) {\n                // TODO: if we have grouping we need to add it to this..\n\n                this.__sorting.setOrderBy(args, add);\n                this.__sorting.runOrderBy(this.__collectionFiltered);\n            } else {\n                //if nothing the reuse last config\n                const lastSort = this.__sorting.getLastSort();\n                if (lastSort.length) {\n                    this.__sorting.runOrderBy(this.__collectionFiltered);\n                }\n            }\n        }\n\n        if (this.__grouping.getGrouping().length) {\n            // if we also have grouping we need to check if this needs to be added\n\n            // add default sort\n            if (args) {\n                this.__sorting.setOrderBy(args, add);\n            }\n\n            // get attributes/sort order\n            const sortingAttributes = this.__sorting.getOrderBy().map((col) => col.attribute);\n            const sortingAttributesOrder = this.__sorting.getOrderBy().map((col) => col.ascending);\n\n            // reset sort, we need to set it using grouping\n            this.__sorting.reset();\n\n            this.__grouping.getGrouping().forEach((group: GroupArgument) => {\n                const sortIndex = sortingAttributes.indexOf(group.attribute);\n                if (sortingAttributes.indexOf(group.attribute) === -1) {\n                    this.__sorting.setOrderBy(\n                        { attribute: group.attribute, ascending: true },\n                        true\n                    );\n                } else {\n                    // if it already is in the new sorting, we need to use this sort order\n                    this.__sorting.setOrderBy(\n                        {\n                            attribute: group.attribute,\n                            ascending: sortingAttributesOrder[sortIndex]\n                        },\n                        true\n                    );\n                }\n            });\n\n            // last part is to get the column thats not in grouping and add them\n            const groupings = this.__grouping.getGrouping().map((col) => col.attribute);\n            sortingAttributes.forEach((attribute, i) => {\n                if (groupings.indexOf(attribute) === -1) {\n                    this.__sorting.setOrderBy(\n                        {\n                            attribute: sortingAttributes[i],\n                            ascending: sortingAttributesOrder[i]\n                        },\n                        true\n                    );\n                }\n            });\n\n            this.__sorting.runOrderBy(this.__collectionFiltered);\n\n            // if grouping is set\n            this.__collectionDisplayed = this.__grouping.group(\n                this.__collectionFiltered,\n                this.__grouping.getGrouping(),\n                true\n            );\n        } else {\n            //set sorted collection to display\n            this.__collectionDisplayed = this.__collectionFiltered.slice();\n        }\n\n        // group if any config set\n        this.__callSubscribers('collection-sorted');\n    }\n\n    /**\n     * filters using the connected data container, result is sorted also if this is set\n     * if you need to set sort then do this before calling filter\n     * @param ObjFilter\n     */\n    public filter(ObjFilter?: FilterArgument | FilterArgument[]) {\n        if (ObjFilter) {\n            if (Array.isArray(ObjFilter)) {\n                // FilterArgumentSimple[]\n                this.__filter.setFilter({\n                    type: 'GROUP',\n                    logicalOperator: 'AND',\n                    filterArguments: ObjFilter as FilterArgument[]\n                });\n            } else {\n                if (!ObjFilter.filterArguments || ObjFilter?.filterArguments?.length === 0) {\n                    // FilterArgumentSimple\n                    this.__filter.setFilter({\n                        type: 'GROUP',\n                        logicalOperator: 'AND',\n                        filterArguments: [ObjFilter as FilterArgument]\n                    });\n                } else {\n                    // FilterArgument\n                    // todo, check more and warn if missing options _\n                    this.__filter.setFilter(ObjFilter as FilterArgument);\n                }\n            }\n        } /*  */\n        this.__internalUpdate(true);\n        this.__callSubscribers('collection-filtered');\n    }\n\n    /**\n     * Groups filtered collection\n     * @param group\n     * @param add\n     */\n    public group(group: GroupArgument[], add?: boolean) {\n        let groupings: GroupArgument[];\n        if (add) {\n            groupings = this.__grouping.getGrouping();\n            groupings = groupings.concat(group);\n        } else {\n            groupings = group;\n        }\n\n        this.__sorting.reset();\n\n        groupings.forEach((group: GroupArgument) => {\n            this.__sorting.setOrderBy({ attribute: group.attribute, ascending: true }, true);\n        });\n        this.__sorting.runOrderBy(this.__collectionFiltered);\n        if (groupings.length) {\n            const result = this.__grouping.group(this.__collectionFiltered, groupings, true);\n            this.__collectionDisplayed = result;\n        } else {\n            this.__collectionDisplayed = this.__collectionFiltered;\n        }\n\n        // group\n        this.__callSubscribers('collection-grouped');\n    }\n\n    /**\n     * Removed group\n     * @param group undefined = remove all groups\n     */\n    public removeGroup(group?: GroupArgument) {\n        if (group) {\n            const groupings = this.__grouping.getGrouping();\n\n            const oldGroupIndex = groupings.indexOf(group);\n            if (oldGroupIndex !== -1) {\n                groupings.splice(oldGroupIndex, 1);\n            }\n            this.group(groupings);\n        } else {\n            this.group([]);\n        }\n        this.__callSubscribers('collection-grouped');\n    }\n\n    /**\n     * expand 1 or all groups\n     * @param id null/undefined = all\n     */\n    public expandGroup(id?: string) {\n        this.__collectionDisplayed = this.__grouping.expandOneOrAll(id);\n        this.__callSubscribers('collection-expand');\n    }\n\n    /**\n     * collapse 1 or all groups\n     * @param id null/undefined = all\n     */\n    public collapseGroup(id?: string) {\n        this.__collectionDisplayed = this.__grouping.collapseOneOrAll(id);\n        this.__callSubscribers('collection-collapse');\n    }\n\n    /**\n     * used to call subscribers, used by selection/sorting/filter/grouping controller\n     * @param event\n     * @param data\n     */\n    public __callSubscribers(event: string, data = {}): void {\n        const keeping: any = [];\n        this.__listeners.forEach((callable) => {\n            let keep: boolean;\n            if (typeof callable === 'function') {\n                keep = callable({ type: event, data: data });\n            } else {\n                if (typeof callable?.handleEvent === 'function') {\n                    keep = callable.handleEvent({ type: event, data: data });\n                }\n            }\n            if (keep) {\n                keeping.push(callable);\n            }\n        });\n        this.__listeners = new Set(keeping);\n    }\n\n    /**\n     * adds event listener, this is called when collection is changed by sorting/grouping etc\n     * @param callable\n     */\n    public addEventListner(callable: callable): void {\n        if (typeof callable !== 'function' && typeof callable?.handleEvent !== 'function') {\n            throw new Error('callable sent to datasource event listner is wrong type');\n        }\n\n        if (!this.__listeners.has(callable)) {\n            this.__listeners.add(callable);\n        }\n    }\n\n    /**\n     * removes listener from datasource\n     * @param callable\n     */\n    public removeEventListner(callable: callable): void {\n        if (this.__listeners.has(callable)) {\n            this.__listeners.delete(callable);\n        }\n    }\n\n    /**\n     *  returns lenght of sorted/filtered collection\n     * @param onlyDataRows use this to skip grouping rows\n     */\n    public length(onlyDataRows?: boolean): number {\n        if (onlyDataRows) {\n            return this.__collectionFiltered.length;\n        } else {\n            return this.__collectionDisplayed.length;\n        }\n    }\n\n    /**\n     * return selection mode used\n     */\n    public getSelectionMode(): SelectionMode {\n        return this.__selectionMode;\n    }\n\n    /**\n     * replace selection mode used, if blank it will be set to 'none'\n     */\n    public setSelectionMode(mode: SelectionMode): void {\n        this.__selectionMode = mode || 'none';\n    }\n\n    /**\n     * returns 1 row sorted/grouped/filtered, start on 0\n     * @param rowNo\n     */\n    public getRow(rowNo: number): Entity {\n        return this.__collectionDisplayed[rowNo];\n    }\n\n    /**\n     * returns all rows sorted/grouped/filtered\n     * @param onlyDataRows only get sorted/filtered and skip group\n     */\n    public getRows(onlyDataRows?: boolean): Entity[] {\n        if (onlyDataRows) {\n            return this.__collectionFiltered;\n        } else {\n            return this.__collectionDisplayed;\n        }\n    }\n\n    /**\n     * sets current entity and selection, start on 1 not 0\n     * @param row, if skipped we select the first\n     */\n    public select(row?: number): void {\n        this.__selection.highlightRow({} as any, row ? row - 1 : 0);\n    }\n\n    /**\n     * updates current entity to first\n     */\n    public selectFirst(): void {\n        this.__selection.highlightRow({} as any, 0);\n    }\n\n    /**\n     * updates current entity, if first when running this it will select the last\n     */\n    public selectPrev(): void {\n        let row = this.__collectionDisplayed.indexOf(this.currentEntity) - 1;\n        if (row < 0) {\n            row = this.__collectionDisplayed.length - 1;\n            this.__selection.highlightRow({} as any, row);\n        }\n        this.__selection.highlightRow({} as any, row);\n    }\n\n    /**\n     * updates current entity, if on last it will end on up the first\n     */\n    public selectNext(): void {\n        let row = this.__collectionDisplayed.indexOf(this.currentEntity) + 1;\n        if (this.__collectionDisplayed.length - 1 < row) {\n            row = 0;\n        }\n        this.__selection.highlightRow({} as any, row);\n    }\n\n    /**\n     * updates current entity to last entity\n     */\n    public selectLast(): void {\n        this.__selection.highlightRow({} as any, this.__collectionDisplayed.length - 1);\n    }\n\n    /**\n     * sets Intl Collator , this is used for sorting\n     * @param code\n     * @param options\n     */\n    public setLocalCompare(code: string, options?: any) {\n        // should we also use this for filter ?\n        this.__sorting.setLocaleCompare(code, options);\n    }\n\n    /**\n     * resets current sort\n     * @param defaultSortAttribute attribute name if you have a default you want to use\n     */\n    public resetSort(defaultSortAttribute?: string): void {\n        this.__sorting.reset(defaultSortAttribute);\n    }\n\n    /**\n     * Sets order by, if you plan to filter with new sorting order you need to use this first\n     * @param param\n     * @param add\n     */\n    public setOrderBy(param: SortArgument | SortArgument[], add?: boolean) {\n        this.__sorting.setOrderBy(param, add);\n    }\n\n    /**\n     * returns current sortorder config\n     */\n    public getOrderBy() {\n        return this.__sorting.getOrderBy();\n    }\n\n    /**\n     * returns current grouing config\n     */\n    public getGrouping() {\n        return this.__grouping.getGrouping();\n    }\n\n    /**\n     * sets current grouing config\n     */\n    public setGrouping(group: GroupArgument[]) {\n        this.__grouping.setGrouping(group);\n    }\n\n    /**\n     * sets current expanded ids\n     */\n    public setExpanded(x: string[]) {\n        this.__grouping.setExpanded(x);\n    }\n\n    /**\n     * gets current expanded ids\n     */\n    public getExpanded() {\n        return this.__grouping.getExpanded();\n    }\n\n    public getFilter() {\n        return this.__filter.getFilter();\n    }\n\n    public getSelection() {\n        return this.__selection;\n    }\n\n    public sortReset() {\n        return this.__sorting.reset();\n    }\n\n    public getFilterFromType(type: string) {\n        return this.__filter.getFilterFromType(type);\n    }\n\n    public setFilter(filter: FilterArgument) {\n        return this.__filter.setFilter(filter);\n    }\n\n    public reloadDatasource() {\n        this.__collectionFiltered = this.getAllData();\n        this.__internalUpdate(true);\n    }\n\n    public getFilterString() {\n        const filter = this.__filter.getFilter();\n        if (!filter?.filterArguments?.length) {\n            return '';\n        }\n        const parser = function (obj: FilterArgument, queryString = '') {\n            if (obj) {\n                if (\n                    !obj.filterArguments ||\n                    (obj.filterArguments && obj.filterArguments.length === 0)\n                ) {\n                    if (obj.operator !== 'IN') {\n                        queryString =\n                            queryString +\n                            `${obj.attribute} ${OPERATORS[obj.operator]} ${\n                                obj.valueType === 'ATTRIBUTE' ? obj.value : \"'\" + obj.value + \"'\"\n                            }`;\n                    } else {\n                        // split newline into array\n                        if (Array.isArray(obj.value)) {\n                            queryString =\n                                queryString +\n                                `${obj.attribute} ${OPERATORS[obj.operator]} [${obj.value.map(\n                                    (val) => {\n                                        return `'${val}'`;\n                                    }\n                                )}]`;\n                        } else {\n                            queryString =\n                                queryString +\n                                `${obj.attribute} ${\n                                    OPERATORS[obj.operator]\n                                } [${(obj.value as string).split('\\n').map((val) => {\n                                    return `'${val}'`;\n                                })}]`;\n                        }\n                    }\n                } else {\n                    obj.filterArguments.forEach((y, i) => {\n                        if (i > 0) {\n                            queryString = queryString + ` ${obj.logicalOperator} `;\n                        } else {\n                            queryString = queryString + `(`;\n                        }\n                        queryString = parser(y, queryString);\n                        if (obj.filterArguments.length - 1 === i) {\n                            queryString = queryString + `)`;\n                        }\n                    });\n                }\n            }\n            return queryString;\n        };\n        return parser(this.__filter.getFilter());\n    }\n}\n","export * from './types';\nexport { EntityHandler } from './entity';\nexport { Datasource } from './dataSource';\nexport { DataContainer } from './dataContainer';\n","export { Entity } from '@simple-html/datasource';\nimport {\n    SortArgument,\n    GroupArgument,\n    FilterComparisonOperator,\n    DataTypes\n} from '@simple-html/datasource';\nexport {\n    FilterComparisonOperator,\n    FilterAttributeSimple,\n    SortArgument,\n    GroupArgument,\n    FilterLogicalOperator,\n    FilterExpressionType,\n    FilterValueType,\n    FilterArgument,\n    SelectionMode,\n    DataTypes\n} from '@simple-html/datasource';\n\nexport type InputTriggers = 'input' | 'change';\nexport type RowCache = { i: number; update: boolean };\n\nexport interface IAttributes {\n    attribute: string;\n    type?: DataTypes; //defaults to text if not set\n}\n\nexport interface CellConfig {\n    header?: string;\n    attribute: string;\n    /**Default FALSE */\n    readonly?: boolean;\n    /**Default FALSE */\n    disabled?: boolean;\n    /**NOT IN USE */\n    width?: number;\n    //filter\n    filterable?: {\n        /**Default FALSE */\n        filterOverLabel?: boolean;\n        /**Default TRUE */\n        auto?: boolean;\n        /**Default CHANGE */\n        filterTrigger?: InputTriggers;\n        /**Default STRING/TEXT */\n        currentValue?: string | number | boolean | Date;\n        placeholder?: string;\n        /**Default BEGIN WITH */\n        operator?: FilterComparisonOperator;\n    };\n    sortable?: {\n        /**Internal used for making sort icon on header*/\n        sortAscending?: boolean;\n        /**Internal used for making sort icon on header*/\n        sortNo?: number;\n        /**Internal used for making sort icon on header*/\n        beforeSortCallbackFn?: any;\n        /**Internal used for making sort icon on header*/\n        noToggle?: boolean;\n        /**Default TRUE */\n        auto?: boolean;\n    };\n    type?: DataTypes;\n    /**Default TRUE */\n    autoUpdateData?: boolean;\n    editEventType?: InputTriggers;\n    disableDragDrop?: boolean;\n    allowGrouping?: boolean;\n}\n\nexport type GridRowConfig = CellConfig;\nexport type GridGroupConfig = {\n    width: number;\n    //internal\n    __left?: number;\n    rows: GridRowConfig[];\n};\n\nexport interface GridConfig {\n    groups: GridGroupConfig[];\n    optionalCells?: CellConfig[];\n    cellHeight: number;\n    footerHeight: number;\n    panelHeight?: number;\n    scrollLeft?: number;\n    readonly?: boolean;\n    lastScrollTop?: number;\n    selectionMode?: 'multiple' | 'single' | 'none';\n\n    // internals\n    __cellRows?: number;\n    __rowHeight?: number;\n    __rowWidth?: number;\n\n    /**\n     * you need to set new or config for this to work\n     * You can use this to save current sorting/grouping for later\n     * these will override what is set in a datasource // todo: add a option to skip this?\n     */\n    groupingSet?: GroupArgument[];\n    sortingSet?: SortArgument[];\n    groupingExpanded?: string[];\n\n    // callbacks, maybe move these out of the config, or own config for this?\n    beforeEditCallbackFn?: any;\n    afterEditCallbackFn?: any;\n    renderRowCallBackFn?: any;\n    renderLabelCallBackFn?: any;\n    renderFilterCallBackFn?: any;\n    beforeFilterCallbackFn?: any;\n}\n","import { SimpleHtmlGrid, IGridConfig } from '.';\nimport { GroupArgument, GridConfig, CellConfig, FilterArgument, GridGroupConfig } from './types';\nimport { Datasource, DataContainer, Entity } from '@simple-html/datasource';\nimport { SortArgument } from '@simple-html/datasource';\n\n/**\n * Grid nterface is just connection between datasource/config to the grid.\n */\nexport class GridInterface {\n    /**\n     * Have all the data\n     **/\n    private __ds: Datasource;\n\n    /**\n     * connected grid\n     **/\n    private __SimpleHtmlGrid: SimpleHtmlGrid;\n\n    /**\n     * for subscribing event (current entity etc)\n     **/\n    private __subscribers: Function[] = [];\n\n    private __SCROLL_TOPS: number[];\n    private __SCROLL_HEIGHTS: number[];\n    private __SCROLL_HEIGHT: number;\n    private __handleEvent: any = null;\n    private __CONFIG: GridConfig;\n\n    constructor(config: GridConfig, datasource?: Datasource | DataContainer) {\n        if (!datasource) {\n            this.__ds = new Datasource();\n        } else {\n            if (datasource.type === 'Datasource') {\n                this.__ds = datasource as Datasource;\n            }\n            if (datasource.type === 'DataContainer') {\n                this.__ds = new Datasource(datasource as DataContainer);\n            }\n        }\n\n        this.__CONFIG = config;\n        this.parseConfig();\n    }\n\n    /**\n     * datasource dataContainer data\n     */\n    get completeDataset() {\n        return this.__ds.getAllData();\n    }\n\n    /**\n     * filtered data- no groups here, just pure data\n     */\n    get filteredDataset() {\n        return this.__ds.getRows(true);\n    }\n\n    /**\n     * this is the rows the grid is displaying\n     */\n    get displayedDataset() {\n        return this.__ds.getRows();\n    }\n\n    /**\n     * returns current datasource\n     */\n    public getDatasource() {\n        return this.__ds;\n    }\n\n    /**\n     * event handler for the grid\n     * Internal useage only\n     * @param _event string\n     */\n    handleEvent(_event: { type: string; data: any }) {\n        if (_event.type === 'currentEntity') {\n            return true;\n        }\n\n        if (_event.type === 'selectionChange') {\n            this.__SimpleHtmlGrid.triggerEvent('selection');\n            return true;\n        }\n\n        // update config sorting sets\n        this.config.groupingSet = this.__ds.getGrouping();\n        this.config.groupingExpanded = this.__ds.getExpanded();\n        this.config.sortingSet = this.__ds.getOrderBy();\n\n        if (this.__handleEvent === null) {\n            this.__SimpleHtmlGrid && this.__SimpleHtmlGrid.resetRowCache();\n\n            // only trigger once..\n            this.__handleEvent = 1;\n            Promise.resolve().then(() => {\n                this.dataSourceUpdated();\n                this.__SimpleHtmlGrid && this.reRender();\n                this.__handleEvent = null;\n            });\n        }\n\n        return true;\n    }\n\n    /**\n     * runs thouh config and sets some internals needed when creating grid or changing the config\n     */\n    private parseConfig() {\n        // set groupheight\n        let cellheight = 1;\n        this.__CONFIG.groups.forEach((group) => {\n            if (group.rows) {\n                group.rows.forEach((_c, i) => {\n                    if (cellheight < i + 1) {\n                        cellheight = i + 1;\n                    }\n                });\n            }\n        });\n        this.__CONFIG.__cellRows = cellheight;\n        this.__CONFIG.__rowHeight = this.__CONFIG.cellHeight * cellheight;\n\n        //set left on groups\n        let totalWidth = 0;\n        this.config.groups.reduce((agg, element) => {\n            element.__left = agg;\n            totalWidth = totalWidth + element.width;\n            return element.__left + element.width;\n        }, 0);\n        this.__CONFIG.__rowWidth = totalWidth;\n\n        if (this.__CONFIG) {\n            if (this.__CONFIG.sortingSet) {\n                this.__ds.setOrderBy(this.__CONFIG.sortingSet);\n            }\n            if (this.__CONFIG.groupingSet) {\n                this.__ds.setGrouping(this.__CONFIG.groupingSet);\n            }\n            if (this.__CONFIG.groupingExpanded) {\n                this.__ds.setExpanded(this.__CONFIG.groupingExpanded);\n            }\n        }\n    }\n\n    /**\n     * if you have manually edits config and need to update you will need to run this\n     * grid also uses this for some internal use\n     */\n    manualConfigChange(config?: IGridConfig) {\n        if (config) {\n            this.__CONFIG = config;\n        }\n        this.parseConfig();\n        this.__updateSortConfig();\n        this.__ds.reloadDatasource();\n        this.dataSourceUpdated();\n        this.__SimpleHtmlGrid && this.__SimpleHtmlGrid.manualConfigChange();\n        this.__handleEvent = null;\n    }\n\n    /**\n     * add or replace data, this also edits the underlaying datasource/container\n     * with other words repplacing data also replace data in underlaying datasource and container\n     */\n    setData(data: any[], add = false, reRunFilter = false) {\n        this.__ds.setData(data, add, reRunFilter);\n\n        this.dataSourceUpdated();\n    }\n\n    /**\n     * Reloads newest data from datasource\n     * Internal usage only, do not call\n     */\n    reloadDatasource() {\n        this.__ds.reloadDatasource();\n        this.dataSourceUpdated();\n    }\n\n    /**\n     * update vaiable row values according to datasource\n     * Internal usage only, do not call\n     */\n    dataSourceUpdated() {\n        this.__SCROLL_TOPS = [];\n        this.__SCROLL_HEIGHTS = [];\n        this.__SCROLL_HEIGHT = 0;\n        const cell = this.config.cellHeight;\n        const row = this.config.__rowHeight;\n        let count = 0;\n        this.displayedDataset.forEach((ent: Entity) => {\n            const height = ent.__group ? cell : row;\n\n            this.__SCROLL_TOPS.push(count);\n            this.__SCROLL_HEIGHTS.push(height);\n            count = count + height;\n        });\n        this.__SCROLL_HEIGHT = count;\n    }\n\n    /**\n     * returns config\n     * Internal usage only, do not call\n     */\n    public get config() {\n        return this.__CONFIG;\n    }\n\n    /**\n     * set new config\n     * Internal usage only, do not call\n     */\n    public set config(config: GridConfig) {\n        this.__CONFIG = config;\n    }\n\n    /**\n     * return scollvars used for controlling variable scrollheight\n     * Internal usage only, do not call\n     */\n    public get getScrollVars() {\n        return {\n            __SCROLL_HEIGHT: this.__SCROLL_HEIGHT,\n            __SCROLL_HEIGHTS: this.__SCROLL_HEIGHTS,\n            __SCROLL_TOPS: this.__SCROLL_TOPS\n        };\n    }\n\n    /**\n     * selects row\n     * Internal usage only, do not call\n     */\n    public select(row: number) {\n        this.__ds.select(row);\n    }\n\n    /**\n     * returns edited rows\n     * Internal usage only, do not call\n     */\n    public edited() {\n        return this.__ds.getAllData().filter((entity: Entity) => {\n            if (entity.__controller.__edited) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n    }\n\n    /**\n     * publish events\n     * Internal usage only, do not call\n     */\n    publishEvent(event: string) {\n        const keep = this.__subscribers.filter((element) => {\n            return element(event);\n        });\n        this.__subscribers = keep;\n    }\n\n    /**\n     * add events listener\n     * Internal usage only, do not call\n     */\n    addEventListener(callable: (event: string) => boolean) {\n        this.__subscribers.push(callable);\n    }\n\n    /**\n     * calls grid element reRender funtion\n     * Internal usage only, do not call\n     */\n    reRender() {\n        if (this.__SimpleHtmlGrid) this.__SimpleHtmlGrid.reRender();\n    }\n\n    /**\n     * calls grid element render funtion\n     * Internal usage only, do not call\n     */\n    render() {\n        if (this.__SimpleHtmlGrid) this.__SimpleHtmlGrid.render();\n    }\n\n    /**\n     * groups columns\n     * Internal usage only, do not call\n     */\n    groupingCallback(_event: any, col: CellConfig) {\n        let newGrouping = col ? true : false;\n        const groupings = this.__ds.getGrouping();\n        col &&\n            groupings.forEach((g: GroupArgument) => {\n                if (g.attribute === col.attribute) {\n                    newGrouping = false;\n                }\n            });\n\n        if (newGrouping) {\n            groupings.push({ title: col.header, attribute: col.attribute });\n        }\n        this.clearConfigSort(this.config.groups.flatMap((x) => x.rows));\n        this.__ds.sortReset();\n        groupings.forEach((group: GroupArgument) => {\n            this.__ds.setOrderBy({ attribute: group.attribute, ascending: true }, true);\n        });\n\n        this.__updateSortConfig();\n\n        /* this.config.groupingSet = this.__ds.getGrouping();\n        this.config.groupingExpanded = this.__ds.getExpanded(); */\n        this.__ds.group(groupings);\n    }\n\n    /**\n     * filters columns\n     * Internal usage only, do not call\n     */\n    filterCallback(event: any, col: CellConfig) {\n        switch (col.type) {\n            case 'date':\n                col.filterable.currentValue = new Date(event.target.valueAsDate);\n                break;\n            case 'number':\n                col.filterable.currentValue = event.target.valueAsNumber;\n                break;\n            case 'boolean':\n                col.filterable.currentValue = event.target.indeterminate\n                    ? null\n                    : event.target.checked;\n                break;\n            default:\n                col.filterable.currentValue = event.target.value;\n        }\n\n        const filter: FilterArgument = {\n            type: 'GROUP',\n            logicalOperator: 'AND',\n            filterArguments: []\n        };\n\n        const columns = this.config.groups.flatMap((x) => x.rows);\n        columns.forEach((col) => {\n            const f = col.filterable;\n            if (f && f.currentValue !== null && f.currentValue !== undefined) {\n                filter.filterArguments.push({\n                    type: 'CONDITION',\n                    logicalOperator: 'NONE',\n                    valueType: 'VALUE',\n                    attribute: col.attribute,\n                    attributeType: (col.type as any) || 'text',\n                    operator: f.operator || this.__ds.getFilterFromType(col.type),\n                    value: f.currentValue as any\n                });\n            }\n        });\n\n        this.__ds.filter(filter);\n    }\n\n    /**\n     * clears sorting order of config columns\n     * Internal usage only, do not call\n     */\n    public clearConfigSort(configColumns: CellConfig[]) {\n        configColumns.forEach((col) => {\n            if (col.sortable) {\n                col.sortable.sortAscending = null;\n                col.sortable.sortNo = null;\n            }\n        });\n    }\n\n    /**\n     * updates config sort, so grid displays correctly\n     * Internal usage only, do not call\n     */\n    private __updateSortConfig() {\n        const columns = this.config.groups.flatMap((x: GridGroupConfig) => x.rows);\n        const attributes = this.__ds.getOrderBy().flatMap((x: SortArgument) => x.attribute);\n        const sorting = this.__ds.getOrderBy();\n        columns.forEach((col) => {\n            const index = attributes.indexOf(col.attribute);\n            if (index !== -1) {\n                if (!col.sortable) {\n                    col.sortable = {};\n                }\n                col.sortable.sortAscending = sorting[index].ascending;\n                col.sortable.sortNo = index + 1;\n            } else {\n                if (col.sortable) {\n                    col.sortable.sortAscending;\n                    col.sortable.sortNo = null;\n                }\n            }\n        });\n    }\n\n    /**\n     * sorts the grid\n     * Internal usage only, do not call\n     */\n    public sortCallback(event: MouseEvent, col: CellConfig) {\n        // get data we need\n        let sorting = this.__ds.getOrderBy();\n        const attribute = col.attribute;\n        const ascending = col.sortable?.sortAscending;\n        const add = event.shiftKey;\n\n        // clear config sort\n        this.clearConfigSort(this.config.groups.flatMap((x) => x.rows));\n\n        if (add) {\n            let exist = false;\n            sorting.forEach((el: SortArgument) => {\n                if (el.attribute === attribute) {\n                    exist = true;\n                    el.ascending = el.ascending ? false : true;\n                }\n            });\n            if (!exist) {\n                sorting.push({ attribute, ascending: true });\n            } else {\n                col.sortable.sortAscending = true;\n                col.sortable.sortNo = sorting.length;\n            }\n        } else {\n            sorting = [{ attribute: attribute, ascending: ascending ? false : true }];\n        }\n\n        this.__ds.setOrderBy(sorting);\n\n        this.__ds.sort();\n\n        // this needs to run after sort since it might trigger endit of the sort order\n        this.__updateSortConfig();\n    }\n\n    /**\n     * removes group\n     * Internal usage only, do not call\n     */\n    public removeGroup(group: GroupArgument) {\n        this.__ds.removeGroup(group);\n    }\n\n    /**\n     * expands all/or 1\n     * Internal usage only, do not call\n     */\n    public groupExpand(id: string) {\n        this.__ds.expandGroup(id);\n    }\n\n    /**\n     * collapses all/1\n     * Internal usage only, do not call\n     */\n    public groupCollapse(id: string) {\n        this.__ds.collapseGroup(id);\n    }\n\n    /**\n     * grid connects to datainterface when its ready\n     * Internal usage only, do not call\n     */\n    public connectGrid(SimpleHtmlGrid: SimpleHtmlGrid) {\n        this.__SimpleHtmlGrid = SimpleHtmlGrid;\n        this.__ds.addEventListner(this);\n        this.dataSourceUpdated();\n        /* this.reRender(); */\n    }\n\n    /**\n     * grid element disconnects when diconnectedCallback is called, gridinterfaces disconnects from datsoruce events\n     * Internal usage only, do not call\n     */\n    public disconnectGrid() {\n        this.__SimpleHtmlGrid = null;\n        this.__ds.removeEventListner(this);\n    }\n\n    /**\n     * returns ds current filter\n     * Internal usage only, do not call\n     */\n    public getCurrentFilter() {\n        return this.__ds.getFilter();\n    }\n\n    /**\n     * set new current filter\n     * Internal usage only, do not call\n     */\n    public setCurrentFilter(filter: FilterArgument) {\n        this.__ds.setFilter(filter);\n    }\n\n    /**\n     * reruns current filter\n     * Internal usage only, do not call\n     */\n    public reRunFilter() {\n        this.__ds.filter();\n    }\n\n    /**\n     * returns true if row is selected\n     * Internal usage only, do not call\n     */\n    public isSelected(row: number) {\n        return this.__ds.getSelection().isSelected(row);\n    }\n\n    /**\n     * highlights/selects row\n     * Internal usage only, do not call\n     */\n    public highlightRow(e: MouseEvent, currentRow: number) {\n        this.__ds.getSelection().highlightRow(e, currentRow);\n    }\n\n    /**\n     * returns selected rows\n     * Internal usage only, do not call\n     */\n    public getSelectedRows() {\n        return this.__ds.getSelection().getSelectedRows();\n    }\n\n    /**\n     * Set all columns readonly state, if cell config have readonly this will still be readonly\n     * @param newValue default = true\n     */\n    public setReadOnlyState(newValue = true) {\n        return (this.__CONFIG.readonly = newValue);\n    }\n\n    /**\n     * resets scroll\n     * @param value default = 0\n     */\n    public setScroll(value = 0) {\n        if (this.__SimpleHtmlGrid) {\n            const node = this.__SimpleHtmlGrid.getElementsByTagName('simple-html-grid-body')[0];\n\n            if (node) {\n                node.scrollTop = value;\n            }\n        }\n    }\n\n    /**\n     * get filter string\n     */\n    public getFilterString() {\n        return this.getDatasource().getFilterString();\n    }\n}\n","import { GridInterface, SimpleHtmlGrid } from '..';\r\nimport { RowCache } from '../types';\r\n\r\nexport function updateRowCache(\r\n    connector: GridInterface,\r\n    rowPositionCache: RowCache[],\r\n    ref: SimpleHtmlGrid,\r\n    scrollTop: number\r\n) {\r\n    let newTopPosition = scrollTop;\r\n    if (connector.displayedDataset.length <= rowPositionCache.length) {\r\n        newTopPosition = 0;\r\n    }\r\n\r\n    const rowTopState: any = connector.getScrollVars.__SCROLL_TOPS;\r\n\r\n    let currentRow = 0;\r\n\r\n    let i = 0;\r\n\r\n    if (newTopPosition !== 0) {\r\n        // need to do some looping here, need to figure out where we are..\r\n        while (i < rowTopState.length) {\r\n            const checkValue = Math.floor(newTopPosition - rowTopState[i]);\r\n            if (checkValue < 0) {\r\n                currentRow = i - 1;\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    let rowFound = currentRow;\r\n    const update = [];\r\n    for (let i = 0; i < rowPositionCache.length; i++) {\r\n        const newRow = currentRow + i;\r\n        if (newRow > connector.displayedDataset.length - 1) {\r\n            rowFound--;\r\n            update.push(rowFound);\r\n        } else {\r\n            update.push(newRow);\r\n        }\r\n        rowPositionCache[i].update = true;\r\n    }\r\n\r\n    for (let i = 0; i < rowPositionCache.length; i++) {\r\n        const row = update.indexOf(rowPositionCache[i].i);\r\n        if (row !== -1) {\r\n            update.splice(row, 1);\r\n            rowPositionCache[i].update = false;\r\n        }\r\n    }\r\n    for (let i = 0; i < rowPositionCache.length; i++) {\r\n        if (rowPositionCache[i].update) {\r\n            const row = update.splice(0, 1)[0];\r\n            rowPositionCache[i].i = row;\r\n        } else {\r\n            rowPositionCache[i].update = true;\r\n        }\r\n    }\r\n    ref.triggerEvent('vertical-scroll');\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { html, render } from 'lit-html';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from '..';\nimport { RowCache } from '../types';\n\n@customElement('simple-html-grid-body')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    rowPositionCache: RowCache[];\n    ref: SimpleHtmlGrid;\n    firstLoad = true;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-body');\n        const config = this.connector.config;\n        this.style.top = config.panelHeight + config.__rowHeight * 2 + 2 + 'px';\n        this.style.bottom = config.footerHeight + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('vertical-scroll', this);\n        this.ref.addEventListener('reRender', this);\n        this.scrollTop = 500;\n    }\n\n    handleEvent(e: any) {\n        if (e.type === 'column-resize') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            render('', this); // force clear\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    updated() {\n        if (this.firstLoad) {\n            this.firstLoad = false;\n            const node = this.ref.getElementsByTagName('simple-html-grid-body')[0];\n            if (node && node.scrollTop !== this.connector.config.lastScrollTop) {\n                this.scrollTop = this.connector.config.lastScrollTop;\n                this.scrollLeft = this.connector.config.scrollLeft;\n                this.ref.reRender();\n            }\n        }\n    }\n\n    render() {\n        const config = this.connector.config;\n\n        if (this.firstLoad) {\n            const node = this.ref.getElementsByTagName('simple-html-grid-body')[0];\n            if (node && node.scrollTop !== this.connector.config.lastScrollTop) {\n                return html`\n                    <simple-html-grid-body-content\n                        style=\"height:${this.connector.getScrollVars\n                            .__SCROLL_HEIGHT}px;width:${config.__rowWidth}px\"\n                        class=\"simple-html-grid-content\"\n                    >\n                    </simple-html-grid-body-content>\n                `;\n            }\n        }\n        return html`\n            <simple-html-grid-body-content\n                style=\"height:${this.connector.getScrollVars\n                    .__SCROLL_HEIGHT}px;width:${config.__rowWidth}px\"\n                class=\"simple-html-grid-content\"\n            >\n                ${this.rowPositionCache.map((row) => {\n                    return html`\n                        <simple-html-grid-row-group\n                            .connector=${this.connector}\n                            .row=${row}\n                            .ref=${this.ref}\n                        ></simple-html-grid-row-group>\n                        <simple-html-grid-row\n                            .connector=${this.connector}\n                            .row=${row}\n                            .ref=${this.ref}\n                        ></simple-html-grid-row>\n                    `;\n                })}\n            </simple-html-grid-body-content>\n        `;\n    }\n}\n","import { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from './simple-html-grid';\r\n\r\nexport function generateMenuWithComponentName(\r\n    element: string,\r\n    event: any,\r\n    connector: GridInterface,\r\n    ref: SimpleHtmlGrid,\r\n    cell?: any,\r\n    rowNo?: number,\r\n    data?: any\r\n) {\r\n    const menu = document.createElement(element);\r\n    menu.style.top = event.clientY + document.documentElement.scrollTop + 'px'; // hide it\r\n    menu.style.left = event.clientX + document.documentElement.scrollLeft + 'px';\r\n    (menu as any).connector = connector;\r\n    (menu as any).ref = ref;\r\n    (menu as any).cell = cell;\r\n    (menu as any).rowNo = rowNo;\r\n    (menu as any).rowData = data;\r\n\r\n    document.body.appendChild(menu);\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { GridInterface, SimpleHtmlGrid } from '..';\nimport { GridGroupConfig } from '../types';\nimport { html } from 'lit-html';\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\n\n@customElement('simple-html-grid-cell-filter')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cellPosition: number;\n    ref: SimpleHtmlGrid;\n    currentHeight: number;\n    group: GridGroupConfig;\n    label: string;\n    attribute: string;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-cell-filter');\n        const config = this.connector.config;\n        this.style.height = config.cellHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\n        this.attribute = this.group.rows[this.cellPosition].attribute;\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'column-resize') {\n            this.style.width = this.group.width + 'px';\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        const cell = this.group.rows[this.cellPosition];\n        const connector = this.connector;\n        const ref = this.ref;\n\n        const coltype = cell.type === 'boolean' ? 'checkbox' : cell.type;\n\n        const value = cell.filterable.currentValue || null;\n        const placeholder = cell.filterable.placeholder || '';\n\n        const filterCallback = (e: any) => {\n            // if boolean column we to to overide how it behaves\n            if (cell.type === 'boolean') {\n                const t: any = e.target;\n                switch (t.state) {\n                    case 0:\n                        t.state = 2;\n                        t.style.opacity = '1';\n                        t.checked = true;\n                        t.indeterminate = false;\n                        break;\n                    case 2:\n                        t.state = 3;\n                        t.style.opacity = '1';\n                        t.indeterminate = false;\n                        break;\n                    default:\n                        t.checked = false;\n                        t.state = 0;\n                        t.style.opacity = '0.3';\n                        t.indeterminate = true;\n                }\n            }\n            this.connector.config.beforeFilterCallbackFn &&\n                this.connector.config.beforeFilterCallbackFn(e, cell, this.connector);\n            if (cell.filterable.auto !== false) {\n                this.connector.filterCallback(e, cell);\n            }\n        };\n\n        const enterKeyDown = (e: KeyboardEvent) => {\n            const keycode = e.keyCode ? e.keyCode : e.which;\n            if (keycode === 13) {\n                filterCallback(e as any);\n            }\n        };\n\n        let boolstyle = null;\n        let indeterminate = false;\n        let setState = 0;\n        if (cell.type === 'boolean' && cell.filterable) {\n            // if no value is set then its \"blank state, nothing filtered\n            if (cell.filterable.currentValue !== false && cell.filterable.currentValue !== true) {\n                boolstyle = 'opacity:0.3';\n                indeterminate = true;\n                setState = 0;\n            } else {\n                setState = cell.filterable.currentValue ? 2 : 3;\n            }\n        }\n\n        let classname = 'simple-html-grid-row-input';\n        if (cell.type === 'boolean') {\n            classname = 'simple-html-grid-row-checkbox';\n        }\n\n        const change = cell.editEventType !== 'input' ? filterCallback : null;\n        const input = cell.editEventType === 'input' ? filterCallback : null;\n\n        const contentMenu = function (e: any) {\n            if ((e as any).button !== 0) {\n                generateMenuWithComponentName(\n                    'simple-html-grid-menu-filter',\n                    e,\n                    connector,\n                    ref,\n                    cell\n                );\n            }\n        };\n\n        if (this.connector.config.renderFilterCallBackFn) {\n            return this.connector.config.renderFilterCallBackFn(\n                cell,\n                this.connector,\n                filterCallback\n            );\n        }\n\n        if (coltype === 'empty') {\n            return html`<div style=${boolstyle} class=\"${classname} hideme\"></div>`;\n        }\n\n        if (coltype === 'date') {\n            return html`\n                <input\n                    type=${coltype}\n                    style=${boolstyle}\n                    class=${classname}\n                    @input=${input}\n                    @keydown=${enterKeyDown}\n                    @contextmenu=${(e: any) => {\n                        e.preventDefault();\n                        contentMenu(e);\n                        return false;\n                    }}\n                    .valueAsDate=${value}\n                    placeholder=${placeholder}\n                />\n            `;\n        } else {\n            return html`\n                <input\n                    type=${coltype || 'text'}\n                    style=${boolstyle}\n                    .indeterminate=${indeterminate}\n                    .state=${setState}\n                    class=${classname}\n                    @change=${change}\n                    @contextmenu=${(e: any) => {\n                        e.preventDefault();\n                        contentMenu(e);\n                        return false;\n                    }}\n                    @input=${input}\n                    @keydown=${enterKeyDown}\n                    .value=${value}\n                    placeholder=${placeholder}\n                />\n            `;\n        }\n    }\n}\n","import { customElement, property } from '@simple-html/core';\r\nimport { GridInterface, SimpleHtmlGrid } from '..';\r\nimport { GridGroupConfig } from '../types';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('simple-html-grid-group-row')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    @property() rowNo: number;\r\n    ref: SimpleHtmlGrid;\r\n    currentHeight: number;\r\n    group: GridGroupConfig;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-group-row');\r\n        const config = this.connector.config;\r\n        const grouping =\r\n            this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n        const curleft = grouping ? grouping * 15 : 0;\r\n        this.style.display = 'block';\r\n        this.style.height = config.__rowHeight + 'px';\r\n        this.style.width = this.group.width + 'px';\r\n        this.style.left = this.group.__left + curleft + 'px';\r\n        this.ref.addEventListener('column-resize', this);\r\n        this.ref.addEventListener('reRender', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'column-resize' || e.type === 'reRender') {\r\n            const grouping =\r\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n            const curleft = grouping ? grouping * 15 : 0;\r\n            this.style.width = this.group.width + 'px';\r\n            this.style.left = this.group.__left + curleft + 'px';\r\n        }\r\n        if (e.type === 'reRender') {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('column-resize', this);\r\n        this.ref.removeEventListener('reRender', this);\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            ${this.group.rows.map((cell, i) => {\r\n                return html`\r\n                    <simple-html-grid-cell-row\r\n                        .connector=${this.connector}\r\n                        .rowNo=${this.rowNo}\r\n                        .cell=${cell}\r\n                        .group=${this.group}\r\n                        .ref=${this.ref}\r\n                        .cellPosition=${i}\r\n                    ></simple-html-grid-cell-row>\r\n                `;\r\n            })}\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from '..';\r\nimport { GridGroupConfig } from '../types';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('simple-html-grid-group-filter')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    rowNo: number;\r\n    ref: SimpleHtmlGrid;\r\n    currentHeight: number;\r\n    group: GridGroupConfig;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-group-label');\r\n        const config = this.connector.config;\r\n        this.style.display = 'block';\r\n        this.style.height = config.__rowHeight + 'px';\r\n        this.style.width = this.group.width + 'px';\r\n        this.style.left = this.group.__left + 'px';\r\n        this.style.top = config.__rowHeight + 'px';\r\n        this.ref.addEventListener('column-resize', this);\r\n        this.ref.addEventListener('reRender', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'column-resize' || e.type === 'reRender') {\r\n            const grouping =\r\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n            const curleft = grouping ? grouping * 15 : 0;\r\n            this.style.width = this.group.width + 'px';\r\n            this.style.left = this.group.__left + curleft + 'px';\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('column-resize', this);\r\n        this.ref.removeEventListener('reRender', this);\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            ${this.group.rows.map((cell, i) => {\r\n                if (cell.filterable) {\r\n                    return html`\r\n                        <simple-html-grid-cell-filter\r\n                            .connector=${this.connector}\r\n                            .cell=${cell}\r\n                            .group=${this.group}\r\n                            .ref=${this.ref}\r\n                            .cellPosition=${i}\r\n                        ></simple-html-grid-cell-filter>\r\n                    `;\r\n                } else {\r\n                    return '';\r\n                }\r\n            })}\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\n\n@customElement('simple-html-grid-footer')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    ref: SimpleHtmlGrid;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-footer');\n        const config = this.connector.config;\n        this.style.height = config.footerHeight + 'px';\n        this.ref.addEventListener('reRender', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    showEdit() {\n        return html`\n            <u\n                @click=\"${(e: any) => {\n                    generateMenuWithComponentName(\n                        'simple-html-grid-filter-dialog',\n                        e,\n                        this.connector,\n                        this.ref,\n                        null,\n                        null,\n                        null\n                    );\n                }}}\"\n                >Edit filter</u\n            >\n        `;\n    }\n\n    render() {\n        const totalRows = this.connector.completeDataset.length;\n        const filter = this.connector.filteredDataset.length;\n\n        return html`<div style=\"text-align:center\">${filter}/${totalRows}</div>\n            <div style=\"display: flex; justify-content: center;\">\n                <div style=\"margin-right:5px\">\n                    ${this.connector.getFilterString()}\n                </div>\n\n                ${this.connector.getFilterString() ? this.showEdit() : ''}\n            </div> `;\n    }\n}\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from '..';\r\n\r\n@customElement('simple-html-grid-header')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    ref: SimpleHtmlGrid;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-header');\r\n        const config = this.connector.config;\r\n        this.style.top = config.panelHeight + 'px';\r\n        this.style.height = config.__rowHeight * 2 + 2 + 'px';\r\n        this.ref.addEventListener('horizontal-scroll', this);\r\n        this.ref.addEventListener('reRender', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'horizontal-scroll' || e.type === 'reRender') {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('horizontal-scroll', this);\r\n        this.ref.removeEventListener('reRender', this);\r\n    }\r\n\r\n    render() {\r\n        const config = this.connector.config;\r\n\r\n        this.style.left = -config.scrollLeft + 'px';\r\n        this.style.width = config.__rowWidth + 'px';\r\n\r\n        const grouping =\r\n            this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n\r\n        return html`\r\n            <simple-html-grid-col\r\n                class=\" simple-html-grid-grouping-row\"\r\n                style=\"width:${grouping ? grouping * 15 : 0}px;left:0; display:${grouping\r\n                    ? 'block'\r\n                    : 'none'}\"\r\n            >\r\n            </simple-html-grid-col>\r\n            ${config.groups.map((group) => {\r\n                return html`\r\n                    <simple-html-grid-group-label\r\n                        .connector=${this.connector}\r\n                        .ref=${this.ref}\r\n                        .group=${group}\r\n                    >\r\n                    </simple-html-grid-group-label>\r\n                    <simple-html-grid-group-filter\r\n                        .connector=${this.connector}\r\n                        .ref=${this.ref}\r\n                        .group=${group}\r\n                    >\r\n                    </simple-html-grid-group-filter>\r\n                `;\r\n            })}\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { html, svg } from 'lit-html';\r\nimport { SimpleHtmlGrid } from '..';\r\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\r\n\r\n@customElement('simple-html-grid-panel')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    ref: SimpleHtmlGrid;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-panel');\r\n        const config = this.connector.config;\r\n        this.style.height = config.panelHeight + 'px';\r\n        this.ref.addEventListener('reRender', this);\r\n        this.addEventListener('contextmenu', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'reRender') {\r\n            this.render();\r\n        }\r\n        if (e.type === 'contextmenu') {\r\n            e.preventDefault();\r\n            generateMenuWithComponentName(\r\n                'simple-html-grid-menu-panel',\r\n                e,\r\n                this.connector,\r\n                this.ref\r\n            );\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.removeEventListener('contextmenu', this);\r\n        this.ref.removeEventListener('reRender', this);\r\n    }\r\n\r\n    render() {\r\n        const grouping = this.connector.config.groupingSet || [];\r\n\r\n        const mouseEnter = (e: MouseEvent) => {\r\n            (e.target as HTMLElement)\r\n                .getElementsByClassName('simple-html-grid-icon')[0]\r\n                .classList.remove('simple-html-grid-iconhidden');\r\n        };\r\n\r\n        const mouseLeave = (e: MouseEvent) => {\r\n            (e.target as HTMLElement)\r\n                .getElementsByClassName('simple-html-grid-icon')[0]\r\n                .classList.add('simple-html-grid-iconhidden');\r\n        };\r\n\r\n        return html`\r\n            ${grouping.map((group) => {\r\n                const click = () => {\r\n                    this.connector.removeGroup(group);\r\n                };\r\n                return html`\r\n                    <div\r\n                        @mouseenter=${mouseEnter}\r\n                        @mouseleave=${mouseLeave}\r\n                        class=\"simple-html-grid-grouping-panel-container\"\r\n                    >\r\n                        <p class=\"simple-html-grid-grouping-panel-p\">\r\n                            ${group.title || group.attribute}\r\n                            <i>\r\n                                <svg\r\n                                    @click=${click}\r\n                                    class=\"simple-html-grid-icon simple-html-grid-iconhidden\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                >\r\n                                    ${svg`<path d=\"M3 4l4.3 4L3 12h1.4L8 8.7l3.5 3.3H13L8.6 8 13 4h-1.5L8 7.3 4.4 4H3z\"/>`}\r\n                                </svg></i\r\n                            >\r\n                        </p>\r\n                    </div>\r\n                `;\r\n            })}\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from '..';\r\nimport { html } from 'lit-html';\r\nimport { RowCache } from '../types';\r\n\r\n@customElement('simple-html-grid-row')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    row: RowCache;\r\n    ref: SimpleHtmlGrid;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-row');\r\n        this.ref.addEventListener('vertical-scroll', this);\r\n        this.ref.addEventListener('selection', this);\r\n\r\n        if (this.connector.config.__rowHeight > this.connector.config.cellHeight) {\r\n            this.classList.add('grouping-row-border');\r\n        }\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'vertical-scroll') {\r\n            if (this.row.update) {\r\n                this.row.update = false;\r\n                this.render();\r\n            }\r\n        }\r\n        if (e.type === 'selection') {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('vertical-scroll', this);\r\n        this.ref.removeEventListener('selection', this);\r\n    }\r\n\r\n    render() {\r\n        const config = this.connector.config;\r\n\r\n        // check if height is changed\r\n        this.style.height = this.connector.getScrollVars.__SCROLL_HEIGHTS[this.row.i] + 'px';\r\n        this.style.transform = `translate3d(0px, ${\r\n            this.connector.getScrollVars.__SCROLL_TOPS[this.row.i]\r\n        }px, 0px)`;\r\n\r\n        const entity = this.connector.displayedDataset[this.row.i];\r\n\r\n        if (entity && !entity.__group) {\r\n            this.style.display = 'block';\r\n\r\n            const rowClick = (e: any) => {\r\n                this.connector.highlightRow(e as any, this.row.i);\r\n            };\r\n\r\n            if (this.connector.isSelected(this.row.i)) {\r\n                this.classList.add('simple-html-grid-selected-row');\r\n            } else {\r\n                this.classList.remove('simple-html-grid-selected-row');\r\n            }\r\n\r\n            const grouping =\r\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n\r\n            return html`\r\n                <simple-html-grid-col\r\n                    class=\"simple-html-grid-grouping-row\"\r\n                    style=\"width:${grouping ? grouping * 15 : 0}px;left:0; display:${grouping\r\n                        ? 'block'\r\n                        : 'none'}\"\r\n                >\r\n                </simple-html-grid-col>\r\n                ${config.groups.map((group) => {\r\n                    return html`\r\n                        <simple-html-grid-group-row\r\n                            @click=${rowClick}\r\n                            .connector=${this.connector}\r\n                            .rowNo=${this.row.i}\r\n                            .ref=${this.ref}\r\n                            .group=${group}\r\n                        >\r\n                        </simple-html-grid-group-row>\r\n                    `;\r\n                })}\r\n            `;\r\n        } else {\r\n            this.style.display = 'none';\r\n\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { CellConfig, Entity } from '../types';\n\nlet dataClip: any = null; // firefox hack\n@customElement('simple-html-grid-menu-row')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cell: CellConfig;\n    ref: SimpleHtmlGrid;\n    rowNo: number;\n    rowData: Entity;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid', 'simple-html-grid-menu');\n        document.addEventListener('click', this);\n        this.ref.addEventListener('vertical-scroll', this);\n        setTimeout(() => {\n            document.addEventListener('contextmenu', this);\n        }, 50);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        document.removeEventListener('click', this);\n        document.removeEventListener('contextmenu', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.target !== this) {\n            this.removeSelf();\n        }\n    }\n\n    async select(_type: string) {\n        if (_type === 'copy' && this.rowData) {\n            try {\n                dataClip = this.rowData[this.cell.attribute]; // firefox hack\n                await navigator.clipboard.writeText(dataClip);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n        if (_type === 'copy-range' && this.rowData) {\n            try {\n                dataClip = '';\n                this.connector.getSelectedRows().forEach((row: number) => {\n                    if (!this.connector.displayedDataset[row].__group) {\n                        dataClip =\n                            dataClip +\n                            (this.connector.displayedDataset[row][this.cell.attribute] || '') +\n                            '\\n';\n                    }\n                });\n                await navigator.clipboard.writeText(dataClip);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n        if (_type === 'paste') {\n            try {\n                let data;\n                if (navigator.clipboard.readText) {\n                    data = await navigator.clipboard.readText();\n                } else {\n                    data = dataClip; // firefox hack\n                }\n\n                if (data === 'undefined' || data === 'null') {\n                    data = null;\n                }\n                this.pasteIntoCells(data);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        if (_type === 'clear') {\n            this.pasteIntoCells(null);\n        }\n    }\n\n    pasteIntoCells(data: any) {\n        this.connector.getSelectedRows().forEach((row: number) => {\n            this.connector.displayedDataset[row][this.cell.attribute] = data;\n        });\n        this.connector.reRender();\n    }\n\n    removeSelf() {\n        document.body.removeChild(this);\n    }\n\n    allowCopyPaste() {\n        if (!this.connector.config.readonly && !this.cell.readonly) {\n            return html`<!-- only if not readonly -->\n                <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('paste')}>\n                    Paste into selected rows\n                </p>\n                <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('clear')}>\n                    Clear selected rows\n                </p>`;\n        } else {\n            return html``;\n        }\n    }\n\n    render() {\n        return html`<!-- data -->\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('copy')}>\n                Copy cell value\n            </p>\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('copy-range')}>\n                Copy column cell values\n            </p>\n            ${this.allowCopyPaste()}`;\n    }\n}\n","import { customElement } from '@simple-html/core';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from '..';\r\nimport { GridGroupConfig } from '../types';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('simple-html-grid-group-label')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    ref: SimpleHtmlGrid;\r\n    currentHeight: number;\r\n    group: GridGroupConfig;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-group-label');\r\n        const config = this.connector.config;\r\n        this.style.display = 'block';\r\n        this.style.height = config.__rowHeight + 'px';\r\n        this.style.width = this.group.width + 'px';\r\n        this.style.left = this.group.__left + 'px';\r\n        this.ref.addEventListener('column-resize', this);\r\n        this.ref.addEventListener('reRender', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'column-resize' || e.type === 'reRender') {\r\n            const grouping =\r\n                this.connector.config.groupingSet && this.connector.config.groupingSet.length;\r\n            const curleft = grouping ? grouping * 15 : 0;\r\n            this.style.width = this.group.width + 'px';\r\n            this.style.left = this.group.__left + curleft + 'px';\r\n        }\r\n        if (e.type === 'reRender') {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('column-resize', this);\r\n        this.ref.removeEventListener('reRender', this);\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            ${this.group.rows.map((cell, i) => {\r\n                return html`\r\n                    <simple-html-grid-cell-label\r\n                        .connector=${this.connector}\r\n                        .cell=${cell}\r\n                        .group=${this.group}\r\n                        .ref=${this.ref}\r\n                        .cellPosition=${i}\r\n                    ></simple-html-grid-cell-label>\r\n                `;\r\n            })}\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from '..';\nimport { html, svg } from 'lit-html';\nimport { RowCache } from '../types';\n\n@customElement('simple-html-grid-row-group')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    row: RowCache;\n    ref: SimpleHtmlGrid;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-row');\n        this.ref.addEventListener('vertical-scroll', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'vertical-scroll') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n    }\n\n    render() {\n        // check if height is changed\n        //  if (this.currentHeight !== this.row.i * config.__rowHeight) {\n        this.style.height = this.connector.getScrollVars.__SCROLL_HEIGHTS[this.row.i] + 'px';\n        this.style.transform = `translate3d(0px, ${\n            this.connector.getScrollVars.__SCROLL_TOPS[this.row.i]\n        }px, 0px)`;\n        // }\n        const entity = this.connector.displayedDataset[this.row.i];\n\n        if (entity && entity.__group) {\n            this.style.display = 'block';\n\n            const changeGrouping = () => {\n                if (entity.__groupExpanded) {\n                    this.connector.groupCollapse(entity.__groupID);\n                } else {\n                    this.connector.groupExpand(entity.__groupID);\n                }\n            };\n\n            const defaultMarkup = html`\n                <i @click=${changeGrouping}>\n                    <svg\n                        class=\"simple-html-grid-icon\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 16 16\"\n                    >\n                        ${entity.__groupExpanded\n                            ? svg`<path d=\"M4.8 7.5h6.5v1H4.8z\" />`\n                            : svg`<path d=\"M7.4 4.8v2.7H4.7v1h2.7v3h1v-3h2.8v-1H8.5V4.8h-1z\" />`}\n                    </svg></i\n                ><span> ${entity.__groupName} (${entity.__groupTotal})</span>\n            `;\n\n            return html`\n                ${entity.__groupLvl\n                    ? html`\n                          <simple-html-grid-col\n                              class=\"simple-html-grid-col simple-html-grid-grouping-row\"\n                              style=\"width:${entity.__groupLvl\n                                  ? entity.__groupLvl * 15\n                                  : 0}px;left:0\"\n                          >\n                          </simple-html-grid-col>\n                      `\n                    : ''}\n                ${html`\n                    <simple-html-grid-col\n                        class=\"simple-html-grid-col-group\"\n                        style=\"left:${entity.__groupLvl ? entity.__groupLvl * 15 : 0}px;right:0\"\n                    >\n                        ${defaultMarkup}\n                    </simple-html-grid-col>\n                `}\n            `;\n        } else {\n            this.style.display = 'none';\n\n            return '';\n        }\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { CellConfig } from '../types';\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\n\n@customElement('simple-html-grid-menu-label')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cell: CellConfig;\n    ref: SimpleHtmlGrid;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid', 'simple-html-grid-menu');\n        document.addEventListener('click', this);\n        this.ref.addEventListener('vertical-scroll', this);\n        setTimeout(() => {\n            document.addEventListener('contextmenu', this);\n        }, 50);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('vertical-scroll', this);\n        document.removeEventListener('click', this);\n        document.removeEventListener('contextmenu', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.target !== this) {\n            this.removeSelf();\n        }\n    }\n\n    select(_type: string, asc?: boolean, add?: boolean) {\n        if (_type === 'sort') {\n            if (this.cell.sortable) {\n                this.cell.sortable.sortAscending = asc;\n                this.cell.sortable.noToggle = true;\n            } else {\n                this.cell.sortable = { sortAscending: asc, noToggle: true };\n            }\n            this.connector.sortCallback({ shiftKey: add } as MouseEvent, this.cell);\n        }\n        if (_type === 'groupBy') {\n            if (this.cell.allowGrouping) {\n                this.connector.groupingCallback(null, this.cell);\n            }\n        }\n        this.removeSelf();\n    }\n\n    removeSelf() {\n        document.body.removeChild(this);\n    }\n\n    render() {\n        return html`<p\n                class=\"simple-html-grid-menu-item\"\n                @click=${() => this.select('sort', false, false)}\n            >\n                Sort asc\n            </p>\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('sort', true, false)}>\n                Sort desc\n            </p>\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('sort', false, true)}>\n                Sort asc (add)\n            </p>\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('sort', true, true)}>\n                Sort desc (add)\n            </p>\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('groupBy')}>\n                Group by\n            </p>\n            <p\n                class=\"simple-html-grid-menu-item\"\n                @click=${() => {\n                    const cell = this.cell;\n                    if (!this.connector.config.optionalCells) {\n                        this.connector.config.optionalCells = [];\n                    }\n                    this.connector.config.optionalCells.push(cell);\n                    let removeGroup = null;\n                    this.connector.config.groups.forEach((row, groupNo) => {\n                        const index = row.rows.indexOf(cell);\n                        if (index !== -1) {\n                            row.rows.splice(index, 1);\n                        }\n                        if (row.rows.length === 0) {\n                            removeGroup = groupNo;\n                        }\n                    });\n                    if (removeGroup !== null) {\n                        this.connector.config.groups.splice(removeGroup, 1);\n                    }\n\n                    this.connector.manualConfigChange(this.connector.config);\n                }}\n            >\n                Remove cell\n            </p>\n            <p\n                class=\"simple-html-grid-menu-item\"\n                @click=${(e: any) =>\n                    generateMenuWithComponentName(\n                        'simple-html-grid-column-chooser',\n                        e,\n                        this.connector,\n                        this.ref,\n                        null,\n                        null,\n                        null\n                    )}\n            >\n                Column Chooser\n            </p>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { CellConfig, FilterComparisonOperator } from '../types';\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\n\n@customElement('simple-html-grid-menu-filter')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cell: CellConfig;\n    ref: SimpleHtmlGrid;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid', 'simple-html-grid-menu');\n        document.addEventListener('click', this);\n        this.ref.addEventListener('vertical-scroll', this);\n        setTimeout(() => {\n            document.addEventListener('contextmenu', this);\n        }, 50);\n    }\n\n    disconnectedCallback() {\n        document.removeEventListener('click', this);\n        document.removeEventListener('contextmenu', this);\n        this.ref.removeEventListener('vertical-scroll', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.target !== this) {\n            this.removeSelf();\n        }\n    }\n\n    select(_type: FilterComparisonOperator) {\n        if (this.cell.filterable) {\n            this.cell.filterable.operator = _type;\n        }\n        this.removeSelf();\n    }\n\n    removeSelf() {\n        document.body.removeChild(this);\n    }\n\n    clearAll() {\n        this.connector.setCurrentFilter(null);\n        const columns = this.connector.config.groups.flatMap((x) => x.rows);\n        columns.forEach((col) => {\n            const f = col.filterable;\n            if (f) {\n                f.currentValue = null;\n            }\n        });\n        this.connector.reRender();\n        this.connector.reRunFilter();\n    }\n\n    render() {\n        const operator = this.cell?.filterable?.operator || 'BEGIN_WITH';\n        console.log(operator);\n        return html`<p class=\"simple-html-grid-menu-item\" @click=${() => this.select('EQUAL')}>\n                ${operator === 'EQUAL' ? html`<u><b>Equal to</b></u>` : 'Equal to'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('NOT_EQUAL_TO')}>\n                ${operator === 'NOT_EQUAL_TO' ? html`<u><b>Not equal to</b></u>` : 'Not equal to'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('BEGIN_WITH')}>\n                ${operator === 'BEGIN_WITH' ? html`<u><b>Begin with</b></u>` : 'Begin with'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('GREATER_THAN')}>\n                ${operator === 'GREATER_THAN' ? html`<u><b>Greater than</b></u>` : 'Greater than'}\n            </p>\n\n            <p\n                class=\"simple-html-grid-menu-item\"\n                @click=${() => this.select('GREATER_THAN_OR_EQUAL_TO')}\n            >\n                ${operator === 'GREATER_THAN_OR_EQUAL_TO'\n                    ? html`<u><b>Greater than or equal</b></u>`\n                    : 'Greater than or equal'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('LESS_THAN')}>\n                ${operator === 'LESS_THAN' ? html`<u><b>Less than</b></u>` : 'Less than'}\n            </p>\n\n            <p\n                class=\"simple-html-grid-menu-item\"\n                @click=${() => this.select('LESS_THAN_OR_EQUAL_TO')}\n            >\n                ${operator === 'LESS_THAN_OR_EQUAL_TO'\n                    ? html`<u><b>Less than or equal</b></u>`\n                    : 'Less than or equal'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('END_WITH')}>\n                ${operator === 'END_WITH' ? html`<u><b>End with</b></u>` : 'End with'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('CONTAINS')}>\n                ${operator === 'CONTAINS' ? html`<u><b>Contains</b></u>` : 'Contains'}\n            </p>\n\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('DOES_NOT_CONTAIN')}>\n                ${operator === 'DOES_NOT_CONTAIN'\n                    ? html`<u><b>Does not contain</b></u>`\n                    : 'Does not contain'}\n            </p>\n\n            <hr />\n\n            <p\n                class=\"simple-html-grid-menu-item\"\n                @click=${(e: any) =>\n                    generateMenuWithComponentName(\n                        'simple-html-grid-filter-dialog',\n                        e,\n                        this.connector,\n                        this.ref,\n                        null,\n                        null,\n                        null\n                    )}\n            >\n                Advanced\n            </p>\n\n            <hr />\n            <p class=\"simple-html-grid-menu-item\" @click=${this.clearAll}>\n                clear filter all columns\n            </p>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { SimpleHtmlGrid } from './simple-html-grid';\r\nimport { html } from 'lit-html';\r\nimport { CellConfig } from '../types';\r\n\r\n@customElement('simple-html-grid-menu-panel')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    cell: CellConfig;\r\n    ref: SimpleHtmlGrid;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid', 'simple-html-grid-menu');\r\n        document.addEventListener('click', this);\r\n        this.ref.addEventListener('vertical-scroll', this);\r\n        setTimeout(() => {\r\n            document.addEventListener('contextmenu', this);\r\n        }, 50);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('vertical-scroll', this);\r\n        document.removeEventListener('click', this);\r\n        document.removeEventListener('contextmenu', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.target !== this) {\r\n            this.removeSelf();\r\n        }\r\n    }\r\n\r\n    select(_type: string) {\r\n        if (_type === 'clear') {\r\n            this.connector.config.groupingExpanded = [];\r\n            // this.connector.config.sortingSet = []; --keep\r\n            this.connector.config.groupingSet = [];\r\n            this.connector.manualConfigChange();\r\n        }\r\n        if (_type === 'collapse') {\r\n            this.connector.groupCollapse(null);\r\n        }\r\n        if (_type === 'expand') {\r\n            this.connector.groupExpand(null);\r\n        }\r\n        this.removeSelf();\r\n    }\r\n\r\n    removeSelf() {\r\n        document.body.removeChild(this);\r\n    }\r\n\r\n    render() {\r\n        return html`<p class=\"simple-html-grid-menu-item\" @click=${() => this.select('clear')}>\r\n                Clear grouping\r\n            </p>\r\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('collapse')}>\r\n                Collapse all\r\n            </p>\r\n            <p class=\"simple-html-grid-menu-item\" @click=${() => this.select('expand')}>\r\n                Expand all\r\n            </p>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\n\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('simple-html-grid-menu-custom')\r\nexport default class extends HTMLElement {\r\n    rows: any[];\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid', 'simple-html-grid-menu');\r\n\r\n        setTimeout(() => {\r\n            document.addEventListener('click', this);\r\n            document.addEventListener('contextmenu', this);\r\n        }, 50);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        document.removeEventListener('click', this);\r\n        document.removeEventListener('contextmenu', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.target !== this) {\r\n            this.removeSelf();\r\n        }\r\n    }\r\n\r\n    removeSelf() {\r\n        document.body.removeChild(this);\r\n    }\r\n\r\n    render() {\r\n        return this.rows.map((row) => {\r\n            return html`\r\n                <p class=\"simple-html-grid-menu-item\" @click=${() => row.callback(row)}>\r\n                    ${row.title}\r\n                </p>\r\n            `;\r\n        });\r\n    }\r\n}\r\n","import { GridInterface } from '..';\nimport { CellConfig, GridGroupConfig } from '../types';\nimport { html } from 'lit-html';\n\nlet dragCell: CellConfig = null;\nlet dragGroup: GridGroupConfig = null;\nlet dragColumnBlock: HTMLElement = null;\nconst delayDragEventTimer: any = null;\n\nexport const columnDragDropPanel = (event: string, _connector: GridInterface) => {\n    const drop = (e: MouseEvent) => {\n        if (dragCell.allowGrouping) {\n            _connector.groupingCallback(e, dragCell);\n        }\n        e.target.removeEventListener('mouseup', drop);\n        (e.target as any).classList.remove('simple-html-grid-candrop');\n    };\n\n    return (_e: MouseEvent) => {\n        if (event === 'enter' && dragCell) {\n            (_e.target as any).classList.add('simple-html-grid-candrop');\n            _e.target.addEventListener('mouseup', drop);\n        }\n\n        if (event === 'leave' && dragCell) {\n            _e.target.removeEventListener('mouseup', drop);\n            (_e.target as any).classList.remove('simple-html-grid-candrop');\n        }\n    };\n};\n\nexport const columnDragDrop = (\n    event: string,\n    _cell: CellConfig,\n    _connector: GridInterface,\n    _group: GridGroupConfig\n) => {\n    // here we will clean up eevnt listeners\n    const mouseUp = function () {\n        document.removeEventListener('mouseup', mouseUp);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        document.removeEventListener('mousemove', mouseMove);\n        clearTimeout(delayDragEventTimer);\n        dragCell = null;\n        dragGroup = null;\n        if (dragColumnBlock) {\n            document.body.removeChild(dragColumnBlock);\n        }\n        dragColumnBlock = null;\n    };\n\n    // this will just move our label\n    const mouseMove = function (e: MouseEvent) {\n        setTimeout(() => {\n            if (dragColumnBlock) {\n                dragColumnBlock.style.top = e.clientY + document.documentElement.scrollTop + 'px'; // hide it\n                dragColumnBlock.style.left = e.clientX + document.documentElement.scrollLeft + 'px';\n            }\n        }, 10);\n    };\n\n    // main event binded to column\n    return (_e: any) => {\n        // mouse down event\n        if (event === 'dragstart' && _e.button === 0 && _e.target.tagName === 'SPAN') {\n            //save cell ref\n            dragCell = _cell;\n            dragGroup = _group;\n\n            // register mouseup so we can clean up\n            document.addEventListener('mouseup', mouseUp);\n\n            dragColumnBlock = document.createElement('div');\n            dragColumnBlock.style.top = -1200 + 'px'; // hide it\n            dragColumnBlock.style.left = -1200 + 'px';\n            dragColumnBlock.style.height = _connector.config.cellHeight + 'px';\n            dragColumnBlock.classList.add('simple-html-grid');\n            dragColumnBlock.classList.add('simple-html-grid-drag');\n            dragColumnBlock.classList.add('simple-html-grid-cell-label');\n            dragColumnBlock.textContent = _cell.header;\n            document.body.appendChild(dragColumnBlock);\n            document.addEventListener('mousemove', mouseMove);\n        }\n\n        if (dragCell !== null) {\n            // not very fancy, but betteer then nothing\n            const drop = (e: any) => {\n                const daCell = Object.assign({}, dragCell);\n                const doCell = Object.assign({}, _cell);\n                const keys = Object.assign(dragCell, _cell);\n\n                for (const key in keys) {\n                    dragCell[key] = doCell[key];\n                    _cell[key] = daCell[key];\n                }\n\n                _connector.reRender();\n\n                e.target.removeEventListener('mouseup', drop);\n                (e.target as any).classList.remove('simple-html-grid-candrop');\n            };\n\n            if (event === 'enter' && dragCell && dragCell !== _cell) {\n                if (_cell.type === 'empty') {\n                    (_e.target as any).classList.toggle('hideme');\n                }\n\n                (_e.target as any).classList.add('simple-html-grid-candrop');\n                _e.target.addEventListener('mouseup', drop);\n            }\n\n            if (event === 'leave' && dragCell) {\n                if (_cell.type === 'empty') {\n                    (_e.target as any).classList.toggle('hideme');\n                }\n                _e.target.removeEventListener('mouseup', drop);\n                (_e.target as any).classList.remove('simple-html-grid-candrop');\n            }\n        }\n    };\n};\n\nexport function dropzone(\n    _connector: GridInterface,\n    _group: GridGroupConfig,\n    _cell: CellConfig,\n    type: 'left' | 'right' | 'top' | 'bottom'\n) {\n    const up = function (e: any) {\n        // loop old columns and remove them\n        let oldGroupI: number = null;\n        let oldRowI: number = null;\n        if (dragGroup) {\n            _connector.config.groups.forEach((g, i) => {\n                if (g === dragGroup) {\n                    g.rows.forEach((r, y) => {\n                        if (r === dragCell) {\n                            oldGroupI = i;\n                            oldRowI = y;\n                        }\n                    });\n                    if (oldRowI !== null) {\n                        g.rows.splice(oldRowI, 1);\n                    }\n                }\n            });\n        } else {\n            // its column chooser\n            let optionsCells: number = null;\n            _connector.config.optionalCells.forEach((r, i) => {\n                if (r === dragCell) {\n                    optionsCells = i;\n                }\n            });\n            if (optionsCells !== null) {\n                _connector.config.optionalCells.splice(optionsCells, 1);\n            }\n        }\n\n        // loop new group position and insert\n        let newGroupI: number = null;\n        let newRowI: number = null;\n        _connector.config.groups.forEach((g, i) => {\n            if (g === _group) {\n                g.rows.forEach((r, y) => {\n                    if (r === _cell) {\n                        newGroupI = i;\n                        newRowI = y;\n                    }\n                });\n            }\n        });\n        if (newRowI !== null) {\n            if (type === 'left') {\n                _connector.config.groups.splice(newGroupI, 0, {\n                    width: dragGroup ? _connector.config.groups[oldGroupI].width : 100,\n                    rows: [dragCell]\n                });\n            }\n            if (type === 'right') {\n                _connector.config.groups.splice(newGroupI + 1, 0, {\n                    width: dragGroup ? _connector.config.groups[oldGroupI].width : 100,\n                    rows: [dragCell]\n                });\n            }\n            if (type === 'top') {\n                _connector.config.groups[newGroupI].rows.splice(newRowI, 0, dragCell);\n            }\n            if (type === 'bottom') {\n                _connector.config.groups[newGroupI].rows.splice(newRowI + 1, 0, dragCell);\n            }\n        }\n        (e.target as any).classList.remove('simple-html-grid-candrop');\n        dragCell = null;\n        dragGroup = null;\n\n        // clean up empty groups\n        let removeGroup = null;\n        _connector.config.groups.forEach((row, groupNo) => {\n            if (row.rows.length === 0) {\n                removeGroup = groupNo;\n            }\n        });\n        if (removeGroup !== null) {\n            _connector.config.groups.splice(removeGroup, 1);\n        }\n\n        // rerender\n        setTimeout(() => {\n            _connector.manualConfigChange(_connector.config);\n        }, 0);\n    };\n\n    const mouseEnter = (e: MouseEvent) => {\n        if (dragCell && dragCell !== _cell) {\n            e.preventDefault();\n            (e.target as any).classList.add('simple-html-grid-candrop');\n            e.target.addEventListener('mouseup', up);\n        }\n    };\n\n    const mouseLeave = (e: MouseEvent) => {\n        if (dragCell && dragCell !== _cell) {\n            e.preventDefault();\n            (e.target as any).classList.remove('simple-html-grid-candrop');\n            e.target.removeEventListener('mouseup', up);\n        }\n    };\n\n    switch (type) {\n        case 'bottom':\n            return html`\n                <div\n                    class=\"simple-html-grid-drop-zone-bottom\"\n                    @mouseenter=${mouseEnter}\n                    @mouseleave=${mouseLeave}\n                ></div>\n            `;\n        case 'top':\n            return html`\n                <div\n                    class=\"simple-html-grid-drop-zone-top\"\n                    @mouseenter=${mouseEnter}\n                    @mouseleave=${mouseLeave}\n                ></div>\n            `;\n        case 'left':\n            return html`\n                <div\n                    class=\"simple-html-grid-drop-zone-left\"\n                    @mouseenter=${mouseEnter}\n                    @mouseleave=${mouseLeave}\n                ></div>\n            `;\n        case 'right':\n            return html`\n                <div\n                    class=\"simple-html-grid-drop-zone-right\"\n                    @mouseenter=${mouseEnter}\n                    @mouseleave=${mouseLeave}\n                ></div>\n            `;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { CellConfig, FilterArgument } from '../types';\nimport { columnDragDrop } from './dragEvent';\n\n@customElement('simple-html-grid-column-chooser')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cell: CellConfig;\n    ref: SimpleHtmlGrid;\n    width: number;\n    filterAttributes: CellConfig[];\n    filter: FilterArgument;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-menu');\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'reRender') {\n            this.render();\n            return;\n        }\n        if (e.target !== this) {\n            this.removeSelf();\n        }\n    }\n\n    removeSelf() {\n        document.body.removeChild(this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    render() {\n        return html`<div class=\"simple-html-grid \">\n            <span\n                class=\"block simple-html-grid-menu-item\"\n                @click=${() => {\n                    this.removeSelf();\n                }}\n            >\n                <b> Close</b>\n            </span>\n            ${this.connector.config.optionalCells?.map((cell) => {\n                const mousedown = columnDragDrop('dragstart', cell, this.connector, null);\n\n                return html`<span\n                    class=\"block simple-html-grid-menu-item\"\n                    @mousedown=${(e: any) => {\n                        mousedown(e);\n                    }}\n                >\n                    ${cell.header}\n                </span>`;\n            })}\n        </div>`;\n    }\n}\n","import { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from '..';\nimport { RowCache } from '../types';\nimport { updateRowCache } from './updateRowCache';\n\nlet scrollBarTimer: any;\n\nexport function scrollEvent(\n    connector: GridInterface,\n    rowPositionCache: RowCache[],\n    ref: SimpleHtmlGrid\n) {\n    return (e: any) => {\n        if (\n            connector.config.scrollLeft &&\n            connector.config.scrollLeft !== e.target.scrollLeft &&\n            connector.config.lastScrollTop === e.target.scrollTop\n        ) {\n            connector.config.scrollLeft = e.target.scrollLeft;\n            ref.triggerEvent('horizontal-scroll');\n        } else {\n            connector.config.scrollLeft = e.target.scrollLeft;\n            if (document.activeElement) {\n                (document.activeElement as any).blur();\n            }\n\n            const scrolltop = e.target.scrollTop;\n            const lastScrollTop = connector.config.lastScrollTop;\n            connector.config.lastScrollTop = scrolltop;\n\n            let scrollbars = false;\n            if (Math.abs(scrolltop - lastScrollTop) > 700) {\n                scrollbars = true;\n            }\n\n            if (scrollbars || scrollBarTimer) {\n                /**\n                 * Scrollbar scrolling\n                 */\n                if (scrollBarTimer) {\n                    clearTimeout(scrollBarTimer);\n                }\n                scrollBarTimer = setTimeout(() => {\n                    scrollBarTimer = null;\n                    updateRowCache(connector, rowPositionCache, ref, scrolltop);\n                }, 90);\n            } else {\n                /**\n                 * Normal scrolling (not scrollbar)\n                 */\n                scrollBarTimer = null;\n                updateRowCache(connector, rowPositionCache, ref, scrolltop);\n            }\n        }\n    };\n}\n","import { customElement, property } from '@simple-html/core';\r\nimport { SimpleHtmlGrid, GridInterface } from '..';\r\nimport { GridGroupConfig, CellConfig } from '../types';\r\nimport { html } from 'lit-html';\r\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\r\n\r\n@customElement('simple-html-grid-cell-row')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    cellPosition: number;\r\n    ref: SimpleHtmlGrid;\r\n    currentHeight: number;\r\n    @property() rowNo: number;\r\n    group: GridGroupConfig;\r\n    cell: CellConfig;\r\n\r\n    connectedCallback() {\r\n        this.classList.add('simple-html-grid-cell-row');\r\n        const config = this.connector.config;\r\n        this.style.display = 'block';\r\n        this.style.height = config.cellHeight + 'px';\r\n        this.style.width = this.group.width + 'px';\r\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\r\n        this.cell = this.group.rows[this.cellPosition];\r\n        this.ref.addEventListener('column-resize', this);\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        if (e.type === 'column-resize') {\r\n            this.style.width = this.group.width + 'px';\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.ref.removeEventListener('column-resize', this);\r\n    }\r\n\r\n    updateCallback(e: any) {\r\n        const data = this.connector.displayedDataset[this.rowNo];\r\n        const cell = this.cell;\r\n\r\n        this.connector.config.beforeEditCallbackFn &&\r\n            this.connector.config.beforeEditCallbackFn(e, cell, this.rowNo, data, this.connector);\r\n        // filter out based on type so we know what type to use\r\n        if (cell.autoUpdateData !== false) {\r\n            switch (this.cell.type) {\r\n                case 'boolean':\r\n                    data[cell.attribute] = e.target.checked;\r\n                    break;\r\n                case 'image':\r\n                    // rowData[col.attribute] = e.target.checked;\r\n                    // we need this ever ?\r\n                    break;\r\n                case 'date':\r\n                    data[cell.attribute] = e.target.valueAsDate;\r\n                    break;\r\n                case 'number':\r\n                    data[cell.attribute] = e.target.valueAsNumber;\r\n                    break;\r\n                default:\r\n                    data[cell.attribute] = e.target.value;\r\n            }\r\n            this.connector.publishEvent('attribute-change');\r\n        }\r\n        this.connector.config.afterEditCallbackFn &&\r\n            this.connector.config.afterEditCallbackFn(e, cell, this.rowNo, data, this.connector);\r\n    }\r\n\r\n    render() {\r\n        if (this.connector.displayedDataset[this.rowNo]) {\r\n            const cell = this.cell;\r\n            const data = this.connector.displayedDataset[this.rowNo];\r\n            const connector = this.connector;\r\n            const rowNo = this.rowNo;\r\n            const ref = this.ref;\r\n            const change = this.cell.editEventType !== 'input' ? this.updateCallback : null;\r\n            const input = this.cell.editEventType === 'input' ? this.updateCallback : null;\r\n\r\n            const contentMenu = function (e: any) {\r\n                if ((e as any).button !== 0) {\r\n                    generateMenuWithComponentName(\r\n                        'simple-html-grid-menu-row',\r\n                        e,\r\n                        connector,\r\n                        ref,\r\n                        cell,\r\n                        rowNo,\r\n                        data\r\n                    );\r\n                }\r\n            };\r\n\r\n            if (this.connector.config.renderRowCallBackFn) {\r\n                return this.connector.config.renderRowCallBackFn(\r\n                    cell,\r\n                    data,\r\n                    rowNo,\r\n                    connector,\r\n                    this.updateCallback\r\n                );\r\n            }\r\n\r\n            switch (cell.type) {\r\n                case 'boolean':\r\n                    return html`\r\n                        <input\r\n                            ?readonly=${cell.readonly || connector.config.readonly}\r\n                            ?disabled=${cell.disabled}\r\n                            @change=${change}\r\n                            @input=${input}\r\n                            type=\"checkbox\"\r\n                            @contextmenu=${(e: any) => {\r\n                                e.preventDefault();\r\n                                contentMenu(e);\r\n                                return false;\r\n                            }}\r\n                            .checked=${data[cell.attribute]}\r\n                            class=\"simple-html-grid-row-checkbox\"\r\n                        />\r\n                    `;\r\n                case 'image':\r\n                    return html`\r\n                        <img\r\n                            .src=${data[cell.attribute] || ''}\r\n                            class=\"simple-html-grid-image-round\"\r\n                        />\r\n                    `;\r\n                case 'empty':\r\n                    return html`<div class=\"simple-html-grid-row-input \"></div>`;\r\n\r\n                case 'date':\r\n                    return html`\r\n                        <input\r\n                            ?readonly=${cell.readonly || connector.config.readonly}\r\n                            ?disabled=${cell.disabled}\r\n                            @change=${change}\r\n                            @input=${input}\r\n                            type=${cell.type}\r\n                            @contextmenu=${(e: any) => {\r\n                                e.preventDefault();\r\n                                contentMenu(e);\r\n                                return false;\r\n                            }}\r\n                            .valueAsDate=${data[cell.attribute] || null}\r\n                            class=\"simple-html-grid-row-input\"\r\n                        />\r\n                    `;\r\n                case 'number':\r\n                    return html`\r\n                        <input\r\n                            ?readonly=${cell.readonly || connector.config.readonly}\r\n                            ?disabled=${cell.disabled}\r\n                            @change=${change}\r\n                            @input=${input}\r\n                            type=${cell.type}\r\n                            @contextmenu=${(e: any) => {\r\n                                e.preventDefault();\r\n                                contentMenu(e);\r\n                                return false;\r\n                            }}\r\n                            .valueAsNumber=${data[cell.attribute]}\r\n                            class=\"simple-html-grid-row-input\"\r\n                        />\r\n                    `;\r\n                default:\r\n            }\r\n\r\n            return html`\r\n                <input\r\n                    ?readonly=${cell.readonly || connector.config.readonly}\r\n                    ?disabled=${cell.disabled}\r\n                    @change=${change}\r\n                    @input=${input}\r\n                    @contextmenu=${(e: any) => {\r\n                        e.preventDefault();\r\n                        contentMenu(e);\r\n                        return false;\r\n                    }}\r\n                    type=${cell.type || 'text'}\r\n                    .value=${data[cell.attribute] || null}\r\n                    class=\"simple-html-grid-row-input\"\r\n                />\r\n            `;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { GridGroupConfig } from '../types';\r\nimport { SimpleHtmlGrid } from '../';\r\n\r\nexport function resizeColumnElement(ref: SimpleHtmlGrid, group: GridGroupConfig) {\r\n    let originX: number = null;\r\n    const originalColumnWidth = group.width;\r\n\r\n    const mouseMove = (e: MouseEvent) => {\r\n        e.preventDefault();\r\n        if (originX) {\r\n            const movment = Math.abs(originX - e.screenX);\r\n            if (movment % 2 === 0) {\r\n                const movementX = originX - e.screenX;\r\n                const newColumnWidth = originalColumnWidth - movementX;\r\n                group.width = newColumnWidth > 10 ? newColumnWidth : 10;\r\n\r\n                // fix config before trigger\r\n                let totalWidth = 0;\r\n                ref.interface.config.groups.reduce((agg, element) => {\r\n                    element.__left = agg;\r\n                    totalWidth = totalWidth + element.width;\r\n                    return element.__left + element.width;\r\n                }, 0);\r\n                ref.interface.config.__rowWidth = totalWidth;\r\n\r\n                requestAnimationFrame(() => {\r\n                    ref.triggerEvent('column-resize');\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const mouseUp = () => {\r\n        document.removeEventListener('mousemove', mouseMove);\r\n        document.removeEventListener('mouseup', mouseUp);\r\n    };\r\n\r\n    const mouseDown = (e: MouseEvent) => {\r\n        originX = e.screenX;\r\n        document.addEventListener('mousemove', mouseMove);\r\n        document.addEventListener('mouseup', mouseUp);\r\n    };\r\n\r\n    return html` <div class=\"simple-html-grid-draggable-handler\" @mousedown=${mouseDown}></div> `;\r\n}\r\n","import { html, svg } from 'lit-html';\r\nimport { CellConfig } from '../types';\r\nimport { GridInterface } from '../gridInterface';\r\n\r\nexport function sorticonElement(_connector: GridInterface, col: CellConfig) {\r\n    const ascTemplate = svg`\r\n        <svg class=\"simple-html-grid-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M7.4 6L3 10h1.5L8 7l3.4 3H13L8.5 6h-1z\"/>\r\n        </svg>`;\r\n\r\n    const descTemplate = svg`\r\n        <svg class=\"simple-html-grid-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M7.4 10L3 6h1.5L8 9.2 11.3 6H13l-4.5 4h-1z\"/>\r\n        </svg>`;\r\n\r\n    if (col.sortable && col.sortable.sortNo) {\r\n        return html`\r\n            <i class=\"simple-html-grid-fa-sort-number\" data-vgridsort=\"${col.sortable.sortNo}\">\r\n                ${col.sortable.sortAscending ? ascTemplate : descTemplate}\r\n            </i>\r\n        `;\r\n    } else {\r\n        return html``;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { GridInterface, SimpleHtmlGrid } from '..';\nimport { GridGroupConfig } from '../types';\nimport { html } from 'lit-html';\nimport { resizeColumnElement } from './resizeColumnElement';\nimport { sorticonElement } from './sorticonElement';\nimport { columnDragDrop, dropzone } from './dragEvent';\nimport { generateMenuWithComponentName } from './generateMenuWithComponentName';\n\n@customElement('simple-html-grid-cell-label')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cellPosition: number;\n    ref: SimpleHtmlGrid;\n    currentHeight: number;\n    group: GridGroupConfig;\n    label: string;\n\n    connectedCallback() {\n        this.classList.add('simple-html-grid-cell-label');\n        const config = this.connector.config;\n        this.style.display = 'block';\n        this.style.height = config.cellHeight + 'px';\n        this.style.width = this.group.width + 'px';\n        this.style.top = this.cellPosition * config.cellHeight + 'px';\n        this.ref.addEventListener('column-resize', this);\n        this.ref.addEventListener('reRender', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'column-resize') {\n            this.render();\n        }\n        if (e.type === 'reRender') {\n            this.render();\n        }\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('column-resize', this);\n        this.ref.removeEventListener('reRender', this);\n    }\n\n    capalize(text: string) {\n        if (text) {\n            return text[0].toUpperCase() + text.substring(1, text.length);\n        } else {\n            return text;\n        }\n    }\n\n    render() {\n        const cell = this.group.rows[this.cellPosition];\n        const connector = this.connector;\n        const ref = this.ref;\n        const label = this.capalize(this.group.rows[this.cellPosition].header || '');\n\n        const sortCallback = (e: any) => {\n            const mouseup = (e: MouseEvent) => {\n                cell.sortable.beforeSortCallbackFn &&\n                    cell.sortable.beforeSortCallbackFn(e as any, cell, connector);\n                if (cell.sortable.auto !== false) {\n                    connector.sortCallback(e as any, cell);\n                }\n            };\n\n            if ((e as any).button === 0) {\n                e.target.addEventListener('mouseup', mouseup);\n                setTimeout(() => {\n                    e.target.removeEventListener('mouseup', mouseup);\n                }, 500);\n            } else {\n                // do not do anything, we use context event here\n                //console.log('open menu');\n            }\n        };\n\n        const mousedown = columnDragDrop('dragstart', cell, connector, this.group);\n        const mouseenter = columnDragDrop('enter', cell, connector, this.group);\n        const mouseleave = columnDragDrop('leave', cell, connector, this.group);\n\n        const contentMenu = function (e: any) {\n            if ((e as any).button !== 0) {\n                generateMenuWithComponentName(\n                    'simple-html-grid-menu-label',\n                    e,\n                    connector,\n                    ref,\n                    cell\n                );\n            }\n        };\n\n        this.style.width = this.group.width + 'px';\n\n        if (this.connector.config.renderLabelCallBackFn) {\n            return this.connector.config.renderLabelCallBackFn(\n                cell,\n                this.connector,\n                sorticonElement,\n                resizeColumnElement,\n                mousedown,\n                mouseenter,\n                mouseleave\n            );\n        }\n\n        if (cell.type === 'empty') {\n            return html`\n                <style>\n                    .simple-html-grid .hideme {\n                        background-color: ${getComputedStyle(this.ref).getPropertyValue(\n                            '--SimpleHtmlGrid-main-bg-color'\n                        )};\n                    }\n                </style>\n                <span\n                    .cell=${cell}\n                    class=\"simple-html-grid-label hideme\"\n                    @mouseenter=${!cell.disableDragDrop && mouseenter}\n                    @mouseleave=${!cell.disableDragDrop && mouseleave}\n                    @contextmenu=${(e: any) => {\n                        e.preventDefault();\n                        contentMenu(e);\n                        return false;\n                    }}\n                >\n                </span>\n                ${resizeColumnElement(this.ref, this.group)}\n            `;\n        } else {\n            return html`\n                <span\n                    .cell=${cell}\n                    class=\"simple-html-grid-label\"\n                    @mousedown=${(e: any) => {\n                        cell.sortable && sortCallback(e);\n                        !cell.disableDragDrop && mousedown(e);\n                    }}\n                    @contextmenu=${(e: any) => {\n                        e.preventDefault();\n                        contentMenu(e);\n                        return false;\n                    }}\n                    @mouseenter=${!cell.disableDragDrop && mouseenter}\n                    @mouseleave=${!cell.disableDragDrop && mouseleave}\n                    >${label} ${sorticonElement(this.connector, cell)}</span\n                >\n                ${resizeColumnElement(this.ref, this.group)}\n                ${dropzone(this.connector, this.group, cell, 'left')}\n                ${dropzone(this.connector, this.group, cell, 'right')}\n                ${dropzone(this.connector, this.group, cell, 'top')}\n                ${dropzone(this.connector, this.group, cell, 'bottom')}\n            `;\n        }\n    }\n}\n","export function generateMenu(event: any, rows: any[]) {\r\n    const menu = document.createElement('simple-html-grid-menu-custom');\r\n    menu.style.top = event.clientY + document.documentElement.scrollTop + 'px'; // hide it\r\n    menu.style.left = event.clientX + document.documentElement.scrollLeft + 'px';\r\n    (menu as any).rows = rows;\r\n    document.body.appendChild(menu);\r\n}\r\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../../types';\n\n/**\n * delete btn, removes condition\n */\nexport function deleteBtn(ctx: any, operatorObjectArr: FilterArgument[], i: number) {\n    return html` <button\n        class=\"dialog-item-x dialog-condition-trash\"\n        @click=${() => {\n            operatorObjectArr && operatorObjectArr.splice(i, 1);\n            ctx.render();\n        }}\n    >\n        <svg\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n        >\n            <path\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n            ></path>\n        </svg>\n    </button>`;\n}\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../../types';\n\n/**\n * returns input based on type\n */\nexport function valueInput(operatorObject: FilterArgument) {\n    if (operatorObject.operator === 'IN') {\n        return html`<textarea\n            class=\"dialog-item-y\"\n            style=\"text-align: center;\"\n            value=${Array.isArray(operatorObject.value)\n                ? operatorObject.value.join('\\n')\n                : operatorObject.value}\n            @input=${(e: any) => {\n                const x: any[] = e.target.value.split('\\n');\n                if (x[x.length - 1] === '') {\n                    x.pop();\n                }\n                operatorObject.value = x as any;\n            }}\n        ></textarea>`;\n    }\n\n    switch (operatorObject.attributeType) {\n        case 'boolean':\n            return html`<input\n                class=\"dialog-item-y\"\n                style=\"text-align: center;\"\n                type=\"checkbox\"\n                .checked=${operatorObject.value}\n                @change=${(e: any) => {\n                    operatorObject.value = e.target.checked;\n                }}\n                @input=${(e: any) => {\n                    operatorObject.value = e.target.checked;\n                }}\n            />`;\n        case 'image':\n        // nothing\n        case 'empty':\n        // nothing\n        case 'date':\n            return html`<input\n                class=\"dialog-item-y\"\n                style=\"text-align: center;\"\n                type=\"date\"\n                .valueAsDate=${operatorObject.value || null}\n                @input=${(e: any) => {\n                    operatorObject.value = e.target.valueAsDate;\n                }}\n            />`;\n        case 'number':\n            return html`<input\n                class=\"dialog-item-y\"\n                style=\"text-align: center;\"\n                type=\"number\"\n                .valueAsNumber=${operatorObject.value}\n                @input=${(e: any) => {\n                    operatorObject.value = e.target.valueAsNumber;\n                }}\n            />`;\n        default:\n            return html`<input\n                class=\"dialog-item-y\"\n                style=\"text-align: center;\"\n                value=${operatorObject.value}\n                @input=${(e: any) => {\n                    operatorObject.value = e.target.value;\n                }}\n            />`;\n    }\n}\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../../types';\n\n/**\n * sets if value is input or btn to select attibutes\n */\nexport function selectAttributeOrInputBtn(operatorObject: FilterArgument, ctx: any) {\n    return html` <button\n        class=\"dialog-item-x dialog-condition-type\"\n        @click=${() => {\n            operatorObject.valueType = operatorObject.valueType === 'VALUE' ? 'ATTRIBUTE' : 'VALUE';\n            ctx.render();\n        }}\n    >\n        <svg\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n        >\n            <path\n                d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n            ></path>\n        </svg>\n    </button>`;\n}\n","import { html } from 'lit-html';\nimport { CellConfig, FilterArgument } from '../../types';\nimport { generateMenu } from '../generateMenu';\n\n/**\n * returns list if attributes from config\n */\nexport function selectAttributesBtn(operatorObject: FilterArgument, ctx: any, isValue?: boolean) {\n    return html` <button\n        class=\"dialog-item-y\"\n        @click=${(e: any) => {\n            generateMenu(\n                e,\n                ctx.filterAttributes.map((e: CellConfig) => {\n                    return {\n                        title: e.attribute,\n                        callback: () => {\n                            if (isValue) {\n                                operatorObject.value = e.attribute;\n                            } else {\n                                operatorObject.attribute = e.attribute;\n                            }\n                            operatorObject.attributeType = e.type;\n                            ctx.render();\n                        }\n                    };\n                })\n            );\n        }}\n    >\n        ${isValue !== true ? operatorObject.attribute : operatorObject.value}\n    </button>`;\n}\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../../types';\nimport { generateMenu } from '../generateMenu';\nimport { OPERATORS } from '@simple-html/datasource';\n\n/**\n * returns list of operators user can use\n */\nexport function selectOperatorBtn(operatorObject: FilterArgument, ctx: any) {\n    return html` <button\n        class=\"dialog-item-y\"\n        @click=${(e: any) => {\n            generateMenu(e, [\n                {\n                    title: 'Begin with',\n                    callback: () => {\n                        operatorObject.operator = 'BEGIN_WITH';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Equal to',\n                    callback: () => {\n                        operatorObject.operator = 'EQUAL';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Contains',\n                    callback: () => {\n                        operatorObject.operator = 'CONTAINS';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Does not contain',\n                    callback: () => {\n                        operatorObject.operator = 'DOES_NOT_CONTAIN';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'End with',\n                    callback: () => {\n                        operatorObject.operator = 'END_WITH';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Greater than',\n                    callback: () => {\n                        operatorObject.operator = 'GREATER_THAN';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Greater than or equal to',\n                    callback: () => {\n                        operatorObject.operator = 'GREATER_THAN_OR_EQUAL_TO';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Less than',\n                    callback: () => {\n                        operatorObject.operator = 'LESS_THAN';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Less then or equal to',\n                    callback: () => {\n                        operatorObject.operator = 'LESS_THAN_OR_EQUAL_TO';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'Not Equal to',\n                    callback: () => {\n                        operatorObject.operator = 'NOT_EQUAL_TO';\n                        ctx.render();\n                    }\n                },\n                {\n                    title: 'IN',\n                    callback: () => {\n                        operatorObject.operator = 'IN';\n                        ctx.render();\n                    }\n                }\n            ]);\n        }}\n    >\n        <b>${OPERATORS[operatorObject.operator]}</b>\n    </button>`;\n}\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../../types';\nimport { filterDialogGroupTemplate } from '../filterDialogGroupTemplate';\nimport { deleteBtn } from './deleteBtn';\nimport { selectAttributeOrInputBtn } from './selectAttributeOrInputBtn';\nimport { valueInput } from './valueInput';\nimport { selectOperatorBtn } from './selectOperatorBtn';\nimport { selectAttributesBtn } from './selectAttributesBtn';\n\n/**\n * returns condition template\n */\nexport function filterDialogConditionTemplate(\n    operatorObjectArr: FilterArgument[],\n    ctx: any,\n    level: number\n): any {\n    ctx.width = level + ctx.width;\n    if (Array.isArray(operatorObjectArr)) {\n        return operatorObjectArr.map((operatorObject, i) => {\n            if (operatorObject.type === 'GROUP') {\n                return filterDialogGroupTemplate(operatorObject, ctx, level, operatorObjectArr);\n            } else {\n                return html` <div class=\"dialog-row\">\n                    <div class=\"dialog-item\">\n                        <span class=\"dialog-item-group\">${level}:</span>\n                        <!-- btn -->\n                        ${selectAttributesBtn(operatorObject, ctx)}\n                        <!-- btn -->\n                        ${selectOperatorBtn(operatorObject, ctx)}\n                        <!-- input or btn -->\n                        ${operatorObject.valueType === 'VALUE'\n                            ? valueInput(operatorObject)\n                            : selectAttributesBtn(operatorObject, ctx, true)}\n                        <!-- btn -->\n                        ${selectAttributeOrInputBtn(operatorObject, ctx)}\n                        <!-- btn -->\n                        ${deleteBtn(ctx, operatorObjectArr, i)}\n                    </div>\n                </div>`;\n            }\n        });\n    }\n    return '';\n}\n","import { html } from 'lit-html';\nimport { FilterArgument } from '../types';\nimport { filterDialogConditionTemplate } from './filterDialogCondition/filterDialogConditionTemplate';\nimport { generateMenu } from './generateMenu';\nexport function filterDialogGroupTemplate(\n    g: FilterArgument,\n    ctx: any,\n    level: number,\n    parent?: any[]\n) {\n    return html`\n        <li class=\"dialog-row main-group\">\n            <span class=\"dialog-item-group\">${level + 1}:</span>\n            <button\n                class=\"dialog-item-x\"\n                @click=${() => {\n                    g.logicalOperator = g.logicalOperator === 'AND' ? 'OR' : 'AND';\n                    ctx.render();\n                }}\n            >\n                <b> ${g.logicalOperator}</b>\n            </button>\n\n            <button\n                class=\"dialog-item-x\"\n                @click=${(e: any) => {\n                    generateMenu(e, [\n                        {\n                            title: 'Add Group',\n                            callback: () => {\n                                g.filterArguments.push({\n                                    type: 'GROUP',\n                                    logicalOperator: 'AND',\n                                    attribute: 'select',\n                                    operator: 'EQUAL',\n                                    valueType: 'VALUE',\n                                    attributeType: 'text',\n                                    filterArguments: [],\n                                    value: ''\n                                });\n                                ctx.render();\n                            }\n                        },\n                        {\n                            title: 'Add condition',\n                            callback: () => {\n                                g.filterArguments.push({\n                                    type: 'CONDITION',\n                                    logicalOperator: 'NONE',\n                                    attribute: 'select',\n                                    operator: 'EQUAL',\n                                    valueType: 'VALUE',\n                                    attributeType: 'text',\n                                    filterArguments: [],\n                                    value: ''\n                                });\n                                ctx.render();\n                            }\n                        }\n                    ]);\n                }}\n            >\n                <svg\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n            </button>\n            <button\n                class=\"dialog-item-x\"\n                @click=${() => {\n                    parent && parent.splice(parent.indexOf(g), 1);\n                    if (!parent) {\n                        g.filterArguments = [];\n                    }\n                    ctx.render();\n                }}\n            >\n                <svg\n                    fill=\"none\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                    ></path>\n                </svg>\n            </button>\n        </li>\n        ${filterDialogConditionTemplate(g.filterArguments, ctx, level + 1)}\n    `;\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { customElement } from '@simple-html/core';\nimport { GridInterface } from '../gridInterface';\nimport { SimpleHtmlGrid } from './simple-html-grid';\nimport { html } from 'lit-html';\nimport { CellConfig, FilterArgument } from '../types';\nimport { filterDialogGroupTemplate } from './filterDialogGroupTemplate';\n\n@customElement('simple-html-grid-filter-dialog')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    cell: CellConfig;\n    ref: SimpleHtmlGrid;\n    width: number;\n    filterAttributes: CellConfig[];\n    filter: FilterArgument;\n\n    connectedCallback() {\n        this.style.top = '0';\n        this.style.left = '0';\n        this.filter = this.connector.getCurrentFilter() || {\n            type: 'GROUP',\n            logicalOperator: 'AND',\n            attribute: null,\n            operator: null,\n            valueType: null,\n            value: null,\n            attributeType: 'text',\n            filterArguments: []\n        };\n        this.classList.add('simple-html-grid-menu-full');\n        this.filterAttributes = this.connector.config.groups.flatMap((y) => y.rows);\n    }\n\n    handleEvent(e: Event) {\n        if (e.target !== this) {\n            this.removeSelf();\n        }\n    }\n\n    removeSelf() {\n        document.body.removeChild(this);\n    }\n\n    render() {\n        return html`<div style=\"width:550px\" class=\"simple-html-grid simple-html-filter-dialog\">\n            <ul class=\"dialog-row main-group\">\n                <button\n                    class=\"dialog-item-x\"\n                    @click=${() => {\n                        this.removeSelf();\n                    }}\n                >\n                    <b> Close</b>\n                </button>\n                <button\n                    class=\"dialog-item-x\"\n                    @click=${() => {\n                        const columns = this.connector.config.groups.flatMap((x) => x.rows);\n                        columns.forEach((col) => {\n                            const f = col.filterable;\n                            if (f) {\n                                f.currentValue = null;\n                            }\n                        });\n                        this.connector.setCurrentFilter(this.filter);\n                        this.connector.reRunFilter();\n                        this.removeSelf();\n                    }}\n                >\n                    <b> Run query & close</b>\n                </button>\n                <button\n                    class=\"dialog-item-x\"\n                    @click=${() => {\n                        const columns = this.connector.config.groups.flatMap((x) => x.rows);\n                        columns.forEach((col) => {\n                            const f = col.filterable;\n                            if (f) {\n                                f.currentValue = null;\n                            }\n                        });\n                        this.connector.setCurrentFilter(this.filter);\n                        this.connector.reRunFilter();\n                    }}\n                >\n                    <b> Run query</b>\n                </button>\n            </ul>\n\n            ${filterDialogGroupTemplate(this.filter, this, 0)}\n                </ul>`;\n    }\n}\n","import './simple-html-grid-body';\r\nimport './simple-html-grid-cell-row';\r\nimport './simple-html-grid-cell-filter';\r\nimport './simple-html-grid-cell-label';\r\nimport './simple-html-grid-group-filter';\r\nimport './simple-html-grid-group-label';\r\nimport './simple-html-grid-group-row';\r\nimport './simple-html-grid-header';\r\nimport './simple-html-grid-footer';\r\nimport './simple-html-grid-panel';\r\nimport './simple-html-grid-row';\r\nimport './simple-html-grid-row-group';\r\nimport './simple-html-grid-menu-row';\r\nimport './simple-html-grid-menu-label';\r\nimport './simple-html-grid-menu-filter';\r\nimport './simple-html-grid-menu-panel';\r\nimport './simple-html-grid-filter-dialog';\r\nimport './simple-html-grid-column-chooser';\r\nimport './simple-html-grid-menu-custom';\r\nimport { scrollEvent } from './scrollEvent';\r\nimport { GridInterface } from '../gridInterface';\r\nimport { RowCache } from '../types';\r\nimport { html } from 'lit-html';\r\nimport { SimpleHtmlGrid } from '../';\r\nimport { columnDragDropPanel } from './dragEvent';\r\n\r\nexport function generate(\r\n    connector: GridInterface,\r\n    rowPositionCache: RowCache[],\r\n    ref: SimpleHtmlGrid\r\n) {\r\n    const scroll = scrollEvent(connector, rowPositionCache, ref);\r\n    const enter = columnDragDropPanel('enter', connector);\r\n    const leave = columnDragDropPanel('leave', connector);\r\n\r\n    return html`\r\n        <simple-html-grid-panel\r\n            .connector=${connector}\r\n            .ref=${ref}\r\n            @mouseleave=${leave}\r\n            @mouseenter=${enter}\r\n        ></simple-html-grid-panel>\r\n        <simple-html-grid-header .connector=${connector} .ref=${ref}></simple-html-grid-header>\r\n        <simple-html-grid-body\r\n            .connector=${connector}\r\n            .rowPositionCache=${rowPositionCache}\r\n            @scroll=${scroll}\r\n            .ref=${ref}\r\n        ></simple-html-grid-body>\r\n        <simple-html-grid-footer .connector=${connector} .ref=${ref}></simple-html-grid-footer>\r\n    `;\r\n}\r\n","import { render, html } from 'lit-html';\nimport { GridInterface } from '../gridInterface';\nimport { customElement } from '@simple-html/core';\nimport { generate } from './generate';\nimport { RowCache } from '../types';\nimport { updateRowCache } from './updateRowCache';\n\n@customElement('simple-html-grid')\nexport class SimpleHtmlGrid extends HTMLElement {\n    private __DATASOURCE_INTERFACE: GridInterface;\n    public rowCache: RowCache[] = [];\n\n    set interface(value: GridInterface) {\n        if (this.__DATASOURCE_INTERFACE !== value) {\n            this.__DATASOURCE_INTERFACE = value;\n            this.__DATASOURCE_INTERFACE.connectGrid(this);\n        }\n    }\n\n    get interface() {\n        return this.__DATASOURCE_INTERFACE;\n    }\n\n    public connectedCallback() {\n        this.resetRowCache();\n    }\n\n    public disconnectedCallback() {\n        this.__DATASOURCE_INTERFACE && this.__DATASOURCE_INTERFACE.disconnectGrid();\n    }\n\n    public reRender() {\n        this.cleanup();\n        this.triggerEvent('reRender');\n    }\n\n    public manualConfigChange() {\n        render(html``, this);\n        render(html` ${generate(this.interface, this.rowCache, this)} `, this);\n        this.cleanup();\n        /*  this.reRender(); */\n    }\n\n    public triggerEvent(eventName: string, data?: any) {\n        const event = new CustomEvent(eventName, {\n            bubbles: true,\n            detail: {\n                data\n            }\n        });\n        this.dispatchEvent(event);\n    }\n\n    public cleanup() {\n        const node = this.getElementsByTagName('simple-html-grid-body')[0];\n        if (node && node.scrollTop !== undefined && this.interface) {\n            updateRowCache(this.interface, this.rowCache, this, node.scrollTop);\n        }\n    }\n\n    public resetRowCache() {\n        if (this.interface) {\n            const node = this.getElementsByTagName('simple-html-grid-body')[0];\n            const height = node?.clientHeight || this.interface.config.cellHeight * 50;\n\n            let rowsNeeded = Math.round(Math.floor(height / this.interface.config.cellHeight)) + 2; //(buffer);\n            if (rowsNeeded > 50) {\n                rowsNeeded = 50;\n            }\n\n            const cacheLength =\n                this.interface.displayedDataset.length > rowsNeeded\n                    ? rowsNeeded\n                    : this.interface.displayedDataset.length;\n            if (cacheLength !== this.rowCache.length) {\n                if (this.rowCache.length > cacheLength) {\n                    let l = this.rowCache.length;\n                    for (let i = 0; i < l; i++) {\n                        if (this.rowCache && this.rowCache[i].i > cacheLength) {\n                            this.rowCache.splice(i, 1);\n                            i--;\n                            l--;\n                            cacheLength;\n                        }\n                    }\n                    const missingLength = cacheLength + 1 - this.rowCache.length;\n                    for (let i = 0; i < missingLength; i++) {\n                        this.rowCache.push({ i: i, update: true });\n                    }\n                } else {\n                    const missingLength = cacheLength - this.rowCache.length;\n                    for (let i = 0; i < missingLength; i++) {\n                        this.rowCache.push({ i: i, update: true });\n                    }\n                }\n            }\n        } else {\n            this.rowCache = [];\n        }\n    }\n\n    public render() {\n        return new Promise(() => {\n            if (this.interface) {\n                render(html` ${generate(this.interface, this.rowCache, this)} `, this);\n            } else {\n                if (this.isConnected) {\n                    console.error('no config set');\n                    render(html``, this);\n                }\n            }\n        });\n    }\n}\n","export { GridConfig as IGridConfig } from './types';\r\nexport { GridInterface } from './gridInterface';\r\nexport { Datasource } from '@simple-html/datasource';\r\nexport { SimpleHtmlGrid } from './elements/simple-html-grid';\r\n","import { IGridConfig } from '@simple-html/grid';\r\n\r\nexport function setup(rows: number, columns: number, scroll?: number) {\r\n    const setup: IGridConfig = {\r\n        cellHeight: 20,\r\n        panelHeight: 25,\r\n        footerHeight: 40,\r\n\r\n        selectionMode: 'multiple',\r\n        lastScrollTop: scroll,\r\n        groups: []\r\n    };\r\n\r\n    let word = 0;\r\n    for (let i = 1; i < columns; i++) {\r\n        const x: any = [];\r\n        for (let y = 0; y < rows; y++) {\r\n            word++;\r\n\r\n            if ((i === 1 && y === 0) || (i === 2 && y === 0) || (i === 2 && y === 1)) {\r\n                if (i === 1 && y === 0) {\r\n                    x.push({\r\n                        header: 'index',\r\n                        attribute: 'index',\r\n                        type: 'number',\r\n                        filterable: {},\r\n                        sortable: {}\r\n                    });\r\n                } else {\r\n                    x.push({\r\n                        header: 'date',\r\n                        readonly: true,\r\n                        attribute: 'date',\r\n                        type: 'date',\r\n                        filterable: {},\r\n                        sortable: {}\r\n                    });\r\n                }\r\n            } else {\r\n                x.push({\r\n                    header: 'word' + word,\r\n                    attribute: 'word' + word,\r\n                    filterable: {},\r\n                    sortable: {},\r\n                    allowGrouping: true\r\n                });\r\n            }\r\n        }\r\n        const x4 = Math.floor(Math.random() * 150) + 75;\r\n        setup.groups.push({ width: x4, rows: x });\r\n    }\r\n    return setup;\r\n}\r\n","// tslint:disable:max-line-length\r\n// tslint:disable:quotemark\r\nexport const data = [\r\n    'Flss',\r\n    'Banishevitz',\r\n    null,\r\n    'task-force',\r\n    'Tracee',\r\n    'Dregan',\r\n    null,\r\n    'User-centric',\r\n    'Corly',\r\n    'Lunge',\r\n    null,\r\n    'Ameliorated',\r\n    'Tobe',\r\n    'Marian',\r\n    null,\r\n    'uniform',\r\n    'Amalita',\r\n    'Allam',\r\n    null,\r\n    'intermediate',\r\n    'Janos',\r\n    'Becke',\r\n    null,\r\n    'encompassing',\r\n    'Willi',\r\n    'Jaram',\r\n    null,\r\n    'frame',\r\n    'Sharyl',\r\n    'Beck',\r\n    null,\r\n    'background',\r\n    'Alejandro',\r\n    'Brayley',\r\n    null,\r\n    'Cross-platform',\r\n    'Amy',\r\n    'Lazar',\r\n    null,\r\n    'Enterprise-wide',\r\n    'Alaster',\r\n    'Wakley',\r\n    null,\r\n    'system-worthy',\r\n    'Gwennie',\r\n    'Killford',\r\n    null,\r\n    'Horizontal',\r\n    'Blake',\r\n    'Batho',\r\n    null,\r\n    'attitude',\r\n    'Troy',\r\n    'MacKaig',\r\n    null,\r\n    'mission-critical',\r\n    'Brit',\r\n    'Fuggles',\r\n    null,\r\n    'fault-tolerant',\r\n    'Virgie',\r\n    'Cleugher',\r\n    null,\r\n    'foreground',\r\n    'Jecho',\r\n    'Bisacre',\r\n    null,\r\n    'tertiary',\r\n    'Alisander',\r\n    'Pherps',\r\n    null,\r\n    'needs-based',\r\n    'Cordell',\r\n    'Fairholm',\r\n    null,\r\n    'Multi-lateral',\r\n    'Roderigo',\r\n    'Moreno',\r\n    null,\r\n    'core',\r\n    'Terrell',\r\n    'MacAiline',\r\n    null,\r\n    'time-frame',\r\n    'Rodrick',\r\n    'Cisland',\r\n    null,\r\n    'parallelism',\r\n    'Ezra',\r\n    'Skentelbury',\r\n    null,\r\n    'forecast',\r\n    'Madelina',\r\n    'Hansod',\r\n    null,\r\n    'core',\r\n    'Martica',\r\n    'Samsonsen',\r\n    null,\r\n    'bottom-line',\r\n    'Redd',\r\n    'Scutchings',\r\n    null,\r\n    'bi-directional',\r\n    'Delmor',\r\n    'Hutcheon',\r\n    null,\r\n    'high-level',\r\n    'Kip',\r\n    'Edwick',\r\n    null,\r\n    'Object-based',\r\n    'Kari',\r\n    'Rosenzwig',\r\n    null,\r\n    'regional',\r\n    'Rubetta',\r\n    'Skelton',\r\n    null,\r\n    'Extended',\r\n    'Nanci',\r\n    'Craw',\r\n    null,\r\n    'Right-sized',\r\n    'Duane',\r\n    'Cherry',\r\n    null,\r\n    'model',\r\n    'Clarabelle',\r\n    'Pendergrast',\r\n    null,\r\n    'intangible',\r\n    'Daria',\r\n    'Rosas',\r\n    null,\r\n    'time-frame',\r\n    'Francesca',\r\n    'Glentworth',\r\n    null,\r\n    'circuit',\r\n    'Abigael',\r\n    'Capun',\r\n    null,\r\n    'Right-sized',\r\n    'Sallee',\r\n    'Ybarra',\r\n    null,\r\n    'Managed',\r\n    'Ezmeralda',\r\n    'Phillips',\r\n    null,\r\n    'standardization',\r\n    'Stephan',\r\n    'Stidever',\r\n    null,\r\n    'software',\r\n    'Smith',\r\n    'Shouler',\r\n    null,\r\n    'Future-proofed',\r\n    'Hobie',\r\n    'Lung',\r\n    null,\r\n    'time-frame',\r\n    'Blane',\r\n    'Minchi',\r\n    null,\r\n    'global',\r\n    'Dall',\r\n    'Amoore',\r\n    null,\r\n    'systemic',\r\n    'Tybie',\r\n    'Amaya',\r\n    null,\r\n    'Automated',\r\n    'Paul',\r\n    'Tyrrell',\r\n    null,\r\n    'Triple-buffered',\r\n    'Reggie',\r\n    'Gellert',\r\n    null,\r\n    'transitional',\r\n    'Alvera',\r\n    'Misk',\r\n    null,\r\n    'Polarised',\r\n    'Urban',\r\n    'Bengoechea',\r\n    null,\r\n    'local',\r\n    'Ferdie',\r\n    'Woollam',\r\n    null,\r\n    'analyzer',\r\n    'Constantine',\r\n    'Eggleton',\r\n    null,\r\n    'strategy',\r\n    'Mada',\r\n    'Cowins',\r\n    null,\r\n    'Focused',\r\n    'Alecia',\r\n    'Lomath',\r\n    null,\r\n    'bottom-line',\r\n    'Donall',\r\n    'Minucci',\r\n    null,\r\n    'web-enabled',\r\n    'Patty',\r\n    'Driffield',\r\n    null,\r\n    'real-time',\r\n    'Anne-corinne',\r\n    'Fasset',\r\n    null,\r\n    'product',\r\n    'Halsy',\r\n    'Edyson',\r\n    null,\r\n    'homogeneous',\r\n    'Donnajean',\r\n    'Fingleton',\r\n    null,\r\n    'initiative',\r\n    'Fonz',\r\n    'Kerfod',\r\n    null,\r\n    'static',\r\n    'Gage',\r\n    'Gaze',\r\n    null,\r\n    'pricing structure',\r\n    'Duff',\r\n    'Dummigan',\r\n    null,\r\n    'clear-thinking',\r\n    'Taite',\r\n    'Wegner',\r\n    null,\r\n    'Triple-buffered',\r\n    'Bird',\r\n    'Abbey',\r\n    null,\r\n    'needs-based',\r\n    'Muire',\r\n    'Esherwood',\r\n    null,\r\n    'Distributed',\r\n    'Kirbee',\r\n    'Dobbin',\r\n    null,\r\n    'middleware',\r\n    'Verge',\r\n    \"D'Aulby\",\r\n    null,\r\n    'portal',\r\n    'Abner',\r\n    'McNay',\r\n    null,\r\n    'Synergized',\r\n    'Benji',\r\n    'Adame',\r\n    null,\r\n    'protocol',\r\n    'Noemi',\r\n    'Aime',\r\n    null,\r\n    'orchestration',\r\n    'Jayson',\r\n    'MacTeggart',\r\n    null,\r\n    'Total',\r\n    'Barthel',\r\n    'Ranscomb',\r\n    null,\r\n    'human-resource',\r\n    'Bryan',\r\n    'Winsor',\r\n    null,\r\n    'background',\r\n    'Menard',\r\n    'Dowdle',\r\n    null,\r\n    'database',\r\n    'Amby',\r\n    'Strafford',\r\n    null,\r\n    'Diverse',\r\n    'Norean',\r\n    'Roper',\r\n    null,\r\n    'Cross-group',\r\n    'Gasper',\r\n    'Chawner',\r\n    null,\r\n    'secondary',\r\n    'Bamby',\r\n    'Poland',\r\n    null,\r\n    'groupware',\r\n    'Ronda',\r\n    'Chestle',\r\n    null,\r\n    'secured line',\r\n    'Asa',\r\n    'Rackam',\r\n    null,\r\n    'info-mediaries',\r\n    'Crista',\r\n    'Julien',\r\n    null,\r\n    'Balanced',\r\n    'Daniel',\r\n    'Ybarra',\r\n    null,\r\n    'infrastructure',\r\n    'Germayne',\r\n    'Roseman',\r\n    null,\r\n    'neural-net',\r\n    'Marla',\r\n    'Hourican',\r\n    null,\r\n    'Vision-oriented',\r\n    'Howie',\r\n    'Sheach',\r\n    null,\r\n    'Polarised',\r\n    'Mal',\r\n    'Pearcehouse',\r\n    null,\r\n    'firmware',\r\n    'Kelbee',\r\n    'Wilstead',\r\n    null,\r\n    'Synergized',\r\n    'Randi',\r\n    'Bachmann',\r\n    null,\r\n    'optimizing',\r\n    'Granny',\r\n    'Oldcroft',\r\n    null,\r\n    'orchestration',\r\n    'Zonda',\r\n    'Barnett',\r\n    null,\r\n    'projection',\r\n    'Fredrick',\r\n    'Paulus',\r\n    null,\r\n    'next generation',\r\n    'Olva',\r\n    'Durnill',\r\n    null,\r\n    'scalable',\r\n    'Fanchon',\r\n    'Clapison',\r\n    null,\r\n    'benchmark',\r\n    'Berkly',\r\n    'Clack',\r\n    null,\r\n    'Right-sized',\r\n    'Lowell',\r\n    'Carwithim',\r\n    null,\r\n    'zero defect',\r\n    'Zahara',\r\n    'Orrah',\r\n    null,\r\n    'actuating',\r\n    'Gina',\r\n    'Andreix',\r\n    null,\r\n    'structure',\r\n    'Holden',\r\n    'Snodin',\r\n    null,\r\n    'application',\r\n    'Jyoti',\r\n    'Sweetzer',\r\n    null,\r\n    'standardization',\r\n    'Lesly',\r\n    'Illem',\r\n    null,\r\n    'fault-tolerant',\r\n    'Vernor',\r\n    'Swinn',\r\n    null,\r\n    'Optimized',\r\n    'Dalton',\r\n    'Click',\r\n    null,\r\n    'product',\r\n    'Reiko',\r\n    'Cauldwell',\r\n    null,\r\n    'methodology',\r\n    'Cherrita',\r\n    'Pimlock',\r\n    null,\r\n    'solution-oriented',\r\n    'Ronald',\r\n    'Semkins',\r\n    null,\r\n    'even-keeled',\r\n    'Shellie',\r\n    'Alcott',\r\n    null,\r\n    'Business-focused',\r\n    'Ronny',\r\n    'Coatts',\r\n    null,\r\n    'Universal',\r\n    'Thia',\r\n    'Voden',\r\n    null,\r\n    'pricing structure',\r\n    'Fabian',\r\n    'Spillett',\r\n    null,\r\n    'forecast',\r\n    'Minnaminnie',\r\n    'Dove',\r\n    null,\r\n    'Ergonomic',\r\n    'Thurstan',\r\n    'Merredy',\r\n    null,\r\n    'capability',\r\n    'Marjy',\r\n    'Grestye',\r\n    null,\r\n    'Synergistic',\r\n    'Ginni',\r\n    'Swyre',\r\n    null,\r\n    'synergy',\r\n    'Brandie',\r\n    'Cuseick',\r\n    null,\r\n    'definition',\r\n    'Curt',\r\n    'McDonagh',\r\n    null,\r\n    'Persevering',\r\n    'Nathaniel',\r\n    'Skull',\r\n    null,\r\n    'actuating',\r\n    'Sandye',\r\n    'Tunn',\r\n    null,\r\n    'Optional',\r\n    'Felice',\r\n    'McNish',\r\n    null,\r\n    'object-oriented',\r\n    'Dorisa',\r\n    \"O'Currane\",\r\n    null,\r\n    'Adaptive',\r\n    'Horst',\r\n    'Baitson',\r\n    null,\r\n    'forecast',\r\n    'Benny',\r\n    'Smittoune',\r\n    null,\r\n    'encryption',\r\n    'Marie',\r\n    'Austick',\r\n    null,\r\n    'Polarised',\r\n    'Marwin',\r\n    'Sines',\r\n    null,\r\n    'Front-line',\r\n    'Isidora',\r\n    'Housbie',\r\n    null,\r\n    'Integrated',\r\n    'Ynes',\r\n    'Dulieu',\r\n    null,\r\n    'analyzing',\r\n    'Field',\r\n    'Fermoy',\r\n    null,\r\n    'throughput',\r\n    'Maddy',\r\n    'Perrott',\r\n    null,\r\n    'mobile',\r\n    'Kenon',\r\n    'Chicotti',\r\n    null,\r\n    'Versatile',\r\n    'Jody',\r\n    'Demer',\r\n    null,\r\n    'Centralized',\r\n    'Fernandina',\r\n    'Hlavac',\r\n    null,\r\n    'fault-tolerant',\r\n    'Kort',\r\n    'Mollnar',\r\n    null,\r\n    'cohesive',\r\n    'Gael',\r\n    'Osburn',\r\n    null,\r\n    'Ameliorated',\r\n    'Francklyn',\r\n    'Dell Casa',\r\n    null,\r\n    'Optional',\r\n    'Kitti',\r\n    'Frotton',\r\n    null,\r\n    'Versatile',\r\n    'Maddalena',\r\n    'Lemmon',\r\n    null,\r\n    'real-time',\r\n    'Kirk',\r\n    'Nemchinov',\r\n    null,\r\n    'Configurable',\r\n    'Jodee',\r\n    'Swatheridge',\r\n    null,\r\n    'Sharable',\r\n    'Cynthie',\r\n    'Fitzhenry',\r\n    null,\r\n    'background',\r\n    'Ree',\r\n    'Reidie',\r\n    null,\r\n    'intermediate',\r\n    'Harriett',\r\n    'Ballintyne',\r\n    null,\r\n    '4th generation',\r\n    'Angus',\r\n    'Carpenter',\r\n    null,\r\n    'Diverse',\r\n    'Finley',\r\n    'Gardiner',\r\n    null,\r\n    'Total',\r\n    'Thadeus',\r\n    'Barhims',\r\n    null,\r\n    'Exclusive',\r\n    'Nichol',\r\n    'Zipsell',\r\n    null,\r\n    'support',\r\n    'Daniel',\r\n    'Giacubbo',\r\n    null,\r\n    'disintermediate',\r\n    'Andris',\r\n    'Lanegran',\r\n    null,\r\n    'website',\r\n    'Mill',\r\n    'Bursnall',\r\n    null,\r\n    'multi-state',\r\n    'Dorris',\r\n    'Mabee',\r\n    null,\r\n    'Multi-tiered',\r\n    'Rosina',\r\n    'St Pierre',\r\n    null,\r\n    'leverage',\r\n    'Emeline',\r\n    'Crickmoor',\r\n    null,\r\n    'Ergonomic',\r\n    'Isahella',\r\n    'Bastide',\r\n    null,\r\n    'even-keeled',\r\n    'Janith',\r\n    'Benettelli',\r\n    null,\r\n    'Persistent',\r\n    'Jarred',\r\n    'Dominichetti',\r\n    null,\r\n    'Object-based',\r\n    'Cherin',\r\n    'Berr',\r\n    null,\r\n    'definition',\r\n    'Lennie',\r\n    'Causton',\r\n    null,\r\n    'matrix',\r\n    'Brnaby',\r\n    'Dionisetti',\r\n    null,\r\n    'context-sensitive',\r\n    'Cele',\r\n    'Doberer',\r\n    null,\r\n    'mobile',\r\n    'Joachim',\r\n    'Vasiljevic',\r\n    null,\r\n    'non-volatile',\r\n    'Ashli',\r\n    'Lamberts',\r\n    null,\r\n    'leading edge',\r\n    'Enos',\r\n    'Pieracci',\r\n    null,\r\n    'transitional',\r\n    'Budd',\r\n    'Tomkys',\r\n    null,\r\n    'hub',\r\n    'Marybeth',\r\n    'Lassey',\r\n    null,\r\n    'well-modulated',\r\n    'Matthias',\r\n    'Crownshaw',\r\n    null,\r\n    'Face to face',\r\n    'Kaspar',\r\n    'Sherwen',\r\n    null,\r\n    'Secured',\r\n    'Linell',\r\n    'Brumwell',\r\n    null,\r\n    'Enhanced',\r\n    'Ambur',\r\n    'Driutti',\r\n    null,\r\n    'Intuitive',\r\n    'Billy',\r\n    'Chalcroft',\r\n    null,\r\n    'project',\r\n    'Gherardo',\r\n    'Lindeberg',\r\n    null,\r\n    'monitoring',\r\n    'Giuditta',\r\n    'Wrate',\r\n    null,\r\n    'monitoring',\r\n    'Sky',\r\n    'Biasetti',\r\n    null,\r\n    'local area network',\r\n    'Curcio',\r\n    'Choak',\r\n    null,\r\n    'Horizontal',\r\n    'Marleah',\r\n    'Friatt',\r\n    null,\r\n    'Fully-configurable',\r\n    'Connie',\r\n    'Toland',\r\n    null,\r\n    'Quality-focused',\r\n    'Wally',\r\n    'Poynser',\r\n    null,\r\n    'client-driven',\r\n    'Ward',\r\n    'Edison',\r\n    null,\r\n    'empowering',\r\n    'Tania',\r\n    'Moulsdall',\r\n    null,\r\n    'encryption',\r\n    'Hobie',\r\n    'McCarroll',\r\n    null,\r\n    'systematic',\r\n    'Axe',\r\n    \"O'Dowd\",\r\n    null,\r\n    'contextually-based',\r\n    'Westbrooke',\r\n    'Brabbs',\r\n    null,\r\n    'Synergistic',\r\n    'Noll',\r\n    'Gariff',\r\n    null,\r\n    'User-centric',\r\n    'Adriane',\r\n    'Duckett',\r\n    null,\r\n    'structure',\r\n    'Jolie',\r\n    'Biglin',\r\n    null,\r\n    'dynamic',\r\n    'Allene',\r\n    'Kitchingman',\r\n    null,\r\n    'function',\r\n    'Karel',\r\n    'Minshull',\r\n    null,\r\n    'optimal',\r\n    'Milli',\r\n    'Capaldo',\r\n    null,\r\n    'Enhanced',\r\n    'Shurlocke',\r\n    'Bulbrook',\r\n    null,\r\n    'hub',\r\n    'Audrey',\r\n    'Ewbanck',\r\n    null,\r\n    'data-warehouse',\r\n    'Emilie',\r\n    'Snelle',\r\n    null,\r\n    'hardware',\r\n    'Benyamin',\r\n    'de Keyser',\r\n    null,\r\n    'Front-line',\r\n    'Revkah',\r\n    'Archibold',\r\n    null,\r\n    'Grass-roots',\r\n    'Ingrim',\r\n    'Wall',\r\n    null,\r\n    'circuit',\r\n    'Julio',\r\n    'Davidowsky',\r\n    null,\r\n    'portal',\r\n    'Heindrick',\r\n    'Eastgate',\r\n    null,\r\n    'protocol',\r\n    'Calla',\r\n    'Bynold',\r\n    null,\r\n    'background',\r\n    'Tabbi',\r\n    'Bonicelli',\r\n    null,\r\n    'intermediate',\r\n    'Kleon',\r\n    'Kemmey',\r\n    null,\r\n    'well-modulated',\r\n    'Denyse',\r\n    'Ginie',\r\n    null,\r\n    'Persevering',\r\n    'Terrel',\r\n    'Dawkes',\r\n    null,\r\n    'system engine',\r\n    'Shea',\r\n    'Spurnier',\r\n    null,\r\n    'function',\r\n    'Demetra',\r\n    'Roizin',\r\n    null,\r\n    'open architecture',\r\n    'Roselin',\r\n    'Tallach',\r\n    null,\r\n    'moratorium',\r\n    'Kissie',\r\n    'Robardet',\r\n    null,\r\n    'project',\r\n    'Erv',\r\n    'Cockren',\r\n    null,\r\n    'neural-net',\r\n    'Clywd',\r\n    'Kivlin',\r\n    null,\r\n    'installation',\r\n    'Kyle',\r\n    'Abrami',\r\n    null,\r\n    'real-time',\r\n    'Elwyn',\r\n    'Peppin',\r\n    null,\r\n    'tertiary',\r\n    'Donetta',\r\n    'Leaburn',\r\n    null,\r\n    'multi-state',\r\n    'Clayborn',\r\n    'Hulles',\r\n    null,\r\n    'installation',\r\n    'Edlin',\r\n    'Dumberell',\r\n    null,\r\n    'initiative',\r\n    'Anny',\r\n    'Fance',\r\n    null,\r\n    'installation',\r\n    'Willey',\r\n    'Scripture',\r\n    null,\r\n    'Synergized',\r\n    'Conrade',\r\n    'Penhaligon',\r\n    null,\r\n    'challenge',\r\n    'Christalle',\r\n    'Ambrosio',\r\n    null,\r\n    'optimal',\r\n    'Malynda',\r\n    'Natalie',\r\n    null,\r\n    'algorithm',\r\n    'Mae',\r\n    'Caughte',\r\n    null,\r\n    'De-engineered',\r\n    'Cathi',\r\n    'Badger',\r\n    null,\r\n    'budgetary management',\r\n    'Clem',\r\n    'Fishley',\r\n    null,\r\n    'definition',\r\n    'Glynnis',\r\n    'Glendining',\r\n    null,\r\n    'Re-engineered',\r\n    'Cyrus',\r\n    'Aronow',\r\n    null,\r\n    'customer loyalty',\r\n    'Mehetabel',\r\n    'Siley',\r\n    null,\r\n    'Exclusive',\r\n    'Benjamen',\r\n    'Karlqvist',\r\n    null,\r\n    '6th generation',\r\n    'Lorri',\r\n    'Blumson',\r\n    null,\r\n    'empowering',\r\n    'Letta',\r\n    'Iamittii',\r\n    null,\r\n    'Business-focused',\r\n    'Mose',\r\n    'Blaske',\r\n    null,\r\n    'collaboration',\r\n    'Flem',\r\n    'Selliman',\r\n    null,\r\n    'Synergized',\r\n    'Belia',\r\n    'Chicotti',\r\n    null,\r\n    'Networked',\r\n    'Franky',\r\n    'Sheaber',\r\n    null,\r\n    'cohesive',\r\n    'Gianna',\r\n    'Busson',\r\n    null,\r\n    'Networked',\r\n    'Cecilio',\r\n    'Douthwaite',\r\n    null,\r\n    'model',\r\n    'Joelie',\r\n    'Node',\r\n    null,\r\n    'optimizing',\r\n    'Kiley',\r\n    'Hartlebury',\r\n    null,\r\n    'actuating',\r\n    'Ellary',\r\n    \"O'Lagene\",\r\n    null,\r\n    'stable',\r\n    'Tades',\r\n    'Tewes',\r\n    null,\r\n    'motivating',\r\n    'Rouvin',\r\n    'Jean',\r\n    null,\r\n    'Advanced',\r\n    'Bryant',\r\n    'Jacobsz',\r\n    null,\r\n    'Business-focused',\r\n    'Rab',\r\n    'Haymes',\r\n    null,\r\n    'context-sensitive',\r\n    'Debi',\r\n    'Bernardeau',\r\n    null,\r\n    'Distributed',\r\n    'Kally',\r\n    'Habbeshaw',\r\n    null,\r\n    'responsive',\r\n    'Grissel',\r\n    'Mullard',\r\n    null,\r\n    'Customizable',\r\n    'Margeaux',\r\n    'Bode',\r\n    null,\r\n    'hardware',\r\n    'Kristos',\r\n    'Mealand',\r\n    null,\r\n    'impactful',\r\n    'Rayshell',\r\n    'Lorek',\r\n    null,\r\n    'responsive',\r\n    'Celeste',\r\n    'Maltby',\r\n    null,\r\n    'Polarised',\r\n    'Claiborne',\r\n    'Sundin',\r\n    null,\r\n    'artificial intelligence',\r\n    'Aland',\r\n    'Darton',\r\n    null,\r\n    'fresh-thinking',\r\n    'Carmelina',\r\n    'Dumberell',\r\n    null,\r\n    'Implemented',\r\n    'Gwenette',\r\n    'Royall',\r\n    null,\r\n    'systemic',\r\n    'Egan',\r\n    'Ball',\r\n    null,\r\n    'context-sensitive',\r\n    'Chance',\r\n    'Shakshaft',\r\n    null,\r\n    'User-centric',\r\n    'Lilli',\r\n    'McKeown',\r\n    null,\r\n    'user-facing',\r\n    'Garek',\r\n    'de la Valette Parisot',\r\n    null,\r\n    'benchmark',\r\n    'Louise',\r\n    'Sweetnam',\r\n    null,\r\n    'intangible',\r\n    'Harman',\r\n    'Summerfield',\r\n    null,\r\n    'Future-proofed',\r\n    'Claresta',\r\n    'Faiers',\r\n    null,\r\n    'internet solution',\r\n    'Heather',\r\n    'Lamberti',\r\n    null,\r\n    'functionalities',\r\n    'Holly',\r\n    'MacAndreis',\r\n    null,\r\n    'Sharable',\r\n    'Westley',\r\n    'Abbets',\r\n    null,\r\n    'Cross-platform',\r\n    'Haskel',\r\n    'Kitley',\r\n    null,\r\n    'Innovative',\r\n    'Quintin',\r\n    'MacClay',\r\n    null,\r\n    'migration',\r\n    'Arron',\r\n    'De Bruin',\r\n    null,\r\n    'Adaptive',\r\n    'Radcliffe',\r\n    'Sexti',\r\n    null,\r\n    'customer loyalty',\r\n    'Larry',\r\n    'Geely',\r\n    null,\r\n    'asymmetric',\r\n    'Leanora',\r\n    \"O'Neary\",\r\n    null,\r\n    'projection',\r\n    'Pattin',\r\n    'Jardine',\r\n    null,\r\n    '24 hour',\r\n    'Roderich',\r\n    'Maben',\r\n    null,\r\n    'clear-thinking',\r\n    'Miquela',\r\n    'Heninghem',\r\n    null,\r\n    'tertiary',\r\n    'Catherina',\r\n    'Rafter',\r\n    null,\r\n    '6th generation',\r\n    'Saunders',\r\n    'Volonte',\r\n    null,\r\n    'Advanced',\r\n    'Bee',\r\n    'Trazzi',\r\n    null,\r\n    'Customizable',\r\n    'Rex',\r\n    'McQuade',\r\n    null,\r\n    'Innovative',\r\n    'Millie',\r\n    'Tulley',\r\n    null,\r\n    'encompassing',\r\n    'Kittie',\r\n    'Sains',\r\n    null,\r\n    'Profound',\r\n    'Lizzie',\r\n    'Ebbin',\r\n    null,\r\n    'intangible',\r\n    'Ludovika',\r\n    'Nolder',\r\n    null,\r\n    'Object-based',\r\n    'Hanson',\r\n    'Maffucci',\r\n    null,\r\n    'Polarised',\r\n    'Ricky',\r\n    'Carrel',\r\n    null,\r\n    'Team-oriented',\r\n    'Oralee',\r\n    'Bullen',\r\n    null,\r\n    'Exclusive',\r\n    'Baxter',\r\n    'Capell',\r\n    null,\r\n    'homogeneous',\r\n    'Averill',\r\n    'Davidi',\r\n    null,\r\n    'access',\r\n    'Liz',\r\n    'Breadmore',\r\n    null,\r\n    'eco-centric',\r\n    'Kare',\r\n    'Ottey',\r\n    null,\r\n    'info-mediaries',\r\n    'Aundrea',\r\n    'Litherland',\r\n    null,\r\n    'Business-focused',\r\n    'Avie',\r\n    'Coltart',\r\n    null,\r\n    'bi-directional',\r\n    'Edy',\r\n    'Kinsella',\r\n    null,\r\n    'concept',\r\n    'Marcy',\r\n    'Ceney',\r\n    null,\r\n    'Diverse',\r\n    'Lianna',\r\n    'Hallgate',\r\n    null,\r\n    'function',\r\n    'Kamila',\r\n    'Cave',\r\n    null,\r\n    'projection',\r\n    'Carie',\r\n    'Laffoley-Lane',\r\n    null,\r\n    'Profit-focused',\r\n    'Isidor',\r\n    'Dunnan',\r\n    null,\r\n    'encompassing',\r\n    'Fernando',\r\n    'Pyle',\r\n    null,\r\n    'Customer-focused',\r\n    'Darline',\r\n    'Dugdale',\r\n    null,\r\n    'coherent',\r\n    'Gertie',\r\n    'Merryman',\r\n    null,\r\n    'heuristic',\r\n    'Horatius',\r\n    'Wermerling',\r\n    null,\r\n    'User-friendly',\r\n    'Demott',\r\n    'Geddes',\r\n    null,\r\n    'Decentralized',\r\n    'Klarrisa',\r\n    'Sang',\r\n    null,\r\n    'Virtual',\r\n    'Ceil',\r\n    'Morrallee',\r\n    null,\r\n    'systematic',\r\n    'Khalil',\r\n    'Maffetti',\r\n    null,\r\n    'tertiary',\r\n    'Willow',\r\n    'Fass',\r\n    null,\r\n    'Public-key',\r\n    'Cora',\r\n    'Patmore',\r\n    null,\r\n    'Quality-focused',\r\n    'Land',\r\n    'Permain',\r\n    null,\r\n    'installation',\r\n    'Reta',\r\n    'Snoday',\r\n    null,\r\n    'Persistent',\r\n    'Isidore',\r\n    'Tarbard',\r\n    null,\r\n    'actuating',\r\n    'Rolph',\r\n    'Moodie',\r\n    null,\r\n    'contingency',\r\n    'Merle',\r\n    'Gowenlock',\r\n    null,\r\n    '24 hour',\r\n    'Nerta',\r\n    'Springthorp',\r\n    null,\r\n    '24 hour',\r\n    'Clair',\r\n    'Strase',\r\n    null,\r\n    'static',\r\n    'Tracie',\r\n    'Oty',\r\n    null,\r\n    'heuristic',\r\n    'Georg',\r\n    'Christal',\r\n    null,\r\n    'secured line',\r\n    'Guy',\r\n    'Goulthorp',\r\n    null,\r\n    'Open-source',\r\n    'Vlad',\r\n    'August',\r\n    null,\r\n    '4th generation',\r\n    'Vanda',\r\n    'Crane',\r\n    null,\r\n    'Customizable',\r\n    'Letta',\r\n    'Gillimgham',\r\n    null,\r\n    'stable',\r\n    'Merry',\r\n    'Tomsa',\r\n    null,\r\n    'coherent',\r\n    'Leola',\r\n    'Tremblett',\r\n    null,\r\n    'bifurcated',\r\n    'Domenic',\r\n    'Brownlow',\r\n    null,\r\n    'infrastructure',\r\n    'Dugald',\r\n    'Defrain',\r\n    null,\r\n    'Profit-focused',\r\n    'Conrad',\r\n    'Theunissen',\r\n    null,\r\n    'high-level',\r\n    'Torrey',\r\n    'Silk',\r\n    null,\r\n    'Grass-roots',\r\n    'Arni',\r\n    'Duesbury',\r\n    null,\r\n    'dedicated',\r\n    'Jessalin',\r\n    'Krebs',\r\n    null,\r\n    'Profound',\r\n    'Brocky',\r\n    'Pasek',\r\n    null,\r\n    'Polarised',\r\n    'Clemmie',\r\n    'Blood',\r\n    null,\r\n    'content-based',\r\n    'Lanny',\r\n    'Trorey',\r\n    null,\r\n    'function',\r\n    'Kalvin',\r\n    'Noonan',\r\n    null,\r\n    'frame',\r\n    'Donia',\r\n    'Kenworthey',\r\n    null,\r\n    'firmware',\r\n    'Halie',\r\n    'Pardi',\r\n    null,\r\n    'bi-directional',\r\n    'Aubry',\r\n    'Ninnotti',\r\n    null,\r\n    'Multi-channelled',\r\n    'Annamarie',\r\n    'Trundell',\r\n    null,\r\n    'Intuitive',\r\n    'Brockie',\r\n    'Water',\r\n    null,\r\n    'Right-sized',\r\n    'Rosamund',\r\n    'MacDonogh',\r\n    null,\r\n    'parallelism',\r\n    'Trumann',\r\n    'Angrock',\r\n    null,\r\n    'matrices',\r\n    'Carling',\r\n    'Piddlehinton',\r\n    null,\r\n    'Automated',\r\n    'Dane',\r\n    'Condict',\r\n    null,\r\n    'core',\r\n    'Constancia',\r\n    'Springate',\r\n    null,\r\n    'context-sensitive',\r\n    'Harlin',\r\n    'Iggalden',\r\n    null,\r\n    'Optimized',\r\n    'Aluino',\r\n    'Cripin',\r\n    null,\r\n    'Multi-layered',\r\n    'Fernande',\r\n    'Rigler',\r\n    null,\r\n    'matrix',\r\n    'Hendrick',\r\n    'Robberecht',\r\n    null,\r\n    'groupware',\r\n    'Quintus',\r\n    'Clair',\r\n    null,\r\n    'Exclusive',\r\n    'Joletta',\r\n    'Moores',\r\n    null,\r\n    'concept',\r\n    'Berri',\r\n    'Tidbold',\r\n    null,\r\n    'transitional',\r\n    'Hazel',\r\n    'Coatham',\r\n    null,\r\n    'algorithm',\r\n    'Derk',\r\n    'Wandless',\r\n    null,\r\n    'Pre-emptive',\r\n    'Marley',\r\n    'Gainor',\r\n    null,\r\n    'Face to face',\r\n    'Benji',\r\n    'De Beauchemp',\r\n    null,\r\n    'fault-tolerant',\r\n    'Gabrila',\r\n    'Schollick',\r\n    null,\r\n    'workforce',\r\n    'Win',\r\n    'Tunnow',\r\n    null,\r\n    'zero administration',\r\n    'Jonathon',\r\n    'Seville',\r\n    null,\r\n    'local',\r\n    'Hillery',\r\n    'Petrelluzzi',\r\n    null,\r\n    'alliance',\r\n    'Mariska',\r\n    'Lomb',\r\n    null,\r\n    'mobile',\r\n    'Hayyim',\r\n    'Whitechurch',\r\n    null,\r\n    'needs-based',\r\n    'Valentino',\r\n    'Kyne',\r\n    null,\r\n    'encryption',\r\n    'Panchito',\r\n    'Peskett',\r\n    null,\r\n    'standardization',\r\n    'Larissa',\r\n    'Rummery',\r\n    null,\r\n    'alliance',\r\n    'Courtenay',\r\n    'Mayo',\r\n    null,\r\n    'zero tolerance',\r\n    'Anabal',\r\n    'Stobbe',\r\n    null,\r\n    'high-level',\r\n    'Nerta',\r\n    'Marritt',\r\n    null,\r\n    'asynchronous',\r\n    'Marco',\r\n    'Haythorne',\r\n    null,\r\n    'Triple-buffered',\r\n    'Adeline',\r\n    'Scrivens',\r\n    null,\r\n    'Adaptive',\r\n    'Caralie',\r\n    'MacGille',\r\n    null,\r\n    'Versatile',\r\n    'Gaynor',\r\n    \"O'Doogan\",\r\n    null,\r\n    'Synergized',\r\n    'Murry',\r\n    'Epinoy',\r\n    null,\r\n    'Open-architected',\r\n    'Dalenna',\r\n    'Collinette',\r\n    null,\r\n    'frame',\r\n    'Byrle',\r\n    'Menault',\r\n    null,\r\n    'hardware',\r\n    'Talya',\r\n    'Darington',\r\n    null,\r\n    'Public-key',\r\n    'Lira',\r\n    'MacCardle',\r\n    null,\r\n    'methodical',\r\n    'Marrissa',\r\n    'Czyz',\r\n    null,\r\n    'multimedia',\r\n    'Gerhardt',\r\n    'Smitherham',\r\n    null,\r\n    'architecture',\r\n    'Benedick',\r\n    'Antic',\r\n    null,\r\n    'local area network',\r\n    'Seamus',\r\n    'Radki',\r\n    null,\r\n    'service-desk',\r\n    'Agnese',\r\n    'Deppe',\r\n    null,\r\n    'orchestration',\r\n    'Zerk',\r\n    'Duligall',\r\n    null,\r\n    'Synergistic',\r\n    'Jenny',\r\n    'Avo',\r\n    null,\r\n    'hierarchy',\r\n    'Tabitha',\r\n    'Jenman',\r\n    null,\r\n    'Reduced',\r\n    'Clea',\r\n    'Shera',\r\n    null,\r\n    'bi-directional',\r\n    'Morrie',\r\n    'MacCumeskey',\r\n    null,\r\n    'superstructure',\r\n    'Kris',\r\n    'Quest',\r\n    null,\r\n    'throughput',\r\n    'Oran',\r\n    'Rout',\r\n    null,\r\n    'firmware',\r\n    'Annis',\r\n    'Betham',\r\n    null,\r\n    'Integrated',\r\n    'Allin',\r\n    'Hostan',\r\n    null,\r\n    'Self-enabling',\r\n    'Warden',\r\n    'Sagg',\r\n    null,\r\n    'parallelism',\r\n    'Kendall',\r\n    'Murdy',\r\n    null,\r\n    'pricing structure',\r\n    'Durante',\r\n    'McMurray',\r\n    null,\r\n    'regional',\r\n    'Berry',\r\n    'Souley',\r\n    null,\r\n    'Profound',\r\n    'Naoma',\r\n    'Crace',\r\n    null,\r\n    'grid-enabled',\r\n    'Ives',\r\n    'Jamieson',\r\n    null,\r\n    'emulation',\r\n    'Odele',\r\n    'Kivell',\r\n    null,\r\n    'Implemented',\r\n    'Malory',\r\n    'Wallbutton',\r\n    null,\r\n    'Customizable',\r\n    'Cale',\r\n    'Wagenen',\r\n    null,\r\n    'customer loyalty',\r\n    'Karl',\r\n    'Rattery',\r\n    null,\r\n    'protocol',\r\n    'Gerty',\r\n    'Smelley',\r\n    null,\r\n    'Expanded',\r\n    'Pip',\r\n    'Mothersole',\r\n    null,\r\n    '5th generation',\r\n    'Arlana',\r\n    'Danielski',\r\n    null,\r\n    'next generation',\r\n    'Yule',\r\n    'Shitliffe',\r\n    null,\r\n    'Cross-platform',\r\n    'Theobald',\r\n    'Reddyhoff',\r\n    null,\r\n    'maximized',\r\n    'Kerianne',\r\n    'Lythgoe',\r\n    null,\r\n    'Networked',\r\n    'Zedekiah',\r\n    'Hawsby',\r\n    null,\r\n    'Visionary',\r\n    'Randell',\r\n    'Leathwood',\r\n    null,\r\n    'complexity',\r\n    'Franchot',\r\n    'Cumine',\r\n    null,\r\n    'knowledge base',\r\n    'Corbet',\r\n    'Muff',\r\n    null,\r\n    'Right-sized',\r\n    'Christoffer',\r\n    'Gecke',\r\n    null,\r\n    'disintermediate',\r\n    'Briana',\r\n    'Laskey',\r\n    null,\r\n    'intranet',\r\n    'Angus',\r\n    'Artist',\r\n    null,\r\n    'pricing structure',\r\n    'Jodie',\r\n    'Kittel',\r\n    null,\r\n    'holistic',\r\n    'Dorelia',\r\n    'McIlenna',\r\n    null,\r\n    'Team-oriented',\r\n    'Brandy',\r\n    'Shaplin',\r\n    null,\r\n    'Seamless',\r\n    'Morrie',\r\n    'De Mico',\r\n    null,\r\n    'circuit',\r\n    'Flory',\r\n    'Dows',\r\n    null,\r\n    'Digitized',\r\n    'Tess',\r\n    'Chetwin',\r\n    null,\r\n    'Profound',\r\n    'Kinny',\r\n    'Zamora',\r\n    null,\r\n    'secondary',\r\n    'Tracy',\r\n    'Kleinplac',\r\n    null,\r\n    'hub',\r\n    'Uta',\r\n    'Lydiate',\r\n    null,\r\n    'secondary',\r\n    'Vera',\r\n    'Loan',\r\n    null,\r\n    'collaboration',\r\n    'Benni',\r\n    'Penniell',\r\n    null,\r\n    'zero defect',\r\n    'Reggis',\r\n    'Holdforth',\r\n    null,\r\n    'frame',\r\n    'Adria',\r\n    'Monte',\r\n    null,\r\n    'contingency',\r\n    'Faith',\r\n    'Chedzoy',\r\n    null,\r\n    'archive',\r\n    'Ingrid',\r\n    'Graser',\r\n    null,\r\n    '5th generation',\r\n    'Enriqueta',\r\n    'Tie',\r\n    null,\r\n    'radical',\r\n    'Gasper',\r\n    'Teenan',\r\n    null,\r\n    'parallelism',\r\n    'Fifine',\r\n    'Lahiff',\r\n    null,\r\n    'system engine',\r\n    'Sophi',\r\n    'Fealy',\r\n    null,\r\n    '6th generation',\r\n    'Joshia',\r\n    'Caurah',\r\n    null,\r\n    'collaboration',\r\n    'Branden',\r\n    'Byard',\r\n    null,\r\n    'product',\r\n    'Dyann',\r\n    'Tibb',\r\n    null,\r\n    'support',\r\n    'Loni',\r\n    'Wenn',\r\n    null,\r\n    'maximized',\r\n    'Marleah',\r\n    'Sail',\r\n    null,\r\n    'Balanced',\r\n    'Stanislaus',\r\n    'Fley',\r\n    null,\r\n    'Ergonomic',\r\n    'Pascale',\r\n    'Furst',\r\n    null,\r\n    'maximized',\r\n    'Gus',\r\n    'Draijer',\r\n    null,\r\n    'Phased',\r\n    'Blake',\r\n    'Nannini',\r\n    null,\r\n    'matrices',\r\n    'Anthea',\r\n    'Faloon',\r\n    null,\r\n    'stable',\r\n    'Alexandr',\r\n    'Dargie',\r\n    null,\r\n    'impactful',\r\n    'Nickolas',\r\n    'Losemann',\r\n    null,\r\n    'Function-based',\r\n    'Ruttger',\r\n    'Summerfield',\r\n    null,\r\n    'support',\r\n    'Tanhya',\r\n    'Somerville',\r\n    null,\r\n    'Configurable',\r\n    'Von',\r\n    'Brasher',\r\n    null,\r\n    'Robust',\r\n    'Gal',\r\n    'Coverly',\r\n    null,\r\n    'Multi-layered',\r\n    'Olly',\r\n    'Piola',\r\n    null,\r\n    'parallelism',\r\n    'Roxanna',\r\n    'Brunesco',\r\n    null,\r\n    'Innovative',\r\n    'Elias',\r\n    'Barehead',\r\n    null,\r\n    'groupware',\r\n    'Cozmo',\r\n    'Aleksich',\r\n    null,\r\n    'Object-based',\r\n    'Had',\r\n    'Parsall',\r\n    null,\r\n    'website',\r\n    'Jessamine',\r\n    'Parsonson',\r\n    null,\r\n    'Realigned',\r\n    'Erinn',\r\n    'Harrad',\r\n    null,\r\n    'mobile',\r\n    'Trudy',\r\n    'Ternott',\r\n    null,\r\n    'background',\r\n    'Leighton',\r\n    'Newick',\r\n    null,\r\n    'application',\r\n    'Flem',\r\n    'Sabater',\r\n    null,\r\n    'model',\r\n    'Horton',\r\n    'Luthwood',\r\n    null,\r\n    'pricing structure',\r\n    'Yuma',\r\n    'Laxston',\r\n    null,\r\n    'leading edge',\r\n    'Quintana',\r\n    'Barnwall',\r\n    null,\r\n    'bandwidth-monitored',\r\n    'Ulrikaumeko',\r\n    'Ruter',\r\n    null,\r\n    'Customizable',\r\n    'Stephana',\r\n    'Djurkovic',\r\n    null,\r\n    'implementation',\r\n    'Agna',\r\n    'Freak',\r\n    null,\r\n    'conglomeration',\r\n    'Faith',\r\n    'Courtman',\r\n    null,\r\n    'exuding',\r\n    'Vassili',\r\n    'Novakovic',\r\n    null,\r\n    'mobile',\r\n    'Issi',\r\n    'Vale',\r\n    null,\r\n    'Intuitive',\r\n    'Olenolin',\r\n    'Wogdon',\r\n    null,\r\n    'Triple-buffered',\r\n    'Nerte',\r\n    'Oglevie',\r\n    null,\r\n    'directional',\r\n    'Conrad',\r\n    'Lanney',\r\n    null,\r\n    'uniform',\r\n    'Glenden',\r\n    'Bauduccio',\r\n    null,\r\n    'methodology',\r\n    'Booth',\r\n    'Gherarducci',\r\n    null,\r\n    'Ergonomic',\r\n    'Row',\r\n    'Bosch',\r\n    null,\r\n    'Multi-layered',\r\n    'Riordan',\r\n    'La Croce',\r\n    null,\r\n    'Reduced',\r\n    'Brandy',\r\n    'Whicher',\r\n    null,\r\n    'Fully-configurable',\r\n    'Gaultiero',\r\n    'McLay',\r\n    null,\r\n    'parallelism',\r\n    'Stanly',\r\n    'Marquis',\r\n    null,\r\n    'firmware',\r\n    'Jany',\r\n    'Byas',\r\n    null,\r\n    'attitude-oriented',\r\n    'Noam',\r\n    'Shambroke',\r\n    null,\r\n    'directional',\r\n    'Susy',\r\n    'Spratt',\r\n    null,\r\n    'User-friendly',\r\n    'Goddart',\r\n    'Mayling',\r\n    null,\r\n    'superstructure',\r\n    'Delila',\r\n    'Hankins',\r\n    null,\r\n    'encoding',\r\n    'Rab',\r\n    'Devine',\r\n    null,\r\n    'contingency',\r\n    'Engracia',\r\n    'Gradon',\r\n    null,\r\n    'forecast',\r\n    'Allyn',\r\n    'Steljes',\r\n    null,\r\n    'intermediate',\r\n    'Rolando',\r\n    'Bernat',\r\n    null,\r\n    'discrete',\r\n    'Adamo',\r\n    'Boyles',\r\n    null,\r\n    'Monitored',\r\n    'Brittan',\r\n    'Hollyman',\r\n    null,\r\n    'Object-based',\r\n    'Leeland',\r\n    'Opie',\r\n    null,\r\n    'Cross-group',\r\n    'Chrysa',\r\n    'Fairpool',\r\n    null,\r\n    'system engine',\r\n    'Bernetta',\r\n    'Veivers',\r\n    null,\r\n    'optimizing',\r\n    'Kate',\r\n    'Gullan',\r\n    null,\r\n    'Intuitive',\r\n    'Flossie',\r\n    'Claiton',\r\n    null,\r\n    'complexity',\r\n    'Marga',\r\n    'Baude',\r\n    null,\r\n    'complexity',\r\n    'Teodoro',\r\n    'Philliphs',\r\n    null,\r\n    'impactful',\r\n    'Hilary',\r\n    'Cottier',\r\n    null,\r\n    'multi-tasking',\r\n    'Cord',\r\n    'Galliard',\r\n    null,\r\n    'Public-key',\r\n    'Lisabeth',\r\n    'Fish',\r\n    null,\r\n    'array',\r\n    'Cad',\r\n    'Merrin',\r\n    null,\r\n    'Vision-oriented',\r\n    'Evvie',\r\n    'Gillum',\r\n    null,\r\n    'Persistent',\r\n    'Ethe',\r\n    'Glashby',\r\n    null,\r\n    'Digitized',\r\n    'Ham',\r\n    'Vallender',\r\n    null,\r\n    'interactive',\r\n    'Dulciana',\r\n    'Andrysiak',\r\n    null,\r\n    'adapter',\r\n    'Powell',\r\n    'Mar',\r\n    null,\r\n    'Configurable',\r\n    'Dollie',\r\n    'Hurdidge',\r\n    null,\r\n    'Stand-alone',\r\n    'Conchita',\r\n    'Twatt',\r\n    null,\r\n    'zero defect',\r\n    'Hi',\r\n    'Sherbrook',\r\n    null,\r\n    'Face to face',\r\n    'Lonnard',\r\n    'Hegdonne',\r\n    null,\r\n    'systemic',\r\n    'Konrad',\r\n    'Jewes',\r\n    null,\r\n    'Expanded',\r\n    'Freemon',\r\n    'Aldus',\r\n    null,\r\n    'Synchronised',\r\n    'Adeline',\r\n    'Sauvan',\r\n    null,\r\n    'Secured',\r\n    'Jodi',\r\n    'Creegan',\r\n    null,\r\n    'Self-enabling',\r\n    'Crista',\r\n    'Bussen',\r\n    null,\r\n    'utilisation',\r\n    'Wilek',\r\n    'Leavesley',\r\n    null,\r\n    'multimedia',\r\n    'Steffane',\r\n    'Freshwater',\r\n    null,\r\n    '3rd generation',\r\n    'Gil',\r\n    'Ramberg',\r\n    null,\r\n    'Multi-layered',\r\n    'Hazlett',\r\n    'Matiasek',\r\n    null,\r\n    'interface',\r\n    'Odell',\r\n    'Boldock',\r\n    null,\r\n    'Balanced',\r\n    'Deck',\r\n    'Gorner',\r\n    null,\r\n    'holistic',\r\n    'Yasmin',\r\n    'Rowlatt',\r\n    null,\r\n    'ability',\r\n    'Guendolen',\r\n    \"O'Hagerty\",\r\n    null,\r\n    'neural-net',\r\n    'Brian',\r\n    'Elden',\r\n    null,\r\n    'Reduced',\r\n    'Calida',\r\n    'Bemment',\r\n    null,\r\n    'Distributed',\r\n    'Dickie',\r\n    'Mott',\r\n    null,\r\n    'secured line',\r\n    'Lloyd',\r\n    'Monelle',\r\n    null,\r\n    'Cross-platform',\r\n    'Glennie',\r\n    'Corson',\r\n    null,\r\n    'Cross-platform',\r\n    'Aubry',\r\n    'Jojic',\r\n    null,\r\n    'Multi-tiered',\r\n    'Sutherland',\r\n    'MacIlraith',\r\n    null,\r\n    'asynchronous',\r\n    'Percy',\r\n    'Kitlee',\r\n    null,\r\n    'Versatile',\r\n    'Elnora',\r\n    'Madine',\r\n    null,\r\n    'web-enabled',\r\n    'Kitti',\r\n    'Greenman',\r\n    null,\r\n    'Secured',\r\n    'Akim',\r\n    'Waller',\r\n    null,\r\n    'Integrated',\r\n    'Corene',\r\n    'Sale',\r\n    null,\r\n    'tertiary',\r\n    'Rorie',\r\n    'Muirhead',\r\n    null,\r\n    'Customizable',\r\n    'Alejandro',\r\n    'McDuffy',\r\n    null,\r\n    'superstructure',\r\n    'Nevins',\r\n    'Sandford',\r\n    null,\r\n    'task-force',\r\n    'Charlotte',\r\n    'Roswarn',\r\n    null,\r\n    'pricing structure',\r\n    'Barbette',\r\n    'Norval',\r\n    null,\r\n    'stable',\r\n    'Ardra',\r\n    'Lorek',\r\n    null,\r\n    'eco-centric',\r\n    'Rubie',\r\n    'Proven',\r\n    null,\r\n    'superstructure',\r\n    'Moira',\r\n    'Syseland',\r\n    null,\r\n    'data-warehouse',\r\n    'Murielle',\r\n    'Banat',\r\n    null,\r\n    'moderator',\r\n    'Armand',\r\n    'Cawse',\r\n    null,\r\n    'Stand-alone',\r\n    'Gale',\r\n    'Cars',\r\n    null,\r\n    'User-friendly',\r\n    'Rance',\r\n    'Leamon',\r\n    null,\r\n    'executive',\r\n    'Barde',\r\n    'Rosenfarb',\r\n    null,\r\n    'project',\r\n    'Keslie',\r\n    'Callinan',\r\n    null,\r\n    'Monitored',\r\n    'Nedda',\r\n    'Anyene',\r\n    null,\r\n    'process improvement',\r\n    'Jamill',\r\n    'Harvison',\r\n    null,\r\n    'even-keeled',\r\n    'Vonny',\r\n    'Gerssam',\r\n    null,\r\n    'Right-sized',\r\n    'Winnah',\r\n    'Gladeche',\r\n    null,\r\n    'non-volatile',\r\n    'Lissi',\r\n    'Jeffree',\r\n    null,\r\n    'frame',\r\n    'Guillermo',\r\n    'Glass',\r\n    null,\r\n    'installation',\r\n    'Emily',\r\n    'Zoppie',\r\n    null,\r\n    'service-desk',\r\n    'Annaliese',\r\n    'Davall',\r\n    null,\r\n    'background',\r\n    'Homerus',\r\n    'Rowell',\r\n    null,\r\n    'regional',\r\n    'Gabriele',\r\n    'McKeachie',\r\n    null,\r\n    'encoding',\r\n    'Philippine',\r\n    'Versey',\r\n    null,\r\n    'Multi-tiered',\r\n    'Hartwell',\r\n    'Knaggs',\r\n    null,\r\n    'executive',\r\n    'Gunilla',\r\n    'Elwood',\r\n    null,\r\n    'Self-enabling',\r\n    'Cyndi',\r\n    'Mulrenan',\r\n    null,\r\n    'protocol',\r\n    'Nan',\r\n    'Izzat',\r\n    null,\r\n    'local',\r\n    'Corby',\r\n    'Hobble',\r\n    null,\r\n    'benchmark',\r\n    'Elmer',\r\n    'Ingree',\r\n    null,\r\n    'Re-contextualized',\r\n    'Delinda',\r\n    'Terrelly',\r\n    null,\r\n    'database',\r\n    'Ofella',\r\n    'Derges',\r\n    null,\r\n    'Self-enabling',\r\n    'Rickie',\r\n    'Alans',\r\n    null,\r\n    'systematic',\r\n    'Sauveur',\r\n    'Tomet',\r\n    null,\r\n    'matrix',\r\n    'Jody',\r\n    'Greet',\r\n    null,\r\n    'local area network',\r\n    'Archaimbaud',\r\n    'Waskett',\r\n    null,\r\n    'user-facing',\r\n    'Berget',\r\n    'Kemball',\r\n    null,\r\n    'Fundamental',\r\n    'Jourdain',\r\n    'Moen',\r\n    null,\r\n    'upward-trending',\r\n    'Maryrose',\r\n    'Oxlade',\r\n    null,\r\n    'user-facing',\r\n    'Anallese',\r\n    'Petrushka',\r\n    null,\r\n    '4th generation',\r\n    'Maison',\r\n    'Schooley',\r\n    null,\r\n    'static',\r\n    'Tuck',\r\n    'Ramsbottom',\r\n    null,\r\n    'Up-sized',\r\n    'Lorilee',\r\n    'Sallings',\r\n    null,\r\n    'modular',\r\n    'Port',\r\n    'Lyford',\r\n    null,\r\n    'capability',\r\n    'Becki',\r\n    'Munt',\r\n    null,\r\n    'Face to face',\r\n    'Tybalt',\r\n    'Yates',\r\n    null,\r\n    'methodical',\r\n    'Viviene',\r\n    'Tejero',\r\n    null,\r\n    'adapter',\r\n    'Camilla',\r\n    'Manoelli',\r\n    null,\r\n    'Phased',\r\n    'Camellia',\r\n    'Usherwood',\r\n    null,\r\n    'focus group',\r\n    'Mignon',\r\n    'Baack',\r\n    null,\r\n    'Object-based',\r\n    'Gloriane',\r\n    'Mehmet',\r\n    null,\r\n    'Managed',\r\n    'Verine',\r\n    'Jenks',\r\n    null,\r\n    '3rd generation',\r\n    'Goober',\r\n    'Lepick',\r\n    null,\r\n    'coherent',\r\n    'Hedy',\r\n    'Burren',\r\n    null,\r\n    'zero tolerance',\r\n    'Floyd',\r\n    'Twiddy',\r\n    null,\r\n    'disintermediate',\r\n    'Tabbatha',\r\n    'Fooks',\r\n    null,\r\n    'asynchronous',\r\n    'Sebastien',\r\n    'Madelin',\r\n    null,\r\n    'national',\r\n    'Kassey',\r\n    'Leates',\r\n    null,\r\n    'model',\r\n    'Selle',\r\n    'Braidwood',\r\n    null,\r\n    'Programmable',\r\n    'Raffaello',\r\n    'Bensley',\r\n    null,\r\n    'data-warehouse',\r\n    'Raye',\r\n    'Caldaro',\r\n    null,\r\n    'Enhanced',\r\n    'Jeff',\r\n    'Currall',\r\n    null,\r\n    'intranet',\r\n    'Rawley',\r\n    'Love',\r\n    null,\r\n    'approach',\r\n    'Lillian',\r\n    'Muckart',\r\n    null,\r\n    'moderator',\r\n    'Bren',\r\n    'Glasspoole',\r\n    null,\r\n    'grid-enabled',\r\n    'Silvio',\r\n    'Brant',\r\n    null,\r\n    'standardization',\r\n    'Carlyn',\r\n    'Burkman',\r\n    null,\r\n    'Advanced',\r\n    'Stanton',\r\n    'Coe',\r\n    null,\r\n    'portal',\r\n    'Constancia',\r\n    'Dillestone',\r\n    null,\r\n    'archive',\r\n    'Donal',\r\n    'Skittle',\r\n    null,\r\n    'local',\r\n    'Debi',\r\n    'Gibbeson',\r\n    null,\r\n    'paradigm',\r\n    'Gabi',\r\n    'Kiehl',\r\n    null,\r\n    'tertiary',\r\n    'Nevil',\r\n    'McGreay',\r\n    null,\r\n    'Exclusive',\r\n    'Paule',\r\n    'Angel',\r\n    null,\r\n    'global',\r\n    'Timothee',\r\n    'Berwick',\r\n    null,\r\n    'task-force',\r\n    'Gabrielle',\r\n    'Dearsley',\r\n    null,\r\n    'didactic',\r\n    'Miguela',\r\n    'Matthiesen',\r\n    null,\r\n    'neutral',\r\n    'Curt',\r\n    'Keigher',\r\n    null,\r\n    'Organic',\r\n    'Lila',\r\n    'Lieb',\r\n    null,\r\n    'Intuitive',\r\n    'Brendon',\r\n    'Martelet',\r\n    null,\r\n    'Virtual',\r\n    'Yorke',\r\n    'Deetch',\r\n    null,\r\n    'directional',\r\n    'Innis',\r\n    'Hendin',\r\n    null,\r\n    'Customizable',\r\n    'Berke',\r\n    'McCrillis',\r\n    null,\r\n    'Public-key',\r\n    'Emerson',\r\n    'Harvard',\r\n    null,\r\n    'transitional',\r\n    'Gene',\r\n    'Ferrea',\r\n    null,\r\n    'architecture',\r\n    'Yoshiko',\r\n    'Ordidge',\r\n    null,\r\n    'parallelism',\r\n    'Burty',\r\n    'Stuckey',\r\n    null,\r\n    'methodology',\r\n    'Janifer',\r\n    'Blankman',\r\n    null,\r\n    'open system',\r\n    'Christy',\r\n    'Bicksteth',\r\n    null,\r\n    'multimedia',\r\n    'Cheston',\r\n    'Tynewell',\r\n    null,\r\n    'optimizing',\r\n    'Kiah',\r\n    'Sudron',\r\n    null,\r\n    'framework',\r\n    'Nady',\r\n    'Rossander',\r\n    null,\r\n    '6th generation',\r\n    'Frazier',\r\n    'Faust',\r\n    null,\r\n    'functionalities',\r\n    'Angeli',\r\n    'Leftwich',\r\n    null,\r\n    'Quality-focused',\r\n    'Errick',\r\n    'Coxwell',\r\n    null,\r\n    'installation',\r\n    'Alan',\r\n    'Knifton',\r\n    null,\r\n    'initiative',\r\n    'Halsy',\r\n    'Strippel',\r\n    null,\r\n    'conglomeration',\r\n    'Ludvig',\r\n    'Ransley',\r\n    null,\r\n    'Exclusive',\r\n    'Jamie',\r\n    'Moizer',\r\n    null,\r\n    'zero administration',\r\n    'Christophe',\r\n    'Rawcliffe',\r\n    null,\r\n    'Optimized',\r\n    'Gerick',\r\n    'Massimi',\r\n    null,\r\n    'explicit',\r\n    'Angela',\r\n    'Adanez',\r\n    null,\r\n    'definition',\r\n    'Rhona',\r\n    'Neller',\r\n    null,\r\n    'maximized',\r\n    'Calla',\r\n    'Brumham',\r\n    null,\r\n    '24/7',\r\n    'Lorianne',\r\n    'Cosby',\r\n    null,\r\n    'Automated',\r\n    'Brenna',\r\n    'Gianni',\r\n    null,\r\n    'Self-enabling',\r\n    'Beitris',\r\n    'Gavrielli',\r\n    null,\r\n    'Multi-channelled',\r\n    'Colline',\r\n    'Antoszczyk',\r\n    null,\r\n    'Optional',\r\n    'Alard',\r\n    'Haestier',\r\n    null,\r\n    'collaboration',\r\n    'Kaiser',\r\n    'MacConneely',\r\n    null,\r\n    'budgetary management',\r\n    'Egbert',\r\n    'Cadigan',\r\n    null,\r\n    'system engine',\r\n    'Alfy',\r\n    'Delete',\r\n    null,\r\n    'Front-line',\r\n    'Jacklyn',\r\n    'Sweetman',\r\n    null,\r\n    '5th generation',\r\n    'Marcellus',\r\n    'Gonzalvo',\r\n    null,\r\n    'moderator',\r\n    'Alexandrina',\r\n    'Corona',\r\n    null,\r\n    'approach',\r\n    'Efrem',\r\n    'Staniland',\r\n    null,\r\n    'Decentralized',\r\n    'Duane',\r\n    'Olsen',\r\n    null,\r\n    'Configurable',\r\n    'Teri',\r\n    'Brumby',\r\n    null,\r\n    'intermediate',\r\n    'Damian',\r\n    'Fullalove',\r\n    null,\r\n    'success',\r\n    'Petronilla',\r\n    'Renon',\r\n    null,\r\n    'implementation',\r\n    'Libby',\r\n    'Leathley',\r\n    null,\r\n    'Profit-focused',\r\n    'My',\r\n    'Bayne',\r\n    null,\r\n    'encoding',\r\n    'Jordana',\r\n    'Ravenshear',\r\n    null,\r\n    'heuristic',\r\n    'Anetta',\r\n    'Parrot',\r\n    null,\r\n    'Seamless',\r\n    'Ardella',\r\n    'Hourahan',\r\n    null,\r\n    'policy',\r\n    'Danny',\r\n    'McWilliams',\r\n    null,\r\n    'bi-directional',\r\n    'Ravid',\r\n    'Mesias',\r\n    null,\r\n    'structure',\r\n    'Gibby',\r\n    'Gellately',\r\n    null,\r\n    'software',\r\n    'Lettie',\r\n    'Shatford',\r\n    null,\r\n    'Persistent',\r\n    'Natal',\r\n    'Dell Casa',\r\n    null,\r\n    'middleware',\r\n    'Enoch',\r\n    'Lawee',\r\n    null,\r\n    'alliance',\r\n    'Janka',\r\n    'Chevin',\r\n    null,\r\n    'optimal',\r\n    'Danila',\r\n    'Spurrett',\r\n    null,\r\n    'frame',\r\n    'Melissa',\r\n    'Behling',\r\n    null,\r\n    'intangible',\r\n    'Laurens',\r\n    'Northleigh',\r\n    null,\r\n    'Open-architected',\r\n    'Piotr',\r\n    'Chopping',\r\n    null,\r\n    'executive',\r\n    'Odey',\r\n    'Shave',\r\n    null,\r\n    'mission-critical',\r\n    'Paolina',\r\n    'Grindley',\r\n    null,\r\n    'Upgradable',\r\n    'Kile',\r\n    'Stonehouse',\r\n    null,\r\n    'needs-based',\r\n    'Zane',\r\n    'Andrichuk',\r\n    null,\r\n    'Synergized',\r\n    'Barbee',\r\n    'Zupone',\r\n    null,\r\n    'actuating',\r\n    'Gan',\r\n    'Rennock',\r\n    null,\r\n    'dedicated',\r\n    'Trey',\r\n    'Thorndycraft',\r\n    null,\r\n    'regional',\r\n    'Guglielmo',\r\n    'Spritt',\r\n    null,\r\n    'portal',\r\n    'Omar',\r\n    'Pina',\r\n    null,\r\n    'instruction set',\r\n    'Thatcher',\r\n    'Maasze',\r\n    null,\r\n    'Persistent',\r\n    'Cirilo',\r\n    'MacPaik',\r\n    null,\r\n    '6th generation',\r\n    'Hirsch',\r\n    'Whitcomb',\r\n    null,\r\n    'Function-based',\r\n    'Cully',\r\n    'Wilhelmy',\r\n    null,\r\n    'knowledge user',\r\n    'Rodger',\r\n    'Whiston',\r\n    null,\r\n    'Multi-channelled',\r\n    'Chiquia',\r\n    'Bicknell',\r\n    null,\r\n    'User-centric',\r\n    'Renie',\r\n    'Dungate',\r\n    null,\r\n    'Mandatory',\r\n    'Devina',\r\n    'Bruntjen',\r\n    null,\r\n    'Triple-buffered',\r\n    'Linoel',\r\n    'Edgell',\r\n    null,\r\n    'Optimized',\r\n    'Hildagard',\r\n    'Saladino',\r\n    null,\r\n    'initiative',\r\n    'Susi',\r\n    'Walentynowicz',\r\n    null,\r\n    'policy',\r\n    'Rosalyn',\r\n    'Warbeys',\r\n    null,\r\n    'national',\r\n    'Minnnie',\r\n    'Moral',\r\n    null,\r\n    'forecast',\r\n    'Tiler',\r\n    'Slaney',\r\n    null,\r\n    'definition',\r\n    'Felicle',\r\n    'Shepstone',\r\n    null,\r\n    '4th generation',\r\n    'Ree',\r\n    'Waters',\r\n    null,\r\n    'forecast',\r\n    'Alexina',\r\n    'Overstall',\r\n    null,\r\n    'grid-enabled',\r\n    'Sonya',\r\n    'Bisacre',\r\n    null,\r\n    'parallelism',\r\n    'Deanne',\r\n    'Corpes',\r\n    null,\r\n    'toolset',\r\n    'Tresa',\r\n    'Hanhard',\r\n    null,\r\n    'mobile',\r\n    'Norma',\r\n    'Vondrys',\r\n    null,\r\n    'hardware',\r\n    'Lockwood',\r\n    'Beevis',\r\n    null,\r\n    'application',\r\n    'Alica',\r\n    'Edlin',\r\n    null,\r\n    'intranet',\r\n    'Avril',\r\n    'Dymock',\r\n    null,\r\n    'implementation',\r\n    'Adrian',\r\n    'Addicott',\r\n    null,\r\n    'concept',\r\n    'Augustine',\r\n    'Leger',\r\n    null,\r\n    'well-modulated',\r\n    'Merv',\r\n    'Woolland',\r\n    null,\r\n    'content-based',\r\n    'Jimmy',\r\n    'Holberry',\r\n    null,\r\n    'artificial intelligence',\r\n    'Stefa',\r\n    'MacKenney',\r\n    null,\r\n    'Optimized',\r\n    'Petr',\r\n    'Ifill',\r\n    null,\r\n    'portal',\r\n    'Fifi',\r\n    'Jubert',\r\n    null,\r\n    'Implemented',\r\n    'Shelli',\r\n    'Vearnals',\r\n    null,\r\n    'Integrated',\r\n    'Joye',\r\n    'Cove',\r\n    null,\r\n    'Robust',\r\n    'Gypsy',\r\n    'Lowen',\r\n    null,\r\n    'Vision-oriented',\r\n    'Barn',\r\n    'Purry',\r\n    null,\r\n    'product',\r\n    'Rhett',\r\n    'Barrabeale',\r\n    null,\r\n    'Triple-buffered',\r\n    'Helenelizabeth',\r\n    'McDuall',\r\n    null,\r\n    'knowledge base',\r\n    'Codi',\r\n    'Pascow',\r\n    null,\r\n    'alliance',\r\n    'Janeta',\r\n    'Cornils',\r\n    null,\r\n    'Cross-platform',\r\n    'Donnell',\r\n    'Tybalt',\r\n    null,\r\n    'transitional',\r\n    'Prisca',\r\n    'Trimble',\r\n    null,\r\n    'paradigm',\r\n    'Victor',\r\n    'Stachini',\r\n    null,\r\n    'Operative',\r\n    'Stuart',\r\n    'Got',\r\n    null,\r\n    'firmware',\r\n    'Merola',\r\n    'Legg',\r\n    null,\r\n    'Innovative',\r\n    'Gwenore',\r\n    'McNickle',\r\n    null,\r\n    'Seamless',\r\n    'Rossie',\r\n    'Petkens',\r\n    null,\r\n    'bottom-line',\r\n    'Harper',\r\n    'Andrelli',\r\n    null,\r\n    'bi-directional',\r\n    'Rita',\r\n    'Curds',\r\n    null,\r\n    'bottom-line',\r\n    'Leigha',\r\n    'Bowart',\r\n    null,\r\n    'Enhanced',\r\n    'Sorcha',\r\n    'Nudde',\r\n    null,\r\n    'Ergonomic',\r\n    'Jaquelyn',\r\n    'Gottelier',\r\n    null,\r\n    'Reactive',\r\n    'Editha',\r\n    'Sammons',\r\n    null,\r\n    'national',\r\n    'Bar',\r\n    'Blackboro',\r\n    null,\r\n    'Profit-focused',\r\n    'Ralf',\r\n    'Gero',\r\n    null,\r\n    'radical',\r\n    'Nicolai',\r\n    'Boddis',\r\n    null,\r\n    'eco-centric',\r\n    'Harwell',\r\n    'Bygott',\r\n    null,\r\n    'task-force',\r\n    'Iosep',\r\n    'Jayes',\r\n    null,\r\n    'Operative',\r\n    'Murry',\r\n    'Freer',\r\n    null,\r\n    'foreground',\r\n    'Clementia',\r\n    'Noddles',\r\n    null,\r\n    'contextually-based',\r\n    'Dov',\r\n    'Edgeley',\r\n    null,\r\n    'task-force',\r\n    'Stearn',\r\n    'Stuchbery',\r\n    null,\r\n    'Persevering',\r\n    'Rossy',\r\n    'Orvis',\r\n    null,\r\n    'Secured',\r\n    'Deina',\r\n    'Fibbitts',\r\n    null,\r\n    'Fully-configurable',\r\n    'Teodor',\r\n    'Laity',\r\n    null,\r\n    'mobile',\r\n    'Goddard',\r\n    'Scoon',\r\n    null,\r\n    'productivity',\r\n    'Constantina',\r\n    'Olivello',\r\n    null,\r\n    'logistical',\r\n    'Kippy',\r\n    'Tromans',\r\n    null,\r\n    'Exclusive',\r\n    'Emmett',\r\n    'Letchford',\r\n    null,\r\n    'utilisation',\r\n    'Heidi',\r\n    'De Freyne',\r\n    null,\r\n    'Compatible',\r\n    'Dodi',\r\n    'MacKenny',\r\n    null,\r\n    'Organic',\r\n    'Alford',\r\n    'Colmer',\r\n    null,\r\n    'Persevering',\r\n    'Kally',\r\n    'Kirke',\r\n    null,\r\n    'framework',\r\n    'Timi',\r\n    'Graalman',\r\n    null,\r\n    'cohesive',\r\n    'Morgun',\r\n    'Scullard',\r\n    null,\r\n    'dedicated',\r\n    'Fairfax',\r\n    'Hedling',\r\n    null,\r\n    'budgetary management',\r\n    'Judie',\r\n    'Topper',\r\n    null,\r\n    'secured line',\r\n    'Jock',\r\n    'Rameau',\r\n    null,\r\n    'database',\r\n    'Clive',\r\n    'Cookes',\r\n    null,\r\n    'open system',\r\n    'Derry',\r\n    'Mosten',\r\n    null,\r\n    'Ameliorated',\r\n    'Riannon',\r\n    'Haycox',\r\n    null,\r\n    'collaboration',\r\n    'Todd',\r\n    'Bowich',\r\n    null,\r\n    'info-mediaries',\r\n    'Brook',\r\n    'Grunnill',\r\n    null,\r\n    'Operative',\r\n    'Esmaria',\r\n    'Ryson',\r\n    null,\r\n    'Enhanced',\r\n    'Dunn',\r\n    'Burdon',\r\n    null,\r\n    'architecture',\r\n    'Miguela',\r\n    'Monckton',\r\n    null,\r\n    'multi-state',\r\n    'Jany',\r\n    'Gethings',\r\n    null,\r\n    'clear-thinking',\r\n    'Lorelei',\r\n    'Ivanikhin',\r\n    null,\r\n    'migration',\r\n    'Grannie',\r\n    'Sandiland',\r\n    null,\r\n    'Universal',\r\n    'Ogdon',\r\n    'Chadburn',\r\n    null,\r\n    'structure',\r\n    'Westley',\r\n    'Elvish',\r\n    null,\r\n    'real-time',\r\n    'Jacquelyn',\r\n    \"O'Hegertie\",\r\n    null,\r\n    'Configurable',\r\n    'Magdalene',\r\n    'Durno',\r\n    null,\r\n    'open system',\r\n    'Theodore',\r\n    'Saur',\r\n    null,\r\n    'cohesive',\r\n    'Lanie',\r\n    'Peek',\r\n    null,\r\n    'real-time',\r\n    'Cort',\r\n    'Clayworth',\r\n    null,\r\n    'policy',\r\n    'Emmery',\r\n    'Saffon',\r\n    null,\r\n    'initiative',\r\n    'Cyril',\r\n    'Pembery',\r\n    null,\r\n    'high-level',\r\n    'Rene',\r\n    'Pavic',\r\n    null,\r\n    'systematic',\r\n    'Dione',\r\n    'Bence',\r\n    null,\r\n    'Front-line',\r\n    'Ravid',\r\n    'Breache',\r\n    null,\r\n    'focus group',\r\n    'Tiphani',\r\n    'Nesterov',\r\n    null,\r\n    'orchestration',\r\n    'Lily',\r\n    'Gerding',\r\n    null,\r\n    'Synergized',\r\n    'Evelin',\r\n    'Hounsom',\r\n    null,\r\n    'eco-centric',\r\n    'Jasper',\r\n    'Sysland',\r\n    null,\r\n    'leading edge',\r\n    'Rudolph',\r\n    'Rogerot',\r\n    null,\r\n    'cohesive',\r\n    'Gilbertina',\r\n    'Moorman',\r\n    null,\r\n    'application',\r\n    'Vida',\r\n    'Caves',\r\n    null,\r\n    'superstructure',\r\n    'Ambrosio',\r\n    'Snowsill',\r\n    null,\r\n    'bi-directional',\r\n    'Courtnay',\r\n    'Reede',\r\n    null,\r\n    'array',\r\n    'Perceval',\r\n    'Maunder',\r\n    null,\r\n    'collaboration',\r\n    'Hagan',\r\n    'Pedel',\r\n    null,\r\n    'implementation',\r\n    'Kate',\r\n    'de la Valette Parisot',\r\n    null,\r\n    'Stand-alone',\r\n    'Lutero',\r\n    'Bladder',\r\n    null,\r\n    'Function-based',\r\n    'Lilian',\r\n    'Alcido',\r\n    null,\r\n    'monitoring',\r\n    'Sonia',\r\n    'Maylam',\r\n    null,\r\n    'structure',\r\n    'Ronny',\r\n    'Went',\r\n    null,\r\n    'Enhanced',\r\n    'Neila',\r\n    'Rapps',\r\n    null,\r\n    'optimal',\r\n    'Isobel',\r\n    'Salvati',\r\n    null,\r\n    'local area network',\r\n    'Georgetta',\r\n    'Clearie',\r\n    null,\r\n    'Integrated',\r\n    'Page',\r\n    'Padbery',\r\n    null,\r\n    'infrastructure',\r\n    'Alverta',\r\n    'Petrillo',\r\n    null,\r\n    'homogeneous',\r\n    'Katee',\r\n    'Briiginshaw',\r\n    null,\r\n    'zero tolerance',\r\n    'Prue',\r\n    'Poller',\r\n    null,\r\n    'secured line',\r\n    'Rex',\r\n    'Banasik',\r\n    null,\r\n    'database',\r\n    'Yvon',\r\n    'Spurrier',\r\n    null,\r\n    'artificial intelligence',\r\n    'Gustave',\r\n    'Messier',\r\n    null,\r\n    'portal',\r\n    'Regan',\r\n    'Bollis',\r\n    null,\r\n    'projection',\r\n    'Marco',\r\n    'Humpage',\r\n    null,\r\n    'intranet',\r\n    'Kahlil',\r\n    'Normanton',\r\n    null,\r\n    'Re-contextualized',\r\n    'Sheffie',\r\n    'Luddy',\r\n    null,\r\n    'multimedia',\r\n    'Federico',\r\n    'Swinbourne',\r\n    null,\r\n    'modular',\r\n    'Art',\r\n    'Paradine',\r\n    null,\r\n    'analyzer',\r\n    'Corry',\r\n    'Hedlestone',\r\n    null,\r\n    'complexity',\r\n    'Schuyler',\r\n    'Luck',\r\n    null,\r\n    'needs-based',\r\n    'Farah',\r\n    'Haddock',\r\n    null,\r\n    'Fundamental',\r\n    'Candy',\r\n    'Bercevelo',\r\n    null,\r\n    'strategy',\r\n    'Lorraine',\r\n    'Pinwill',\r\n    null,\r\n    'interface',\r\n    'Keelia',\r\n    'Shellcross',\r\n    null,\r\n    'Future-proofed',\r\n    'Annie',\r\n    'Klimschak',\r\n    null,\r\n    'Devolved',\r\n    'Albie',\r\n    'Limb',\r\n    null,\r\n    'methodology',\r\n    'Chance',\r\n    'Bru',\r\n    null,\r\n    'Profit-focused',\r\n    'Deloria',\r\n    'Tonn',\r\n    null,\r\n    'Cross-group',\r\n    'Augustina',\r\n    'Sanbrooke',\r\n    null,\r\n    'Open-architected',\r\n    'Ari',\r\n    \"O' Loughran\",\r\n    null,\r\n    'Reduced',\r\n    'Gray',\r\n    'Jermin',\r\n    null,\r\n    'Upgradable',\r\n    'Cynthia',\r\n    'Drinkale',\r\n    null,\r\n    'knowledge base',\r\n    'Garret',\r\n    'Duffett',\r\n    null,\r\n    'dedicated',\r\n    'Doyle',\r\n    'Fitzhenry',\r\n    null,\r\n    'approach',\r\n    'Lev',\r\n    \"O'Crowley\",\r\n    null,\r\n    'Optional',\r\n    'Koren',\r\n    'Piff',\r\n    null,\r\n    'emulation',\r\n    'Aldous',\r\n    'Keel',\r\n    null,\r\n    'contextually-based',\r\n    'Micky',\r\n    'Kubacki',\r\n    null,\r\n    'Reduced',\r\n    'Horten',\r\n    'Ruberti',\r\n    null,\r\n    'global',\r\n    'Astrid',\r\n    'Twydell',\r\n    null,\r\n    'Secured',\r\n    'Dallon',\r\n    'Maingot',\r\n    null,\r\n    'Optimized',\r\n    'Abbott',\r\n    'Siaspinski',\r\n    null,\r\n    '6th generation',\r\n    'Lyman',\r\n    'Geeve',\r\n    null,\r\n    'support',\r\n    'Danila',\r\n    'Dukesbury',\r\n    null,\r\n    'neutral',\r\n    'Bradan',\r\n    'Caton',\r\n    null,\r\n    'Reverse-engineered',\r\n    'Obed',\r\n    'Challenor',\r\n    null,\r\n    'Automated',\r\n    'Rhiamon',\r\n    \"D'Antoni\",\r\n    null,\r\n    'function',\r\n    'Caralie',\r\n    'Milnthorpe',\r\n    null,\r\n    'Virtual',\r\n    'Rosina',\r\n    'Maudlen',\r\n    null,\r\n    'Exclusive',\r\n    'Reinwald',\r\n    'Gilbride',\r\n    null,\r\n    'zero administration',\r\n    'Bianca',\r\n    'Pound',\r\n    null,\r\n    'Synergistic',\r\n    'Heywood',\r\n    'Bizzey',\r\n    null,\r\n    'discrete',\r\n    'Ginnie',\r\n    'York',\r\n    null,\r\n    'Reactive',\r\n    'Bailie',\r\n    'Ingreda',\r\n    null,\r\n    'interactive',\r\n    'Appolonia',\r\n    'Murcott',\r\n    null,\r\n    'Future-proofed',\r\n    'Humbert',\r\n    'Lademann',\r\n    null,\r\n    'matrices',\r\n    'Eustace',\r\n    'McInulty',\r\n    null,\r\n    'middleware',\r\n    'Jordain',\r\n    'Tisun',\r\n    null,\r\n    'Phased',\r\n    'Doyle',\r\n    'Kleint',\r\n    null,\r\n    'system engine',\r\n    'Blayne',\r\n    'Schimke',\r\n    null,\r\n    'value-added',\r\n    'Berget',\r\n    'Caras',\r\n    null,\r\n    'support',\r\n    'Helene',\r\n    'Blesing',\r\n    null,\r\n    'real-time',\r\n    'Garland',\r\n    'Delete',\r\n    null,\r\n    'multimedia',\r\n    'Kacey',\r\n    'Dionsetti',\r\n    null,\r\n    'Devolved',\r\n    'Melony',\r\n    'Simmans',\r\n    null,\r\n    'cohesive',\r\n    'Bari',\r\n    'Bilovus',\r\n    null,\r\n    'executive',\r\n    'Tamarah',\r\n    'Schuchmacher',\r\n    null,\r\n    'process improvement',\r\n    'Denys',\r\n    'Maycock',\r\n    null,\r\n    'task-force',\r\n    'Monica',\r\n    'Canfer',\r\n    null,\r\n    'needs-based',\r\n    'Jeremie',\r\n    'Martinec',\r\n    null,\r\n    'toolset',\r\n    'Granthem',\r\n    'Murfin',\r\n    null,\r\n    'zero tolerance',\r\n    'Eachelle',\r\n    'Byrcher',\r\n    null,\r\n    'initiative',\r\n    'Cointon',\r\n    'Wearden',\r\n    null,\r\n    'uniform',\r\n    'Blayne',\r\n    'Levinge',\r\n    null,\r\n    'client-server',\r\n    'Eldridge',\r\n    'De Wolfe',\r\n    null,\r\n    'local',\r\n    'Chadwick',\r\n    'Gaveltone',\r\n    null,\r\n    'Team-oriented',\r\n    'Leroi',\r\n    'Robic',\r\n    null,\r\n    'encryption',\r\n    'Ravid',\r\n    'Commins',\r\n    null,\r\n    'orchestration',\r\n    'Taddeo',\r\n    'Chominski',\r\n    null,\r\n    'Monitored',\r\n    'Damaris',\r\n    'Browne',\r\n    null,\r\n    'Ergonomic',\r\n    'Noby',\r\n    'Pearl',\r\n    null,\r\n    'Multi-layered',\r\n    'Missie',\r\n    'Gerwood',\r\n    null,\r\n    'initiative',\r\n    'Olive',\r\n    'Clow',\r\n    null,\r\n    'solution-oriented',\r\n    'Karilynn',\r\n    'Butt Gow',\r\n    null,\r\n    'Phased',\r\n    'Helene',\r\n    'Baly',\r\n    null,\r\n    'protocol',\r\n    'Saundra',\r\n    'Donaway',\r\n    null,\r\n    'regional',\r\n    'Max',\r\n    'Bailess',\r\n    null,\r\n    'Multi-lateral',\r\n    'Gasparo',\r\n    'Martlew',\r\n    null,\r\n    'disintermediate',\r\n    'Chicky',\r\n    'Sweetland',\r\n    null,\r\n    'exuding',\r\n    'Durward',\r\n    'Messam',\r\n    null,\r\n    'Multi-channelled',\r\n    'Angie',\r\n    'Keach',\r\n    null,\r\n    'Pre-emptive',\r\n    'Elsa',\r\n    'Kernan',\r\n    null,\r\n    'Ergonomic',\r\n    'Benni',\r\n    'Borthwick',\r\n    null,\r\n    'multi-state',\r\n    'Correy',\r\n    'Scroggins',\r\n    null,\r\n    '3rd generation',\r\n    'Kalie',\r\n    'Janse',\r\n    null,\r\n    'intangible',\r\n    'Stormy',\r\n    'Zimek',\r\n    null,\r\n    'Digitized',\r\n    'Thane',\r\n    'Fenelow',\r\n    null,\r\n    'Profound',\r\n    'Grady',\r\n    'Toma',\r\n    null,\r\n    'leading edge',\r\n    'Bartel',\r\n    'McGuggy',\r\n    null,\r\n    'solution',\r\n    'Jyoti',\r\n    'Feltham',\r\n    null,\r\n    'contingency',\r\n    'Linda',\r\n    'Filipiak',\r\n    null,\r\n    'background',\r\n    'Reine',\r\n    'McKendo',\r\n    null,\r\n    'array',\r\n    'Lusa',\r\n    'Lofthouse',\r\n    null,\r\n    'Virtual',\r\n    'Malena',\r\n    'Juara',\r\n    null,\r\n    'Reverse-engineered',\r\n    'Addie',\r\n    'Matt',\r\n    null,\r\n    'maximized',\r\n    'Egor',\r\n    'Lober',\r\n    null,\r\n    'Reverse-engineered',\r\n    'Andreana',\r\n    'Probert',\r\n    null,\r\n    'Public-key',\r\n    'Ervin',\r\n    'Hannabus',\r\n    null,\r\n    'bottom-line',\r\n    'Dorey',\r\n    'Spears',\r\n    null,\r\n    'Graphical User Interface',\r\n    'Sandi',\r\n    'Stoak',\r\n    null,\r\n    'service-desk',\r\n    'Bette',\r\n    'Aulds',\r\n    null,\r\n    'Digitized',\r\n    'Forrester',\r\n    'Burnel',\r\n    null,\r\n    'Fundamental',\r\n    'Terry',\r\n    'Todhunter',\r\n    null,\r\n    'radical',\r\n    'Arlee',\r\n    'Borgne',\r\n    null,\r\n    'web-enabled',\r\n    'Vivi',\r\n    'Peck',\r\n    null,\r\n    'content-based',\r\n    'Vite',\r\n    'Van Baaren',\r\n    null,\r\n    'client-driven',\r\n    'Mercy',\r\n    'Vamplers',\r\n    null,\r\n    'utilisation',\r\n    'Sharlene',\r\n    'Keaton',\r\n    null,\r\n    'Balanced',\r\n    'Josh',\r\n    'Winskill',\r\n    null,\r\n    'Expanded',\r\n    'Mischa',\r\n    'Assinder',\r\n    null,\r\n    'moratorium',\r\n    'Gustie',\r\n    'Flaubert',\r\n    null,\r\n    'Automated',\r\n    'Elfrieda',\r\n    'Jarratt',\r\n    null,\r\n    'utilisation',\r\n    'Tallie',\r\n    'Lockhurst',\r\n    null,\r\n    'intranet',\r\n    'Roslyn',\r\n    'Fittis',\r\n    null,\r\n    'parallelism',\r\n    'Jordan',\r\n    'Daviddi',\r\n    null,\r\n    'regional',\r\n    'Patrizius',\r\n    'Sowerbutts',\r\n    null,\r\n    '6th generation',\r\n    'Simone',\r\n    'Sperling',\r\n    null,\r\n    'secured line',\r\n    'Glen',\r\n    'Wilcocke',\r\n    null,\r\n    'parallelism',\r\n    'Wynn',\r\n    'Oolahan',\r\n    null,\r\n    'leverage',\r\n    'Kailey',\r\n    'Peebles',\r\n    null,\r\n    'product',\r\n    'Libbey',\r\n    'Sissland',\r\n    null,\r\n    'real-time',\r\n    'Wilbur',\r\n    'Over',\r\n    null,\r\n    'Open-architected',\r\n    'Benedikt',\r\n    'Pilbeam',\r\n    null,\r\n    'Customizable',\r\n    'Van',\r\n    'Riordan',\r\n    null,\r\n    'synergy',\r\n    'Edan',\r\n    'Soppit',\r\n    null,\r\n    'Mandatory',\r\n    'Teodor',\r\n    'Daunay',\r\n    null,\r\n    'framework',\r\n    'Agathe',\r\n    'Jubb',\r\n    null,\r\n    'open architecture',\r\n    'Ina',\r\n    'Bertlin',\r\n    null,\r\n    'directional',\r\n    'Lulita',\r\n    'Vigietti',\r\n    null,\r\n    'Graphical User Interface',\r\n    'Sawyere',\r\n    'Pyle',\r\n    null,\r\n    'foreground',\r\n    'Loralie',\r\n    'Carsey',\r\n    null,\r\n    'zero tolerance',\r\n    'Maureene',\r\n    'Aggio',\r\n    null,\r\n    'strategy',\r\n    'Fabian',\r\n    \"O'Kieran\",\r\n    null,\r\n    'systemic',\r\n    'Ozzy',\r\n    'Cordle',\r\n    null,\r\n    'parallelism',\r\n    'Bent',\r\n    'Crain',\r\n    null,\r\n    'Ameliorated',\r\n    'Teddie',\r\n    'Kondratowicz',\r\n    null,\r\n    'hybrid',\r\n    'Kyrstin',\r\n    'Rugiero',\r\n    null,\r\n    '24 hour',\r\n    'Aeriel',\r\n    'Bristow',\r\n    null,\r\n    'support',\r\n    'Denna',\r\n    'Goodfellowe',\r\n    null,\r\n    'Cloned',\r\n    'Vittoria',\r\n    'Barnett',\r\n    null,\r\n    'task-force',\r\n    'Nixie',\r\n    'Lodemann',\r\n    null,\r\n    'model',\r\n    'Tisha',\r\n    'Kubacek',\r\n    null,\r\n    'scalable',\r\n    'Urson',\r\n    'Lethley',\r\n    null,\r\n    '5th generation',\r\n    'Calvin',\r\n    'Briereton',\r\n    null,\r\n    'help-desk',\r\n    'Angie',\r\n    'Chatell',\r\n    null,\r\n    'product',\r\n    'Pandora',\r\n    'Brabender',\r\n    null,\r\n    'pricing structure',\r\n    'Aubrey',\r\n    'Vanini',\r\n    null,\r\n    'intranet',\r\n    'Miranda',\r\n    'Hansell',\r\n    null,\r\n    'architecture',\r\n    'Sybil',\r\n    'Furst',\r\n    null,\r\n    'orchestration',\r\n    'Sylvan',\r\n    'Eddolls',\r\n    null,\r\n    'application',\r\n    'Alec',\r\n    'Wharin',\r\n    null,\r\n    'coherent',\r\n    'Sig',\r\n    'Forder',\r\n    null,\r\n    '3rd generation',\r\n    'Loydie',\r\n    'Tanton',\r\n    null,\r\n    'encompassing',\r\n    'Trip',\r\n    'Cotes',\r\n    null,\r\n    'client-driven',\r\n    'Ange',\r\n    'Hundley',\r\n    null,\r\n    'application',\r\n    'Beverlie',\r\n    'Armour',\r\n    null,\r\n    'solution',\r\n    'Dallon',\r\n    'Gallemore',\r\n    null,\r\n    'Focused',\r\n    'Wilek',\r\n    'McIan',\r\n    null,\r\n    'fault-tolerant',\r\n    'Odessa',\r\n    'Hembry',\r\n    null,\r\n    'Managed',\r\n    'Cristabel',\r\n    'Soughton',\r\n    null,\r\n    'methodical',\r\n    'Theadora',\r\n    'Millott',\r\n    null,\r\n    'customer loyalty',\r\n    'Cirillo',\r\n    'Batisse',\r\n    null,\r\n    'intermediate',\r\n    'Martainn',\r\n    'Hum',\r\n    null,\r\n    'Fundamental',\r\n    'Brigitta',\r\n    'Argile',\r\n    null,\r\n    'architecture',\r\n    'Madella',\r\n    'Jerwood',\r\n    null,\r\n    'bottom-line',\r\n    'Ralf',\r\n    'Hillum',\r\n    null,\r\n    'dedicated',\r\n    'Gwenette',\r\n    'Blasing',\r\n    null,\r\n    'homogeneous',\r\n    'Richmound',\r\n    'Noon',\r\n    null,\r\n    '4th generation',\r\n    'Iver',\r\n    'Chaulk',\r\n    null,\r\n    'application',\r\n    'Rolph',\r\n    'Bunting',\r\n    null,\r\n    'solution-oriented',\r\n    'Emera',\r\n    'Relfe',\r\n    null,\r\n    'array',\r\n    'Marybeth',\r\n    'Dradey',\r\n    null,\r\n    'Pre-emptive',\r\n    'Taber',\r\n    'Burch',\r\n    null,\r\n    'info-mediaries',\r\n    'Dalila',\r\n    'Fidian',\r\n    null,\r\n    'actuating',\r\n    'Udell',\r\n    'Philler',\r\n    null,\r\n    'projection',\r\n    'Justin',\r\n    'Braune',\r\n    null,\r\n    'emulation',\r\n    'Philbert',\r\n    'Gillbe',\r\n    null,\r\n    'hierarchy',\r\n    'Gray',\r\n    'Bushe',\r\n    null,\r\n    'Programmable',\r\n    'Tish',\r\n    'Dandison',\r\n    null,\r\n    'modular',\r\n    'Alley',\r\n    'Puller',\r\n    null,\r\n    'Quality-focused',\r\n    'Peadar',\r\n    'Bye',\r\n    null,\r\n    'Compatible',\r\n    'Jasun',\r\n    'Dwelly',\r\n    null,\r\n    'client-server',\r\n    'Gerrilee',\r\n    'Kiddye',\r\n    null,\r\n    'Triple-buffered',\r\n    'Cull',\r\n    'Lorenzo',\r\n    null,\r\n    'Multi-channelled',\r\n    'Demetre',\r\n    'Beauman',\r\n    null,\r\n    'website',\r\n    'Frasier',\r\n    'Philippou',\r\n    null,\r\n    'Decentralized',\r\n    'Joni',\r\n    'McMearty',\r\n    null,\r\n    'portal',\r\n    'Gris',\r\n    'Bleas',\r\n    null,\r\n    'reciprocal',\r\n    'Sapphira',\r\n    'Croke',\r\n    null,\r\n    'Compatible',\r\n    'Wood',\r\n    'Klaussen',\r\n    null,\r\n    'knowledge base',\r\n    'Kellsie',\r\n    'Brideau',\r\n    null,\r\n    'Versatile',\r\n    'Alfie',\r\n    'Ellinor',\r\n    null,\r\n    'Innovative',\r\n    'Arleyne',\r\n    'Patershall',\r\n    null,\r\n    'algorithm',\r\n    'Hazel',\r\n    'Kienle',\r\n    null,\r\n    'Decentralized',\r\n    'Osborn',\r\n    'Hirschmann',\r\n    null,\r\n    'executive',\r\n    'Nahum',\r\n    'Schulke',\r\n    null,\r\n    '4th generation',\r\n    'Nicky',\r\n    'Hedley',\r\n    null,\r\n    'Secured',\r\n    'Mabelle',\r\n    'Kemmet',\r\n    null,\r\n    'Team-oriented',\r\n    'Herta',\r\n    'Schurcke',\r\n    null,\r\n    'structure',\r\n    'Abigail',\r\n    'Robecon',\r\n    null,\r\n    'explicit',\r\n    'Jedediah',\r\n    'Macrae',\r\n    null,\r\n    'leverage',\r\n    'Harris',\r\n    'Stanex',\r\n    null,\r\n    'encompassing',\r\n    'Roderick',\r\n    'Doody',\r\n    null,\r\n    'coherent',\r\n    'Christan',\r\n    'Paur',\r\n    null,\r\n    'asynchronous',\r\n    'Aron',\r\n    'Leeburne',\r\n    null,\r\n    'Versatile',\r\n    'Mariel',\r\n    'Bartlosz',\r\n    null,\r\n    'Right-sized',\r\n    'Aldon',\r\n    'Duckham',\r\n    null,\r\n    'Customer-focused',\r\n    'Niall',\r\n    'Cristofolini',\r\n    null,\r\n    'Compatible',\r\n    'Aile',\r\n    'Rickaert',\r\n    null,\r\n    'heuristic'\r\n];\r\n","import * as internalDataArray from './dummyData';\r\n\r\nexport class Generator {\r\n    public rowTop: number;\r\n    private totalGenerated: number;\r\n    private internalDataArray: any;\r\n\r\n    constructor() {\r\n        this.totalGenerated = 0;\r\n        // transform json object to an array\r\n        this.internalDataArray = internalDataArray.data;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.totalGenerated = 0;\r\n    }\r\n\r\n    public generateData(no: any): any {\r\n        const dummyArray = [];\r\n        for (let i = 0; i < no; i++) {\r\n            // up count\r\n            this.totalGenerated++;\r\n\r\n            const random = function () {\r\n                const x1 = Math.floor(Math.random() * 3) + 0;\r\n                const x2 = Math.floor(Math.random() * 9) + 0;\r\n                const x3 = Math.floor(Math.random() * 9) + 0;\r\n                const x4 = Math.floor(Math.random() * 9) + 0;\r\n                return `${x1}${x2}${x3}${x4}`;\r\n            };\r\n\r\n            const date = new Date(\r\n                new Date().setDate(new Date().getDate() + (Math.floor(Math.random() * 300) + 0))\r\n            );\r\n\r\n            const data = this.internalDataArray;\r\n\r\n            const x: any = {};\r\n            x.index = this.totalGenerated;\r\n            x.mod = Math.floor(this.totalGenerated / 10);\r\n            x.number = Math.floor(Math.random() * 9000) + 0;\r\n            x.bool = Math.floor(Math.random() * 9000) % 3 ? true : false;\r\n            x.date = date;\r\n\r\n            for (let i = 1; i < 75; i++) {\r\n                x['word' + i] = data[random()];\r\n            }\r\n\r\n            dummyArray.push(x);\r\n        }\r\n\r\n        return dummyArray;\r\n    }\r\n}\r\n","import { DataContainer, Datasource, EntityHandler } from '@simple-html/datasource';\r\nimport { Generator } from './generator';\r\n\r\nconst generator = new Generator();\r\n\r\nconst EntityHandlerOverride = class extends EntityHandler {\r\n    get(target: object, prop: string) {\r\n        if (prop === 'superman') {\r\n            return (target['word4'] || '') + ' - ' + (target['work5'] || '');\r\n        } else {\r\n            return super.get(target, prop);\r\n        }\r\n    }\r\n\r\n    set(obj: object, prop: string, value: any) {\r\n        if (prop === 'superman') {\r\n            return false;\r\n        } else {\r\n            return super.set(obj, prop, value);\r\n        }\r\n    }\r\n};\r\n\r\nexport const WordDatasource01 = new DataContainer();\r\nWordDatasource01.overrideEntityHandler(EntityHandlerOverride);\r\nexport const WordDatasource02 = new DataContainer();\r\nexport const WordDatasource03 = new DataContainer();\r\nexport const WordDatasource04 = new DataContainer();\r\n\r\n// add some default data\r\nWordDatasource01.setData(generator.generateData(100));\r\nWordDatasource02.setData(generator.generateData(10));\r\n//same data into both\r\nWordDatasource03.setData(generator.generateData(10));\r\n\r\nexport function add(ds: Datasource, howMany: number) {\r\n    if (ds.setData) {\r\n        ds.setData(generator.generateData(howMany), true);\r\n    }\r\n}\r\n\r\nexport function set(ds: Datasource, howMany: number) {\r\n    if (ds.setData) {\r\n        ds.setData(generator.generateData(howMany), false);\r\n    }\r\n}\r\n","import { customElement, property } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { GridInterface, Datasource } from '@simple-html/grid';\r\nimport { setup } from '../gridSetup/setup';\r\nimport { WordDatasource01, set, add } from '../data/datasources';\r\n\r\nlet x = setup(1, 10, 100000);\r\n\r\n@customElement('sample-no1')\r\nexport default class extends HTMLElement {\r\n    connector: GridInterface;\r\n    ds: Datasource;\r\n    @property() query: string;\r\n\r\n    connectedCallback() {\r\n        this.connector = new GridInterface(x, WordDatasource01);\r\n        this.connector.reloadDatasource();\r\n        this.ds = this.connector.getDatasource();\r\n    }\r\n\r\n    render() {\r\n        return html`\r\n            <div class=\"flex flex-row flex-grow h-full\">\r\n                <div class=\"flex-grow\">\r\n                    <data-buttons\r\n                        class=\"flex flex-col\"\r\n                        .btnClass=${'p-2 m-2 bg-green-400'}\r\n                        .type=${'add'}\r\n                        .callback=${(x: number) => {\r\n                            add(this.ds, x);\r\n                        }}\r\n                    ></data-buttons>\r\n\r\n                    <data-buttons\r\n                        class=\"flex flex-col\"\r\n                        .btnClass=${'p-2 m-2 bg-yellow-400'}\r\n                        .type=${'set'}\r\n                        .callback=${(x: number) => {\r\n                            set(this.ds, x);\r\n                        }}\r\n                    ></data-buttons>\r\n\r\n                    <nav-buttons\r\n                        class=\"flex flex-col\"\r\n                        .btnClass=${'p-2 m-2 bg-indigo-400'}\r\n                        .callback=${(\r\n                            action: 'selectFirst' | 'selectPrev' | 'selectNext' | 'selectLast'\r\n                        ) => {\r\n                            this.ds[action]();\r\n                        }}\r\n                    ></nav-buttons>\r\n                </div>\r\n                <span>${this.query}</span>\r\n                <simple-html-grid\r\n                    style=\"width:100%\"\r\n                    class=\"simple-html-grid w-full flex-grow\"\r\n                    .interface=${this.connector}\r\n                >\r\n                </simple-html-grid>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { GridInterface, Datasource } from '@simple-html/grid';\nimport { setup } from '../gridSetup/setup';\nimport { WordDatasource02, set, add } from '../data/datasources';\n\n@customElement('sample-no2')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    ds: Datasource;\n\n    connectedCallback() {\n        this.connector = new GridInterface(setup(4, 20), WordDatasource02);\n        this.connector.reloadDatasource();\n        this.ds = this.connector.getDatasource();\n    }\n\n    render() {\n        return html`\n            <div class=\"flex flex-row flex-grow h-full\">\n                <div class=\"flex-grow\">\n                    <data-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-green-400'}\n                        .type=${'add'}\n                        .callback=${(x: number) => {\n                            add(this.ds, x);\n                        }}\n                    ></data-buttons>\n\n                    <data-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-yellow-400'}\n                        .type=${'set'}\n                        .callback=${(x: number) => {\n                            set(this.ds, x);\n                        }}\n                    ></data-buttons>\n\n                    <nav-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-indigo-400'}\n                        .callback=${(\n                            action: 'selectFirst' | 'selectPrev' | 'selectNext' | 'selectLast'\n                        ) => {\n                            this.ds[action]();\n                        }}\n                    ></nav-buttons>\n                </div>\n\n                <simple-html-grid\n                    style=\"width:100%\"\n                    class=\"simple-html-grid w-full flex-grow\"\n                    .interface=${this.connector}\n                >\n                </simple-html-grid>\n            </div>\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { GridInterface, Datasource } from '@simple-html/grid';\nimport { setup } from '../gridSetup/setup';\nimport { WordDatasource03, set, add } from '../data/datasources';\n\n@customElement('sample-no3')\nexport default class extends HTMLElement {\n    connector1: GridInterface;\n    connector2: GridInterface;\n    ds1: Datasource;\n    ds2: Datasource;\n    connectedCallback() {\n        this.connector1 = new GridInterface(setup(1, 10), WordDatasource03);\n        this.connector1.reloadDatasource();\n        this.connector2 = new GridInterface(setup(1, 10), WordDatasource03);\n        this.connector2.reloadDatasource();\n        this.ds1 = this.connector1.getDatasource();\n        this.ds2 = this.connector2.getDatasource();\n    }\n\n    render() {\n        return html`\n            <div class=\"flex flex-row flex-grow h-full\">\n                <div class=\"flex flex-row flex-grow h-full\">\n                    <div class=\"flex-grow\">\n                        <data-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-green-400'}\n                            .type=${'add'}\n                            .callback=${(x: number) => {\n                                add(this.ds1, x);\n                            }}\n                        ></data-buttons>\n\n                        <data-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-yellow-400'}\n                            .type=${'set'}\n                            .callback=${(x: number) => {\n                                set(this.ds1, x);\n                            }}\n                        ></data-buttons>\n\n                        <nav-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-indigo-400'}\n                            .callback=${(action: 'first' | 'next' | 'prev' | 'last') => {\n                                this.ds1[action]();\n                            }}\n                        ></nav-buttons>\n                    </div>\n\n                    <simple-html-grid\n                        style=\"width:100%\"\n                        class=\"simple-html-grid w-full flex-grow\"\n                        .interface=${this.connector1}\n                    >\n                    </simple-html-grid>\n                </div>\n\n                <div class=\"flex flex-row flex-grow h-full\">\n                    <div class=\"flex-grow\">\n                        <data-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-green-400'}\n                            .type=${'add'}\n                            .callback=${(x: number) => {\n                                add(this.ds2, x);\n                            }}\n                        ></data-buttons>\n\n                        <data-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-yellow-400'}\n                            .type=${'set'}\n                            .callback=${(x: number) => {\n                                set(this.ds2, x);\n                            }}\n                        ></data-buttons>\n\n                        <nav-buttons\n                            class=\"flex flex-col\"\n                            .btnClass=${'p-2 m-2 bg-indigo-400'}\n                            .callback=${(\n                                action: 'selectFirst' | 'selectPrev' | 'selectNext' | 'selectLast'\n                            ) => {\n                                this.ds2[action]();\n                            }}\n                        ></nav-buttons>\n                    </div>\n\n                    <simple-html-grid\n                        style=\"width:100%\"\n                        class=\"simple-html-grid w-full flex-grow\"\n                        .interface=${this.connector2}\n                    >\n                    </simple-html-grid>\n                </div>\n            </div>\n        `;\n    }\n}\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('sample-no4')\r\nexport default class extends HTMLElement {\r\n    render() {\r\n        return html`<simple-html-grid-filter-dialog\r\n            style=\"margin:25px\"\r\n        ></simple-html-grid-filter-dialog>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('data-buttons')\r\nexport default class extends HTMLElement {\r\n    callback: Function;\r\n    type: string;\r\n    btnClass: string;\r\n\r\n    render() {\r\n        return html` <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback(1);\r\n                }}\r\n            >\r\n                ${this.type} 1\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback(10);\r\n                }}\r\n            >\r\n                ${this.type} 10\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback(100);\r\n                }}\r\n            >\r\n                ${this.type} 100\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback(1000);\r\n                }}\r\n            >\r\n                ${this.type} 1000\r\n            </button>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\n\r\n@customElement('nav-buttons')\r\nexport default class extends HTMLElement {\r\n    callback: (action: 'selectFirst' | 'selectPrev' | 'selectNext' | 'selectLast') => void;\r\n    btnClass: string;\r\n\r\n    render() {\r\n        return html` <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback('selectFirst');\r\n                }}\r\n            >\r\n                first\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback('selectPrev');\r\n                }}\r\n            >\r\n                prev\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback('selectNext');\r\n                }}\r\n            >\r\n                next\r\n            </button>\r\n            <button\r\n                class=${this.btnClass}\r\n                @click=${() => {\r\n                    this.callback('selectLast');\r\n                }}\r\n            >\r\n                last\r\n            </button>`;\r\n    }\r\n}\r\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { GridInterface, Datasource } from '@simple-html/grid';\nimport { setup } from '../gridSetup/setup';\nimport { WordDatasource01, set, add } from '../data/datasources';\n\n@customElement('sample-default')\nexport default class extends HTMLElement {\n    connector: GridInterface;\n    ds: Datasource;\n\n    connectedCallback() {\n        this.connector = new GridInterface(setup(1, 10), WordDatasource01);\n        this.connector.reloadDatasource();\n        this.ds = this.connector.getDatasource();\n    }\n\n    render() {\n        return html`\n            <div class=\"flex flex-row flex-grow h-full\">\n                <div class=\"flex-grow\">\n                    <data-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-green-400'}\n                        .type=${'add'}\n                        .callback=${(x: number) => {\n                            add(this.ds, x);\n                        }}\n                    ></data-buttons>\n\n                    <data-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-yellow-400'}\n                        .type=${'set'}\n                        .callback=${(x: number) => {\n                            set(this.ds, x);\n                        }}\n                    ></data-buttons>\n\n                    <nav-buttons\n                        class=\"flex flex-col\"\n                        .btnClass=${'p-2 m-2 bg-indigo-400'}\n                        .callback=${(\n                            action: 'selectFirst' | 'selectPrev' | 'selectNext' | 'selectLast'\n                        ) => {\n                            this.ds[action]();\n                        }}\n                    ></nav-buttons>\n                </div>\n\n                <simple-html-grid\n                    style=\"width:100%\"\n                    class=\"simple-html-grid w-full flex-grow\"\n                    .interface=${this.connector}\n                >\n                </simple-html-grid>\n            </div>\n        `;\n    }\n}\n","export const PATH_SLASH_REGEX = '\\\\/';\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\n","export function getVariableName(path: string) {\r\n    return path.substring(1, path.length);\r\n}\r\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { createRouteRegex } from './createRouteRegex';\r\n\r\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\r\n    if (!hash && (locationhash === '' || locationhash === '#')) {\r\n        return true;\r\n    }\r\n\r\n    if (locationhash.indexOf('?') !== -1) {\r\n        locationhash = locationhash.split('?')[0];\r\n    }\r\n\r\n    let openEnd = false;\r\n    if (hash[hash.length - 1] === '*') {\r\n        hash = hash.substring(0, hash.length - 1);\r\n        openEnd = true;\r\n    }\r\n    const pattern = parseUrlPattern(hash);\r\n    const regexString = createRouteRegex(pattern, openEnd);\r\n    const regex = new RegExp(regexString);\r\n    return regex.test(locationhash);\r\n};\r\n","import { TemplateResult, directive } from 'lit-html';\r\nimport { routeMatch } from './routeMatch';\r\n\r\nexport const resolvePromise = directive(\r\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\r\n        Promise.resolve(promise).then(() => {\r\n            part.setValue(htmlTemplate);\r\n            part.commit();\r\n        });\r\n    }\r\n);\r\n\r\nexport const routeMatchAsync = function (\r\n    hash = '',\r\n    importStatement: () => Promise<any>,\r\n    htmlTemplate: TemplateResult\r\n) {\r\n    if (routeMatch(hash)) {\r\n        return resolvePromise(importStatement(), htmlTemplate);\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { customElement, requestRender } from '@simple-html/core';\r\nimport { html } from 'lit-html';\r\nimport { routeMatch } from '@simple-html/router';\r\n\r\n@customElement('app-root')\r\nexport default class extends HTMLElement {\r\n    elements = ['#default', '#sample1', '#sample2', '#sample3', '#sample4'];\r\n\r\n    render() {\r\n        return html`<section class=\"flex flex-row flex-grow h-full\">\r\n            <!-- our simple navigation  -->\r\n            <div class=\"bg-gray-200 flex flex-col\">\r\n                ${this.elements.map((element) => {\r\n                    return html`<a\r\n                       class=\"p-2 m-2 bg-indigo-300\"\r\n                       href=${element}\r\n                       @click=${() => requestRender(this)}>\r\n                        ${element}\r\n                    </button>`;\r\n                })}\r\n            </div>\r\n\r\n            <!--  our routes -->\r\n            ${routeMatch('#default')\r\n                ? html`<sample-default class=\"flex-grow\"></sample-default>`\r\n                : ''}\r\n            ${routeMatch('#sample1') ? html`<sample-no1 class=\"flex-grow\"></sample-no1>` : ''}\r\n            ${routeMatch('#sample2') ? html`<sample-no2 class=\"flex-grow\"></sample-no2>` : ''}\r\n            ${routeMatch('#sample3') ? html`<sample-no3 class=\"flex-grow\"></sample-no3>` : ''}\r\n            ${routeMatch('#sample4') ? html`<sample-no4 class=\"flex-grow\"></sample-no4>` : ''}\r\n        </section>`;\r\n    }\r\n}\r\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\r\n\r\nif (document.body) {\r\n    // I just want every thing to be rebuild from main element during hmr\r\n    document.body.innerHTML = '';\r\n    setTimeout(() => {\r\n        document.body.innerHTML = '<app-root></app-root>';\r\n    }, 0);\r\n}\r\n\r\napplyPolyfill(ReflowStrategy.NONE);\r\n","import './hmr';\r\nimport './index.css';\r\n\r\nimport { enableInternalLogger } from '@simple-html/core';\r\n// we need to disable loggin on some of the grid elements so we dont drown\r\nenableInternalLogger([\r\n    'SIMPLE-HTML-GRID-ROW-GROUP',\r\n    'SIMPLE-HTML-GRID-CELL-ROW',\r\n    'SIMPLE-HTML-GRID-GROUP-ROW',\r\n    'SIMPLE-HTML-GRID-CELL-LABEL',\r\n    'SIMPLE-HTML-GRID-CELL-FILTER',\r\n    'SIMPLE-HTML-GRID-ROW',\r\n    'SIMPLE-HTML-GRID-GROUP-FILTER',\r\n    'SIMPLE-HTML-GRID-GROUP-LABEL',\r\n    'SIMPLE-HTML-GRID-PANEL',\r\n    'SIMPLE-HTML-GRID-FOOTER',\r\n    'SIMPLE-HTML-GRID-BODY',\r\n    'SIMPLE-HTML-GRID-HEADER',\r\n    'SIMPLE-HTML-GRID-MENU-ROW',\r\n    'SIMPLE-HTML-GRID-MENU-FILTER',\r\n    'SIMPLE-HTML-GRID-MENU-LABEL',\r\n    'SIMPLE-HTML-GRID-FILTER-DIALOG'\r\n]);\r\n\r\n// add our sample parts\r\nimport './elements/app-root';\r\nimport './elements/sample-default';\r\nimport './elements/sample-no1';\r\nimport './elements/sample-no2';\r\nimport './elements/sample-no3';\r\nimport './elements/sample-no4';\r\n\r\n// extra\r\nimport './elements/data-buttons';\r\nimport './elements/nav-buttons';\r\n\r\n// add our grid\r\nimport '@simple-html/grid';\r\nimport '@simple-html/grid/src/grid.css';\r\n","import { FilterAttributeSimple, FilterComparisonOperator } from './types';\n\nexport function objectFilter(rowData: any, filter: FilterAttributeSimple) {\n    let result = true;\n\n    // vars\n    let rowValue: any;\n    let filterValue: any;\n    let filterOperator = filter.operator;\n    let newFilterOperator: FilterComparisonOperator;\n    let type: string = filter.type || 'text';\n\n    if (filter.value === 'null') {\n        type = 'null';\n    }\n\n    if (filter.value === null || filter.value === undefined) {\n        type = 'null';\n    }\n\n    if (filter.value instanceof Date) {\n        // little chance someone sends in date if they do not want to query for it\n        type = 'date';\n    }\n\n    if (Number(filter.value) === filter.value) {\n        type = 'number';\n    }\n\n    rowValue = rowData[filter.attribute];\n\n    // helper for boolean\n    const typeBool: { true: boolean; false: boolean } = {\n        true: true,\n        false: false\n    };\n\n    // lets set some defaults/corrections if its all wrong\n    switch (type) {\n        case 'null':\n            filterValue = null;\n            filterOperator = filterOperator === 'NOT_EQUAL_TO' ? 'NOT_EQUAL_TO' : 'EQUAL'; // we only want blanks or not blanks..\n            if (rowValue === undefined || rowValue === 0 || rowValue === '') {\n                rowValue = null;\n            }\n\n            break;\n\n        case 'date':\n            try {\n                rowValue = rowValue.toISOString();\n            } catch (err) {\n                try {\n                    // if error we can try and convert it to date first\n                    rowValue = new Date(rowValue).toISOString();\n                } catch (err) {\n                    rowValue = rowValue;\n                }\n            }\n\n            try {\n                filterValue = filter.value.toISOString();\n            } catch (err) {\n                filterValue = filter.value;\n            }\n\n            filterOperator = filterOperator || 'GREATER_THAN_OR_EQUAL_TO';\n            if (\n                filterOperator === 'CONTAINS' ||\n                filterOperator === 'BEGIN_WITH' ||\n                filterOperator === 'END_WITH' ||\n                filterOperator === 'DOES_NOT_CONTAIN'\n            ) {\n                filterOperator = 'GREATER_THAN_OR_EQUAL_TO';\n            }\n            break;\n        case 'number':\n            filterValue = Number(filter.value);\n            if (!filterValue) {\n                // needs to be 0\n                filterValue = 0;\n            }\n            try {\n                rowValue = isNaN(Number(rowValue)) ? 0 : Number(rowValue);\n            } catch (err) {\n                rowValue = rowValue;\n            }\n\n            filterOperator = filterOperator || 'GREATER_THAN_OR_EQUAL_TO';\n            if (\n                filterOperator === 'CONTAINS' ||\n                filterOperator === 'BEGIN_WITH' ||\n                filterOperator === 'END_WITH' ||\n                filterOperator === 'DOES_NOT_CONTAIN'\n            ) {\n                filterOperator = 'GREATER_THAN_OR_EQUAL_TO';\n            }\n            break;\n        case 'text':\n            if (rowValue === null || rowValue === undefined) {\n                rowValue = '';\n            } else {\n                rowValue = rowValue + ''; // incase we got something else\n                rowValue = rowValue.toLowerCase();\n            }\n            filterValue = filter.value.toLowerCase();\n            filterOperator = filterOperator || 'BEGIN_WITH';\n            newFilterOperator = filterOperator;\n\n            // if filter operator is BEGIN WITH\n            if (filter.value.charAt(0) === '*' && filterOperator === 'BEGIN_WITH') {\n                newFilterOperator = 'CONTAINS';\n                filterValue = filterValue.substr(1, filterValue.length);\n            }\n\n            // if filter operator is EQUAL TO\n            // wildcard first = end with\n            if (filter.value.charAt(0) === '*' && filterOperator === 'EQUAL') {\n                newFilterOperator = 'END_WITH';\n                filterValue = filterValue.substr(1, filterValue.length);\n            }\n\n            // wildcard end and first = contains\n            if (\n                filter.value.charAt(filter.value.length - 1) === '*' &&\n                filterOperator === 'EQUAL' &&\n                newFilterOperator === 'END_WITH'\n            ) {\n                newFilterOperator = 'CONTAINS';\n                filterValue = filterValue.substr(0, filterValue.length - 1);\n            }\n\n            if (\n                filter.value.charAt(filter.value.length - 1) === '*' &&\n                (filterOperator === 'END_WITH' || newFilterOperator === 'END_WITH')\n            ) {\n                newFilterOperator = 'CONTAINS';\n                filterValue = filterValue.substr(0, filterValue.length - 1);\n            }\n\n            // begin with since wildcard is in the end\n            if (\n                filter.value.charAt(filter.value.length - 1) === '*' &&\n                filterOperator === 'EQUAL' &&\n                newFilterOperator !== 'END_WITH' &&\n                newFilterOperator !== 'CONTAINS'\n            ) {\n                newFilterOperator = 'BEGIN_WITH';\n                filterValue = filterValue.substr(0, filterValue.length - 1);\n            }\n\n            // set the filteroperator from new if changed\n            if (filterOperator !== newFilterOperator) {\n                filterOperator = newFilterOperator;\n            }\n            break;\n        case 'boolean':\n            filterValue = typeBool[filter.value];\n            filterOperator = 'EQUAL';\n            break;\n\n        default:\n            // todo: take the stuff under equal to and put in a function\n            // and also call i from here.. or just make it fail?\n            try {\n                rowValue = rowValue.toLowerCase();\n            } catch (err) {\n                rowValue = rowValue;\n            }\n            try {\n                filterValue = filter.value.toLowerCase();\n            } catch (err) {\n                filterValue = filter.value;\n            }\n            filterOperator = filterOperator || 'EQUAL';\n            break;\n    }\n\n    // filter from what operator used\n    switch (filterOperator) {\n        case 'EQUAL':\n            if (rowValue !== filterValue) {\n                result = false;\n            }\n            break;\n        case 'LESS_THAN_OR_EQUAL_TO':\n            if (!(rowValue <= filterValue)) {\n                result = false;\n            }\n            break;\n        case 'GREATER_THAN_OR_EQUAL_TO':\n            if (!(rowValue >= filterValue)) {\n                result = false;\n            }\n            break;\n        case 'LESS_THAN':\n            if (!(rowValue < filterValue)) {\n                result = false;\n            }\n            break;\n        case 'GREATER_THAN':\n            if (!(rowValue > filterValue)) {\n                result = false;\n            }\n            break;\n        case 'CONTAINS':\n            if (rowValue.indexOf(filterValue) === -1) {\n                result = false;\n            }\n            break;\n        case 'NOT_EQUAL_TO':\n            if (rowValue === filterValue) {\n                result = false;\n            }\n            break;\n        case 'DOES_NOT_CONTAIN':\n            if (rowValue.indexOf(filterValue) !== -1) {\n                result = false;\n            }\n            break;\n        case 'BEGIN_WITH':\n            if (rowValue.substring(0, filterValue.length) !== filterValue) {\n                result = false;\n            }\n            break;\n        case 'END_WITH':\n            if (\n                rowValue.substring(rowValue.length - filterValue.length, rowValue.length) !==\n                filterValue\n            ) {\n                result = false;\n            }\n            break;\n        default:\n            if (rowValue !== filterValue) {\n                result = false;\n            }\n    }\n    if (type === 'text') {\n        if (filter.value.charAt(0) === '*' && filter.value.length === 'EQUAL') {\n            result = true;\n        }\n    }\n\n    return result;\n}\n","import { Entity, FilterArgument, FilterComparisonOperator } from './types';\nimport { objectFilter } from './objectFilter';\n\nexport class Filter {\n    private currentFilter: FilterArgument;\n\n    constructor() {\n        this.currentFilter = null;\n    }\n\n    public getFilter(): FilterArgument {\n        return this.currentFilter;\n    }\n\n    public setFilter(filter: FilterArgument) {\n        this.currentFilter = filter;\n    }\n\n    public getFilterFromType(type: string): FilterComparisonOperator {\n        switch (type) {\n            case 'date':\n            case 'number':\n                return 'GREATER_THAN';\n            case 'bool':\n                return 'EQUAL';\n            default:\n                return 'BEGIN_WITH';\n        }\n    }\n\n    public filter(objArray: Entity[], ObjFilter: FilterArgument) {\n        this.currentFilter = ObjFilter;\n\n        if (!ObjFilter) {\n            return objArray.slice();\n        }\n\n        const resultArray = objArray.filter((rowData) => {\n            // lets have true as default, so all that should not be there we set false..\n            if (ObjFilter.logicalOperator === 'AND') {\n                return this.andStatement(rowData, ObjFilter);\n            } else {\n                return this.orStatement(rowData, ObjFilter);\n            }\n        });\n\n        return resultArray;\n    }\n\n    private orStatement(rowData: Entity, ObjFilter: FilterArgument): boolean {\n        if (Array.isArray(ObjFilter.filterArguments)) {\n            for (let i = 0; i < ObjFilter.filterArguments.length; i++) {\n                const filter = ObjFilter.filterArguments[i];\n                if (filter.logicalOperator === 'AND') {\n                    const result = this.andStatement(rowData, filter);\n                    if (result) {\n                        return true;\n                    }\n                }\n                if (filter.logicalOperator === 'OR') {\n                    const result = this.orStatement(rowData, filter);\n                    if (result) {\n                        return true;\n                    }\n                }\n                if (\n                    filter.logicalOperator === 'NONE' ||\n                    filter.logicalOperator === null ||\n                    filter.logicalOperator == undefined\n                ) {\n                    let value = filter.value;\n                    if (filter.valueType === 'ATTRIBUTE') {\n                        if (typeof filter.value === 'string') {\n                            value = rowData[filter.value];\n                        } else {\n                            console.error(\n                                'filtervalue needs to be string if you are comparing attributes'\n                            );\n                        }\n                    }\n                    let result = false;\n                    if (filter.operator === 'IN') {\n                        let values = filter.value as any;\n                        if (!Array.isArray(filter.value)) {\n                            if (typeof filter.value !== 'string') {\n                                return false;\n                            }\n                            values = (filter.value as string).split('\\n');\n                        }\n\n                        for (let y = 0; y < values.length; y++) {\n                            const temp = objectFilter(rowData, {\n                                value: values[y],\n                                operator: 'EQUAL',\n                                attribute: filter.attribute,\n                                type: filter.attributeType\n                            });\n                            if (temp) {\n                                result = true;\n                            }\n                        }\n                    } else {\n                        result = objectFilter(rowData, {\n                            value: value,\n                            operator: filter.operator,\n                            attribute: filter.attribute,\n                            type: filter.attributeType\n                        });\n                    }\n\n                    // noo need to check all\n                    if (result) {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    private andStatement(rowData: Entity, ObjFilter: FilterArgument): boolean {\n        if (Array.isArray(ObjFilter.filterArguments)) {\n            for (let i = 0; i < ObjFilter.filterArguments.length; i++) {\n                const filter = ObjFilter.filterArguments[i];\n                if (filter.logicalOperator === 'AND') {\n                    const result = this.andStatement(rowData, filter);\n                    if (!result) {\n                        return false;\n                    }\n                }\n                if (filter.logicalOperator === 'OR') {\n                    const result = this.orStatement(rowData, filter);\n                    if (!result) {\n                        return false;\n                    }\n                }\n                if (\n                    filter.logicalOperator === 'NONE' ||\n                    filter.logicalOperator === null ||\n                    filter.logicalOperator == undefined\n                ) {\n                    let value = filter.value;\n                    if (filter.valueType === 'ATTRIBUTE') {\n                        if (typeof filter.value === 'string') {\n                            value = rowData[filter.value];\n                        } else {\n                            console.error(\n                                'filtervalue needs to be string if you are comparing attributes'\n                            );\n                        }\n                    }\n                    let result = false;\n                    if (filter.operator === 'IN') {\n                        let values = filter.value as any;\n                        if (!Array.isArray(filter.value)) {\n                            if (typeof filter.value !== 'string') {\n                                return false;\n                            }\n                            values = (filter.value as string).split('\\n');\n                        }\n\n                        for (let y = 0; y < values.length; y++) {\n                            const temp = objectFilter(rowData, {\n                                value: values[y],\n                                operator: 'EQUAL',\n                                attribute: filter.attribute,\n                                type: filter.attributeType\n                            });\n                            if (temp) {\n                                result = true;\n                            }\n                        }\n                    } else {\n                        result = objectFilter(rowData, {\n                            value: value,\n                            operator: filter.operator,\n                            attribute: filter.attribute,\n                            type: filter.attributeType\n                        });\n                    }\n                    // noo need to check all\n                    if (!result) {\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","import { SortArgument } from './types';\r\nimport { Entity } from '@simple-html/grid/src/types';\r\n\r\nexport class Sort {\r\n    private lastSorting: SortArgument[];\r\n    private currentSorting: SortArgument[];\r\n    private localeCompareCode: Intl.Collator;\r\n\r\n    constructor() {\r\n        this.lastSorting = [];\r\n        this.currentSorting = [];\r\n        this.localeCompareCode = null;\r\n    }\r\n\r\n    public setLocaleCompare(code: string, options?: any): void {\r\n        this.localeCompareCode = new Intl.Collator(code, options);\r\n    }\r\n\r\n    public reset(defaultSortAttribute?: string): void {\r\n        if (defaultSortAttribute) {\r\n            this.lastSorting = [{ attribute: defaultSortAttribute, ascending: true }];\r\n            this.currentSorting = [{ attribute: defaultSortAttribute, ascending: true }];\r\n        } else {\r\n            this.lastSorting = [];\r\n            this.currentSorting = [];\r\n        }\r\n    }\r\n\r\n    public overrideSort(array: SortArgument[]): void {\r\n        this.lastSorting = array;\r\n        this.currentSorting = array;\r\n    }\r\n\r\n    public getLastSort(): SortArgument[] {\r\n        return this.lastSorting;\r\n    }\r\n\r\n    public setOrderBy(param: SortArgument | SortArgument[], add?: boolean): void {\r\n        if (Array.isArray(param)) {\r\n            this.lastSorting = param;\r\n            this.currentSorting = param;\r\n        } else {\r\n            // do we add or is it the first one\r\n            if (add && this.lastSorting.length > 0) {\r\n                // its adding, so lets get last one\r\n                this.currentSorting = this.lastSorting;\r\n                let exist = false;\r\n\r\n                // loop to se if it exist from before\r\n                this.currentSorting.forEach((x) => {\r\n                    if (x.attribute === param.attribute) {\r\n                        exist = true;\r\n                        x.ascending = param.ascending;\r\n                    }\r\n                });\r\n\r\n                // if it dont exist we add it, else there isnt anythin else to do for now\r\n                if (!exist) {\r\n                    this.currentSorting.push(param);\r\n                }\r\n                this.lastSorting = this.currentSorting;\r\n            } else {\r\n                // if not adding, just set it\r\n                this.currentSorting = [param];\r\n                this.lastSorting = this.currentSorting;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getOrderBy(): SortArgument[] {\r\n        return this.currentSorting;\r\n    }\r\n\r\n    public runOrderBy(array: Entity[]): void {\r\n        // super simple for now.. atleast I have som form for sort\r\n        const thisSort = this.getOrderBy();\r\n\r\n        // this is mix from different sources... from what I can tell it works now\r\n        array.sort((obj1: object, obj2: object) => {\r\n            let result = 0;\r\n\r\n            for (let i = 0; i < thisSort.length && result === 0; ++i) {\r\n                // loop until all are sorted\r\n                const currentObj = thisSort[i];\r\n                const v1 = obj1[currentObj.attribute] || '';\r\n                const v2 = obj2[currentObj.attribute] || '';\r\n\r\n                // compares with locale if set so it handles æ ø etc if needed\r\n                const localCompare = (v1: string, v2: string): number => {\r\n                    let resultLocale = null;\r\n\r\n                    if (this.localeCompareCode) {\r\n                        // this just isnt behaving like expecte with norwegian..\r\n                        resultLocale = this.localeCompareCode.compare(v1, v2);\r\n                    } else {\r\n                        resultLocale = v1.localeCompare(v2);\r\n                    }\r\n\r\n                    return resultLocale;\r\n                };\r\n\r\n                if (v1 !== v2) {\r\n                    if (currentObj.ascending === true) {\r\n                        // ASC\r\n                        if (typeof v1 === 'string' && typeof v1 === 'string') {\r\n                            if (localCompare(v1, v2) < 0 && localCompare(v1, v2) !== 0) {\r\n                                result = -1;\r\n                            } else {\r\n                                result = 1;\r\n                            }\r\n                        } else {\r\n                            if (v1 < v2) {\r\n                                result = -1;\r\n                            } else {\r\n                                result = 1;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (typeof v1 === 'string' && typeof v1 === 'string') {\r\n                            if (localCompare(v1, v2) < 0 && localCompare(v1, v2) !== 0) {\r\n                                result = 1;\r\n                            } else {\r\n                                result = -1;\r\n                            }\r\n                        } else {\r\n                            if (v1 < v2) {\r\n                                result = 1;\r\n                            } else {\r\n                                result = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        });\r\n\r\n        // set current sort as last sort that was used\r\n        this.lastSorting = this.getOrderBy().slice(0);\r\n    }\r\n}\r\n","import { GroupArgument, Entity } from './types';\r\n\r\n/**\r\n * This takes care the generating the flat array the grid can use for grouping\r\n *\r\n */\r\nexport class Grouping {\r\n    private currentGroups: Entity[][];\r\n    private groupingConfig: GroupArgument[];\r\n    private expandedGroupIDs: Set<string>;\r\n\r\n    constructor() {\r\n        this.groupingConfig = [];\r\n        this.expandedGroupIDs = new Set([]);\r\n    }\r\n\r\n    public reset() {\r\n        this.currentGroups = [];\r\n        this.groupingConfig = [];\r\n        this.expandedGroupIDs = new Set([]);\r\n    }\r\n\r\n    public group(arrayToGroup: Entity[], groupingConfig: GroupArgument[], keepExpanded?: boolean) {\r\n        // if grouping\r\n        if (groupingConfig.length > 0) {\r\n            // temp holder for groups as we create them\r\n            if (!keepExpanded) {\r\n                this.expandedGroupIDs = new Set([]);\r\n            }\r\n\r\n            // variable to hold our groups\r\n            const groups: Entity[][] = [];\r\n\r\n            groupingConfig.forEach((groupBy, groupNo) => {\r\n                if (groupNo === 0) {\r\n                    // create main group and add to groups array\r\n                    const mainGroup = this.createMainGrouping(\r\n                        arrayToGroup,\r\n                        groupBy.attribute,\r\n                        groupNo,\r\n                        groupBy.title\r\n                    );\r\n                    groups.push(mainGroup);\r\n                } else {\r\n                    // get last group created, and group children\r\n                    const childGroupArray = groups[groups.length - 1];\r\n                    const newSubGroup = this.groupChildren(\r\n                        childGroupArray,\r\n                        groupBy.attribute,\r\n                        groupNo,\r\n                        groupBy.title\r\n                    );\r\n                    groups.push(newSubGroup);\r\n                }\r\n            });\r\n\r\n            // set to our class wo we have it for later\r\n            this.currentGroups = groups;\r\n\r\n            // set to clas so we can get it later\r\n            this.groupingConfig = groupingConfig;\r\n\r\n            // do we want what was expanded still to be expanded, if so just return firts grouping\r\n            if (!keepExpanded) {\r\n                return groups[0];\r\n            } else {\r\n                return this.expandOneOrAll(null, this.expandedGroupIDs);\r\n            }\r\n        } else {\r\n            // set all rows to 0 grouping\r\n            arrayToGroup.forEach((row) => {\r\n                row.__groupLvl = 0;\r\n            });\r\n\r\n            // clear prev grouping\r\n            this.groupingConfig = [];\r\n\r\n            return arrayToGroup;\r\n        }\r\n    }\r\n\r\n    public getExpanded() {\r\n        return Array.from(this.expandedGroupIDs);\r\n    }\r\n\r\n    public setExpanded(x: string[]) {\r\n        this.expandedGroupIDs = new Set(x);\r\n    }\r\n\r\n    public getGrouping(): GroupArgument[] {\r\n        return this.groupingConfig;\r\n    }\r\n\r\n    public setGrouping(groupingConfig: GroupArgument[]) {\r\n        this.groupingConfig = groupingConfig;\r\n    }\r\n\r\n    private toUppercase(text: string) {\r\n        if (text) {\r\n            return text[0].toUpperCase() + text.substring(1, text.length);\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    public expandOneOrAll(id: string, array?: Set<string>) {\r\n        let all = id ? false : true; // if no id, then all\r\n        if (!id) {\r\n            if (array) {\r\n                all = false;\r\n            }\r\n        }\r\n\r\n        if (!array) {\r\n            array = new Set([]);\r\n        }\r\n\r\n        const collection: Entity[] = [];\r\n        const mainGroups = this.currentGroups[0];\r\n\r\n        // loop children\r\n        const traverseSubGroups = (group: Entity) => {\r\n            group.__groupChildren.forEach((subGroup: Entity) => {\r\n                collection.push(subGroup);\r\n                switch (true) {\r\n                    case all:\r\n                    case subGroup.__groupID === id:\r\n                    case array.has(subGroup.__groupID):\r\n                    case subGroup.__groupID !== id && subGroup.__groupExpanded: //if already expanded\r\n                        if (subGroup.__groupChildren) {\r\n                            subGroup.__groupExpanded = true;\r\n                            this.expandedGroupIDs.add(subGroup.__groupID);\r\n                            traverseSubGroups(subGroup);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        // need anything here ?\r\n                        break;\r\n                }\r\n            });\r\n        };\r\n\r\n        // loop main groups\r\n        mainGroups.forEach((group: Entity) => {\r\n            collection.push(group);\r\n            switch (true) {\r\n                case all:\r\n                case group.__groupID === id:\r\n                case array.has(group.__groupID):\r\n                case group.__groupID !== id && group.__groupExpanded:\r\n                    group.__groupExpanded = true;\r\n                    this.expandedGroupIDs.add(group.__groupID);\r\n                    if (group.__groupChildren) {\r\n                        traverseSubGroups(group);\r\n                    }\r\n                    break;\r\n                default:\r\n                    // need anything here ?\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return collection;\r\n    }\r\n\r\n    /**\r\n     * collapses the id given or all if ID is null/undefined\r\n     * @param id string id\r\n     */\r\n    public collapseOneOrAll(id?: string) {\r\n        const all = id ? false : true; // if no id, then all\r\n        id = id === undefined ? null : id;\r\n\r\n        const collection: Entity[] = [];\r\n        const mainGroups = this.currentGroups[0];\r\n\r\n        // loop children\r\n        const traverseSubGroup = (group: Entity) => {\r\n            group.__groupChildren.forEach((subGroup: Entity) => {\r\n                switch (true) {\r\n                    case all:\r\n                        if (subGroup.__groupChildren) {\r\n                            subGroup.__groupExpanded = false;\r\n                            this.expandedGroupIDs.delete(subGroup.__groupID);\r\n                            traverseSubGroup(subGroup);\r\n                        }\r\n                        break;\r\n                    case subGroup.__groupID === id:\r\n                        collection.push(subGroup);\r\n                        this.expandedGroupIDs.delete(subGroup.__groupID);\r\n                        subGroup.__groupExpanded = false;\r\n                        break;\r\n                    default:\r\n                        collection.push(subGroup);\r\n                        if (subGroup.__groupChildren && subGroup.__groupExpanded) {\r\n                            traverseSubGroup(subGroup);\r\n                        }\r\n                        break;\r\n                }\r\n            });\r\n        };\r\n\r\n        // loop main groups\r\n        mainGroups.forEach((group: Entity) => {\r\n            collection.push(group);\r\n            switch (true) {\r\n                case all:\r\n                    group.__groupExpanded = false;\r\n                    this.expandedGroupIDs.delete(group.__groupID);\r\n                    if (group.__groupChildren) {\r\n                        traverseSubGroup(group);\r\n                    }\r\n                    break;\r\n                case group.__groupID === id:\r\n                    group.__groupExpanded = false;\r\n                    this.expandedGroupIDs.delete(group.__groupID);\r\n                    break;\r\n                default:\r\n                    if (group.__groupChildren && group.__groupExpanded) {\r\n                        traverseSubGroup(group);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return collection;\r\n    }\r\n\r\n    private createMainGrouping(array: Entity[], groupBy: string, groupNo: number, title: string) {\r\n        const tempGroupArray: Entity[] = [];\r\n        let curGroup: Entity = {} as Entity;\r\n        let lastGroupID: string = null;\r\n\r\n        // first level, here we use array\r\n        array.forEach((element) => {\r\n            let groupID = element[groupBy];\r\n            groupID = typeof groupID === 'boolean' ? groupID.toString() : groupID;\r\n            groupID = groupID || ' blank';\r\n\r\n            if (groupID !== lastGroupID) {\r\n                curGroup = {\r\n                    __groupName: this.toUppercase(title) + ': ' + groupID,\r\n                    __group: true,\r\n                    __groupID: groupID,\r\n                    __groupLvl: groupNo,\r\n                    __groupChildren: [element],\r\n                    __groupTotal: 1,\r\n                    __groupExpanded: false\r\n                };\r\n                element.__groupLvl = groupNo + 1;\r\n                lastGroupID = groupID;\r\n                tempGroupArray.push(curGroup);\r\n            } else {\r\n                curGroup.__groupChildren.push(element);\r\n                curGroup.__groupTotal++;\r\n            }\r\n        });\r\n\r\n        return tempGroupArray;\r\n    }\r\n\r\n    private groupChildren(\r\n        childGroupArray: Entity[],\r\n        groupBy: string,\r\n        groupNo: number,\r\n        title: string\r\n    ) {\r\n        const tempGroupArray: Entity[] = [];\r\n\r\n        let curGroup: Entity = {} as Entity;\r\n\r\n        // loop groups\r\n        childGroupArray.forEach((element: Entity) => {\r\n            let tempValue: string = null;\r\n            // loop children\r\n            const rebuiltChildrenArray: Entity[] = [];\r\n            element.__groupChildren.forEach((child: Entity) => {\r\n                const groupID = child[groupBy] || ' blank';\r\n\r\n                if (groupID !== tempValue) {\r\n                    const gidc = element.__groupID;\r\n                    curGroup = {\r\n                        __groupName: this.toUppercase(title) + ': ' + groupID,\r\n                        __groupID: gidc + '-' + groupID,\r\n                        __group: true,\r\n                        __groupLvl: groupNo,\r\n                        __groupChildren: [child],\r\n                        __groupTotal: 1,\r\n                        __groupExpanded: false\r\n                    };\r\n                    child.__groupLvl = groupNo + 1;\r\n\r\n                    tempValue = groupID;\r\n                    rebuiltChildrenArray.push(curGroup);\r\n                    tempGroupArray.push(curGroup);\r\n                } else {\r\n                    curGroup.__groupChildren.push(child);\r\n                    curGroup.__groupTotal++;\r\n                }\r\n            });\r\n\r\n            // replace children with new groups\r\n            element.__groupChildren = rebuiltChildrenArray;\r\n        });\r\n\r\n        return tempGroupArray;\r\n    }\r\n}\r\n","import { Datasource } from './dataSource';\r\n\r\nexport class Selection {\r\n    private selectedRows: number;\r\n    private selection: Set<number | string>;\r\n    private lastRowSelected: number;\r\n    private lastKeyKodeUsed: string;\r\n    private dataSource: Datasource;\r\n\r\n    constructor(dataSource: Datasource) {\r\n        this.dataSource = dataSource;\r\n        this.selectedRows = 0;\r\n        this.selection = new Set([]);\r\n    }\r\n\r\n    public isSelected(row: number): boolean {\r\n        let result = false;\r\n        if (this.selectedRows > 0) {\r\n            result = this.selection.has(this.getRowKey(row));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public deSelectAll(): void {\r\n        this.selection.clear();\r\n        this.selectedRows = this.selection.size;\r\n    }\r\n\r\n    public highlightRow(e: MouseEvent, currentRow: number): void {\r\n        let isSel: boolean;\r\n        let currentselectedRows = this.getSelectedRows();\r\n        let currentKeyKode = '';\r\n\r\n        this.dataSource.__select(currentRow);\r\n\r\n        if (currentRow !== this.lastRowSelected || currentselectedRows[0] !== currentRow) {\r\n            if (currentRow <= this.dataSource.length() - 1) {\r\n                // do I need to check this?\r\n\r\n                if (this.dataSource.getSelectionMode() === 'multiple') {\r\n                    // if multiselect duh!\r\n\r\n                    if (e.shiftKey) {\r\n                        currentKeyKode = 'shift';\r\n                        currentselectedRows = this.getSelectedRows();\r\n                        if (currentselectedRows.length > 0 && this.lastKeyKodeUsed === 'none') {\r\n                            this.lastRowSelected = currentselectedRows[0];\r\n                            this.lastKeyKodeUsed = 'shift';\r\n                        }\r\n                    }\r\n\r\n                    if (e.ctrlKey) {\r\n                        currentKeyKode = 'ctrl';\r\n                    }\r\n\r\n                    if (!e.ctrlKey && !e.shiftKey) {\r\n                        currentKeyKode = 'none';\r\n                    }\r\n\r\n                    switch (true) {\r\n                        case currentKeyKode === 'none':\r\n                            this.select(currentRow, false);\r\n                            break;\r\n                        case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'ctrl':\r\n                            isSel = this.isSelected(currentRow);\r\n                            if (isSel === true) {\r\n                                this.deSelect(currentRow);\r\n                            } else {\r\n                                this.select(currentRow, true);\r\n                            }\r\n                            this.lastRowSelected = currentRow;\r\n                            break;\r\n\r\n                        case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'shift':\r\n                            const oldSel = this.getSelectedRows();\r\n                            this.selectRange(this.lastRowSelected, currentRow);\r\n                            const newSel = this.getSelectedRows();\r\n                            this.setSelectedRows(oldSel.concat(newSel));\r\n\r\n                            break;\r\n\r\n                        case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'ctrl':\r\n                            isSel = this.isSelected(currentRow);\r\n                            if (isSel === true) {\r\n                                this.deSelect(currentRow);\r\n                            } else {\r\n                                this.select(currentRow, true);\r\n                            }\r\n                            this.lastRowSelected = currentRow;\r\n                            break;\r\n\r\n                        case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'ctrl':\r\n                            isSel = this.isSelected(currentRow);\r\n                            if (isSel === true) {\r\n                                this.deSelect(currentRow);\r\n                            } else {\r\n                                this.select(currentRow, true);\r\n                            }\r\n                            this.lastRowSelected = currentRow;\r\n                            break;\r\n\r\n                        case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'shift':\r\n                            if (this.lastRowSelected > currentRow) {\r\n                                this.selectRange(currentRow, this.lastRowSelected);\r\n                            } else {\r\n                                this.selectRange(this.lastRowSelected, currentRow);\r\n                            }\r\n\r\n                            break;\r\n\r\n                        case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'shift':\r\n                            if (this.lastRowSelected !== -1) {\r\n                                if (this.lastRowSelected > currentRow) {\r\n                                    this.selectRange(currentRow, this.lastRowSelected);\r\n                                } else {\r\n                                    this.selectRange(this.lastRowSelected, currentRow);\r\n                                }\r\n                            } else {\r\n                                this.lastRowSelected = currentRow;\r\n                                this.select(currentRow, false);\r\n                            }\r\n                            break;\r\n                        default:\r\n                            console.error('error, this should not happen, debug selection');\r\n                    }\r\n                } else {\r\n                    this.select(currentRow, false);\r\n                }\r\n                this.lastKeyKodeUsed = currentKeyKode;\r\n\r\n                // update selection on rows\r\n                this.dataSource.__callSubscribers('selectionChange');\r\n            }\r\n        } else {\r\n            // same row clicked again\r\n            if (e.ctrlKey) {\r\n                currentKeyKode = 'ctrl';\r\n            }\r\n\r\n            // if ctrl button we want to remove selection\r\n            if (currentKeyKode === 'ctrl') {\r\n                this.lastKeyKodeUsed = currentKeyKode;\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                    this.deSelect(currentRow);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n            } else {\r\n                // else we just want to make it current..\r\n                this.select(currentRow, false);\r\n            }\r\n            // update selection on rows\r\n            this.dataSource.__callSubscribers('selectionChange');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * todo, optional key\r\n     */\r\n    private getRowKey(row: number): string | number {\r\n        return this.dataSource.getRow(row) && this.dataSource.getRow(row).__KEY;\r\n    }\r\n\r\n    private getRowKeys(): any[] {\r\n        const keys: any[] = [];\r\n        this.dataSource.getRows().forEach((data: any) => {\r\n            keys.push(data.__KEY);\r\n        });\r\n\r\n        return keys;\r\n    }\r\n\r\n    private deSelect(row: number): void {\r\n        this.selection.delete(this.getRowKey(row));\r\n        this.selectedRows = this.selection.size;\r\n    }\r\n\r\n    private select(row: number, add?: boolean): void {\r\n        switch (this.dataSource.getSelectionMode()) {\r\n            case 'none':\r\n            case null:\r\n            case undefined:\r\n                break;\r\n            case 'single':\r\n                this.selection.clear();\r\n                this.selection.add(this.getRowKey(row));\r\n                this.selectedRows = this.selection.size;\r\n                break;\r\n            case 'multiple':\r\n                if (!add) {\r\n                    this.selection.clear();\r\n                    this.selection.add(this.getRowKey(row));\r\n                    this.selectedRows = this.selection.size;\r\n                } else {\r\n                    this.selection.add(this.getRowKey(row));\r\n                    this.selectedRows = this.selection.size;\r\n                }\r\n                break;\r\n            default:\r\n            // nothing-> warn ?\r\n        }\r\n    }\r\n\r\n    private selectRange(start: number, end: number): void {\r\n        if (this.dataSource.getSelectionMode() === 'multiple') {\r\n            this.selection.clear();\r\n            for (let i = start; i < end + 1; i++) {\r\n                this.selection.add(this.getRowKey(i));\r\n            }\r\n            this.selectedRows = this.selection.size;\r\n        }\r\n    }\r\n\r\n    public getSelectedRows(): number[] {\r\n        const array: number[] = [];\r\n        const keys = this.getRowKeys();\r\n        if (this.selectedRows > 0) {\r\n            keys.forEach((key, index) => {\r\n                if (this.selection.has(key) === true) {\r\n                    array.push(index);\r\n                }\r\n            });\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    private setSelectedRows(newRows: number[]): void {\r\n        if (this.selectedRows > 0) {\r\n            this.selection.clear();\r\n        }\r\n        for (let i = 0; i < newRows.length; i++) {\r\n            this.selection.add(this.getRowKey(newRows[i]));\r\n        }\r\n        this.selectedRows = this.selection.size;\r\n    }\r\n}\r\n"]}