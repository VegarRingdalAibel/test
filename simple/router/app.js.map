{"version":3,"sources":["samples/router/index.ts","samples/router/fuseHmrPlugin.ts","samples/router/hmr.ts","samples/router/routerConfig.ts","samples/router/app-root.ts","packages/core/src/index.ts","samples/router/routes/home.ts","samples/router/routes/settings.ts","packages/router/src/index.ts","samples/router/routes/childrouter.ts","packages/core/src/attribute.ts","packages/core/src/prop.ts","packages/core/src/logger.ts","packages/core/src/property.ts","packages/core/src/customElement.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/requestRender.ts","packages/core/src/disconnectedCallback.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/gotoURL.ts","packages/router/src/getRouteParams.ts","samples/router/routes/protected.ts","samples/router/routes/routerConfig.ts","packages/core/src/symbols.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/createRouteRegex.ts","packages/router/src/getVariables.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/getVariableName.ts","packages/router/src/isVariable.ts","packages/router/src/getUrlVars.ts"],"names":["core_1","payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","document","body","innerHTML","setTimeout","custom_elements_hmr_polyfill_1","NONE","router_1","home","path","href","title","load","html","lit_html_1","isNav","settings","login","unknown","child","children","subHome","subSettings","protected","router","Object","keys","exports","map","key","childRoutes","param","HTMLElement","connectedCallback","render","disconnectedCallback","routerConfig_1","route","router_2","locked","console","log","counter","Promise","resolve","alert","clicker","HASH_RENDER_EVENT","ctx","call","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","result","i","length","y","promise","push","oldhash","location","hash","isBackEvent","hashChange","then","addEventListener","cleanUp","handleEvent","removeEventListener","childRoute","options","_class","prop","defineProperty","get","symbols_1","tagName","set","x","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","configurable","attribute","replace","toLowerCase","Map","skipElements","globalThis","WeakMap","skip","context","has","count","name","tag","indexOf","id","getID","registerLoggerContext","text","Math","floor","idOnly","Array","join","isConnected","elementName","extended","elementClass","observedAttributes","value","prototype","isArray","concat","Base","constructor","renderCalled","template","templates","eventContext","updated","requestAnimationFrame","register","callers","forEach","attributeChangedCallback","newValue","nameProp","customElements","define","hmrCache","channel","args","transmitter","len","func","apply","events","filter","event","state","Set","newState","obj","part","assign","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","__wait","locationhash","split","openEnd","substring","pattern","parseUrlPattern_1","regexString","createRouteRegex_1","regex","RegExp","test","htmlTemplate","setValue","commit","importStatement","routeMatch_1","params","query","substr","urls","newUrl","val","undefined","urlparams","URLSearchParams","k","append","toString","getVariables_1","cool","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","logger","loggerCount","initSymbolCache","urlPattern","paths","pathsConfig","index","PATH_SLASH_REGEX_1","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","pathPattern","_paths","_query","getUrlVars_1","string","vars","_m"],"mappings":"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","file":"","sourcesContent":["import './hmr';\r\nimport './index.css';\r\nimport './routerConfig';\r\nimport './app-root';\r\n\r\nimport { enableInternalLogger } from '@simple-html/core';\r\nenableInternalLogger();\r\n","import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\r\nexport default function (payload: HMRPayload, helper: HMRHelper) {\r\n    const { updates } = payload;\r\n\r\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\r\n\r\n    if (helper.isStylesheeetUpdate) {\r\n        helper.flushModules(updates);\r\n\r\n        helper.updateModules();\r\n\r\n        helper.callModules(updates);\r\n    } else {\r\n        helper.flushAll();\r\n        helper.updateModules();\r\n\r\n        helper.callEntries();\r\n    }\r\n}\r\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\r\n\r\nif (document.body) {\r\n    // I just want every thing to be rebuild from main element during hmr\r\n    document.body.innerHTML = '';\r\n    setTimeout(() => {\r\n        document.body.innerHTML = '<app-root></app-root>';\r\n    }, 0);\r\n}\r\n\r\napplyPolyfill(ReflowStrategy.NONE);\r\n","import { init } from '@simple-html/router';\r\nimport { html } from 'lit-html';\r\ninit();\r\n\r\nexport const routerConfig = {\r\n    home: {\r\n        path: '',\r\n        href: '#',\r\n        title: 'Home',\r\n        load: () => import('./routes/home'),\r\n        html: html` <home-route></home-route> `,\r\n        isNav: true\r\n    },\r\n    settings: {\r\n        path: '#settings',\r\n        href: '#settings',\r\n        title: 'Settings',\r\n        load: () => import('./routes/settings'),\r\n        html: html` <settings-route></settings-route> `,\r\n        isNav: true\r\n    },\r\n    login: {\r\n        path: '#login',\r\n        href: '#login',\r\n        title: 'Login',\r\n        isNav: false\r\n    },\r\n    unknown: {\r\n        path: 'unknown',\r\n        href: 'unknown',\r\n        title: 'Unknown',\r\n        isNav: false\r\n    },\r\n    child: {\r\n        path: '#child/*',\r\n        href: '#child/',\r\n        title: 'ChildRoute',\r\n        isNav: true,\r\n        children: {\r\n            subHome: {\r\n                path: '#child/',\r\n                href: '#child/',\r\n                title: 'SubHome',\r\n                isNav: true\r\n            },\r\n            subSettings: {\r\n                path: '#child/settings',\r\n                href: '#child/settings',\r\n                title: 'Sub Settings',\r\n                isNav: true\r\n            },\r\n            protected: {\r\n                path: '#child/protected',\r\n                href: '#child/protected',\r\n                title: 'sub Protected',\r\n                isNav: true\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport function navs(router: 'sub' | 'main') {\r\n    if (router === 'main') {\r\n        return Object.keys(routerConfig).map((key) => routerConfig[key]);\r\n    } else {\r\n        const childRoutes = routerConfig.child.children;\r\n        return Object.keys(childRoutes).map((key) => childRoutes[key]);\r\n    }\r\n}\r\n\r\nexport function href(param: string) {\r\n    return param;\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport { navs, routerConfig } from './routerConfig';\r\nimport { subscribeHashEvent, unSubscribeHashEvent, gotoURL } from '@simple-html/router';\r\nimport { routeMatchAsync } from '@simple-html/router';\r\n\r\n@customElement('app-root')\r\nexport default class extends HTMLElement {\r\n    connectedCallback() {\r\n        subscribeHashEvent(this, () => {\r\n            this.render();\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeHashEvent(this);\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <ul class=\"flex bg-teal-500 p-6\">\r\n                ${navs('main').map((route: any) => {\r\n                    if (route.isNav) {\r\n                        return html`\r\n                            <li class=\"mr-6\">\r\n                                <a class=\"text-teal-200 hover:text-white\" href=\"${route.href}\"\r\n                                    >${route.title}</a\r\n                                >\r\n                            </li>\r\n                        `;\r\n                    }\r\n                    return '';\r\n                })}\r\n\r\n                <li style=\"margin-left: auto;\" class=\"mr-6\">\r\n                    <span\r\n                        class=\"text-teal-200 hover:text-white\"\r\n                        @click=${() => {\r\n                            gotoURL('#:path', { path: 'settings' });\r\n                        }}\r\n                    >\r\n                        ${this ? 'Logout' : 'Login'}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n\r\n            <!--  if you want you could show more then 1 -->\r\n            ${routeMatchAsync(\r\n                routerConfig.home.path,\r\n                routerConfig.home.load,\r\n                routerConfig.home.html\r\n            )}\r\n            ${routeMatchAsync(\r\n                routerConfig.settings.path,\r\n                routerConfig.settings.load,\r\n                routerConfig.settings.html\r\n            )}\r\n\r\n            <!--  if you want you could show more then 1 -->\r\n            ${routeMatchAsync(\r\n                '#child/*' /**use * in the end since there will be sub modules  */,\r\n                () => import('./routes/childrouter'),\r\n                html` <childrouter-route></childrouter-route> `\r\n            )}\r\n        `;\r\n    }\r\n}\r\n","import 'tslib';\r\nexport { attribute } from './attribute';\r\nexport { prop } from './prop';\r\nexport { enableInternalLogger, disableInternalLogger } from './logger';\r\nexport { property } from './property';\r\nexport { customElement } from './customElement';\r\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\r\nexport { validateKey, stateContainer, stateResult } from './state';\r\nexport { requestRender } from './requestRender';\r\nexport { disconnectedCallback } from './disconnectedCallback';\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\n\r\n@customElement('home-route')\r\nexport default class extends HTMLElement {\r\n    public render() {\r\n        return html` <section><h1>home</h1></section> `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport {\r\n    subscribeCanDeactivateEvent,\r\n    unSubscribeCanDeactivateEvent,\r\n    stopCanDeactivate\r\n} from '@simple-html/router';\r\n\r\n@customElement('settings-route')\r\nexport default class extends HTMLElement {\r\n    private locked = false;\r\n\r\n    connectedCallback() {\r\n        subscribeCanDeactivateEvent(this, function () {\r\n            console.log('trigger settings event', this.counter);\r\n            stopCanDeactivate(\r\n                new Promise((resolve) => {\r\n                    if (this.locked) {\r\n                        alert('sorry');\r\n                        resolve(false);\r\n                    } else {\r\n                        resolve(true);\r\n                    }\r\n                    console.log('stopevent');\r\n                })\r\n            );\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeCanDeactivateEvent(this);\r\n    }\r\n\r\n    clicker() {\r\n        this.locked = this.locked ? false : true;\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <section>\r\n                <h1>Settings</h1>\r\n                <br />\r\n                Locked:<input type=\"checkbox\" @click=${this.clicker} .checked=${this.locked} />\r\n            </section>\r\n        `;\r\n    }\r\n}\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement } from '@simple-html/core';\r\nimport { navs, routerConfig } from './routerConfig';\r\nimport { routeMatchAsync, subscribeHashEvent, unSubscribeHashEvent } from '@simple-html/router';\r\n\r\nconst childRoute = routerConfig.child.children;\r\n\r\n@customElement('childrouter-route')\r\nexport default class extends HTMLElement {\r\n    connectedCallback() {\r\n        subscribeHashEvent(this, () => {\r\n            this.render();\r\n        });\r\n    }\r\n    disconnectedCallback() {\r\n        unSubscribeHashEvent(this);\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <ul class=\"ani flex bg-indigo-500 p-6\">\r\n                ${navs('sub').map((route) => {\r\n                    if (route.isNav) {\r\n                        return html`\r\n                            <li class=\"mr-6\">\r\n                                <a class=\"text-teal-200 hover:text-white\" href=\"${route.href}\"\r\n                                    >${route.title}</a\r\n                                >\r\n                            </li>\r\n                        `;\r\n                    } else {\r\n                        return '';\r\n                    }\r\n                })}\r\n            </ul>\r\n\r\n            ${routeMatchAsync(\r\n                childRoute.subHome.path,\r\n                () => import('./home'),\r\n                html` <home-route></home-route> `\r\n            )}\r\n            ${routeMatchAsync(\r\n                childRoute.subSettings.path,\r\n                () => import('./settings'),\r\n                html` <settings-route></settings-route> `\r\n            )}\r\n            ${routeMatchAsync(\r\n                childRoute.protected.path,\r\n                () => import('./protected'),\r\n                html` <protected-route></protected-route> `\r\n            )}\r\n        `;\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\nimport { logger } from './logger';\n\n/**\n * @customElement- decorator\n *\n */\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\n    return function reg(elementClass: any) {\n        const observedAttributes = elementClass.observedAttributes;\n        Object.defineProperty(elementClass, 'observedAttributes', {\n            set: function (value) {\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\n                return true;\n            },\n            get: function () {\n                return elementClass.prototype[getObservedAttributesSymbol()];\n            },\n            configurable: true\n        });\n\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\n                observedAttributes\n            );\n        }\n        // if @attribute is not used we just use the standard if any\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\n            elementClass.observedAttributes = observedAttributes;\n        }\n\n        const Base: any = class extends elementClass {\n            constructor() {\n                super();\n                logger('constructor', this, super.tagName);\n            }\n\n            renderCalled() {\n                if (super.renderCalled) {\n                    super.renderCalled.call(this);\n                }\n            }\n\n            render(...result: any[]) {\n                if (super.render) {\n                    logger('render', this, super.tagName);\n                    const template = super.render.call(this, ...result);\n                    Promise.resolve(template).then((templates) => {\n                        render(templates, this as any, { eventContext: this as any });\n                        if (super.updated) {\n                            //delay so it actually get a chance to update\n                            requestAnimationFrame(() => {\n                                super.updated();\n                            });\n                        }\n                    });\n                }\n                this.renderCalled();\n            }\n            connectedCallback() {\n                logger('connectedCallback', this, super.tagName);\n                if (super.connectedCallback) {\n                    super.connectedCallback.call(this);\n                }\n                this.render(this);\n            }\n\n            register(call: Function) {\n                if (this.callers) {\n                    this.callers.push(call);\n                } else {\n                    this.callers = [];\n                    this.callers.push(call);\n                }\n            }\n\n            disconnectedCallback() {\n                logger('disconnectedCallback', this, super.tagName);\n                if (this.callers) {\n                    this.callers.forEach((call: Function) => call());\n                }\n                this.callers = [];\n                if (super.disconnectedCallback) {\n                    super.disconnectedCallback.call(this);\n                }\n            }\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n                logger('attributeChangedCallback', this, super.tagName);\n                //get map\n\n                if (!this[getObservedAttributesMapSymbol()]) {\n                    const attribute = name\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\n                        .replace(/\\s+/g, '-')\n                        .toLowerCase();\n                    this[getObservedAttributesMapSymbol()] = new Map();\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\n                }\n\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\n                this[nameProp] = newValue || '';\n                // if normal attributeChanged is set\n                if (super.attributeChangedCallback) {\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\n                }\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\n                if (super.valuesChanged) {\n                    super.valuesChanged('attribute', name, oldValue, newValue);\n                }\n            }\n        };\n        if (!customElements.get(elementName)) {\n            if (extended) {\n                customElements.define(elementName, Base, extended);\n            } else {\n                customElements.define(elementName, Base);\n            }\n        } else {\n            if ((globalThis as any).hmrCache) {\n                if (extended) {\n                    customElements.define(elementName, Base, extended);\n                } else {\n                    customElements.define(elementName, Base);\n                }\n            }\n        }\n    };\n}\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\n\nlet state = (window as any).state || {};\nconst keys = new Set();\ntype valueSetter<T> = (value: T) => void;\n\n// helper for fusebox hmr event\nif (!(window as any).state) {\n    window.addEventListener('HMR-FUSEBOX', () => {\n        (window as any).state = state;\n        console.log('HMR-FUSEBOX', (window as any).state);\n    });\n}\n\nexport type stateResult<T> = [T, valueSetter<T>];\n\n/**\n * Get current glabal state\n * great for saving state for next time user opens website\n */\nexport function getState() {\n    state;\n}\n\n/**\n * overide current state\n * great for restoring state time user opens website\n */\nexport function setState<T>(newState: T) {\n    state = newState;\n}\n\nexport function assignState<T, K extends keyof T>(obj: T, part: Pick<T, K>) {\n    return Object.assign(obj, part);\n}\n\n/**\n * simple state container\n * @param key key used in state container and event\n * @param defaultValue default state value\n * @param customPublishedTrigger if you do not want it to publish update event\n */\nexport function stateContainer<T>(\n    key: string,\n    defaultValue: T,\n    customPublishedTrigger?: boolean\n): stateResult<T> {\n    //set default value if not set\n    if (!state.hasOwnProperty(key)) {\n        state[key] = defaultValue;\n    }\n\n    const currentState: T = state[key];\n    const setter = function (value: T) {\n        state[key] = value;\n    };\n\n    const middleware = function (value: any) {\n        setter(value);\n        publish(key, value);\n    };\n\n    return [currentState, customPublishedTrigger ? setter : middleware];\n}\n\n/**\n * simple warning if you reuse a key by accident\n * @param key\n */\nexport function validateKey(key: string) {\n    if (keys.has(key)) {\n        throw new Error(`state key used allready, use another name`);\n    } else {\n        keys.add(key);\n        return key;\n    }\n}\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { createRouteRegex } from './createRouteRegex';\r\n\r\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\r\n    if (!hash && (locationhash === '' || locationhash === '#')) {\r\n        return true;\r\n    }\r\n\r\n    if (locationhash.indexOf('?') !== -1) {\r\n        locationhash = locationhash.split('?')[0];\r\n    }\r\n\r\n    let openEnd = false;\r\n    if (hash[hash.length - 1] === '*') {\r\n        hash = hash.substring(0, hash.length - 1);\r\n        openEnd = true;\r\n    }\r\n    const pattern = parseUrlPattern(hash);\r\n    const regexString = createRouteRegex(pattern, openEnd);\r\n    const regex = new RegExp(regexString);\r\n    return regex.test(locationhash);\r\n};\r\n","import { TemplateResult, directive } from 'lit-html';\r\nimport { routeMatch } from './routeMatch';\r\n\r\nexport const resolvePromise = directive(\r\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\r\n        Promise.resolve(promise).then(() => {\r\n            part.setValue(htmlTemplate);\r\n            part.commit();\r\n        });\r\n    }\r\n);\r\n\r\nexport const routeMatchAsync = function (\r\n    hash = '',\r\n    importStatement: () => Promise<any>,\r\n    htmlTemplate: TemplateResult\r\n) {\r\n    if (routeMatch(hash)) {\r\n        return resolvePromise(importStatement(), htmlTemplate);\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { html } from 'lit-html';\r\nimport { customElement, property } from '@simple-html/core';\r\n\r\n@customElement('protected-route')\r\nexport default class extends HTMLElement {\r\n    @property() cool = 1;\r\n\r\n    public render() {\r\n        return html` <section><h1>Welcome to the inner circle :-)</h1></section> `;\r\n    }\r\n}\r\n","import { init } from '@simple-html/router';\r\nimport { html } from 'lit-html';\r\ninit();\r\n\r\nexport const routerConfig = {\r\n    home: {\r\n        path: '',\r\n        href: '#',\r\n        title: 'Home',\r\n        load: () => import('./home'),\r\n        html: html` <home-route></home-route> `,\r\n        isNav: true\r\n    },\r\n    settings: {\r\n        path: '#settings',\r\n        href: '#settings',\r\n        title: 'Settings',\r\n        load: () => import('./settings'),\r\n        html: html` <settings-route></settings-route> `,\r\n        isNav: true\r\n    },\r\n    login: {\r\n        path: '#login',\r\n        href: '#login',\r\n        title: 'Login',\r\n        isNav: false\r\n    },\r\n    unknown: {\r\n        path: 'unknown',\r\n        href: 'unknown',\r\n        title: 'Unknown',\r\n        isNav: false\r\n    },\r\n    child: {\r\n        path: '#child/*',\r\n        href: '#child/',\r\n        title: 'ChildRoute',\r\n        isNav: true,\r\n        children: {\r\n            subHome: {\r\n                path: '#child/',\r\n                href: '#child/',\r\n                title: 'SubHome',\r\n                isNav: true\r\n            },\r\n            subSettings: {\r\n                path: '#child/settings',\r\n                href: '#child/settings',\r\n                title: 'Sub Settings',\r\n                isNav: true\r\n            },\r\n            protected: {\r\n                path: '#child/protected',\r\n                href: '#child/protected',\r\n                title: 'sub Protected',\r\n                isNav: true\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport function navs(router: 'sub' | 'main') {\r\n    if (router === 'main') {\r\n        return Object.keys(routerConfig).map((key) => routerConfig[key]);\r\n    } else {\r\n        const childRoutes = routerConfig.child.children;\r\n        return Object.keys(childRoutes).map((key) => childRoutes[key]);\r\n    }\r\n}\r\n\r\nexport function href(param: string) {\r\n    return param;\r\n}\r\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\n","export const PATH_SLASH_REGEX = '\\\\/';\r\n","export function getVariableName(path: string) {\r\n    return path.substring(1, path.length);\r\n}\r\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n"]}