{"version":3,"sources":["/samples/realworld-sample/src/index.ts","/samples/realworld-sample/src/routerConfig.ts","/packages/router/dist/esm/index.js","/packages/router/dist/esm/router.js","/packages/router/dist/esm/helpers.js","/packages/core/dist/esm/index.js","/packages/core/dist/esm/decorators.js","/packages/core/dist/esm/instance.js","/packages/core/dist/esm/fetchClient.js","/packages/core/dist/esm/eventAggregator.js","/samples/realworld-sample/src/routes/home-route.ts","/samples/realworld-sample/src/resources/state/sharedstate.ts","/samples/realworld-sample/src/resources/models/user.ts","/samples/realworld-sample/src/resources/services/tagservice.ts","/samples/realworld-sample/src/resources/services/apiservice.ts","/samples/realworld-sample/src/resources/services/config.ts","/samples/realworld-sample/src/resources/services/jwtservice.ts","/samples/realworld-sample/src/resources/services/servicehelper.ts","/samples/realworld-sample/src/resources/queryStringify.ts","/samples/realworld-sample/src/resources/services/articleservice.ts","/samples/realworld-sample/src/components/article-list.ts","/samples/realworld-sample/src/components/article-preview.ts","/samples/realworld-sample/src/resources/services/profileservice.ts","/samples/realworld-sample/src/routes/auth-route.ts","/samples/realworld-sample/src/resources/services/userservice.ts","/samples/realworld-sample/src/routes/editor-route.ts","/samples/realworld-sample/src/components/app-main.ts","/samples/realworld-sample/src/components/footer-section.ts","/samples/realworld-sample/src/components/header-section.ts"],"names":["$fsx","r","router_1","core_1","getRouter","registerRouteChangeHandler","options","activeRouter","publish","addRouterConfig","path","load","Promise","resolve","then","componentName","name","isNav","children","helpers_1","helpers_2","exports","enableLogger","disableLogger","router_2","href","authRouteHandler","unknowRouteHandler","goto","navs","removeRouterConfig","FreeRouter","HTMLElement","[object Object]","super","this","router","logger","getAttribute","activateRouterElement","deactivateRouterElement","customElements","get","define","RouterInternal","active","routers","routersConfig","usehash","hashChange","bind","window","addEventListener","push","loadingHandlerCallback","location","hash","length","dowork","foundRoute","routeNotFound","routeChangeHandlerCallback","activeRoute","i","indexOf","splice","params","urls","split","filter","x","newUrl","forEach","val","undefined","substr","routerName","result","data","isAuth","pathname","lastpop","backEventtriggered","y","pop","substring","routerElements","document","getElementsByTagName","ok","firstchild","canDeactivate","history","back","r_config","route","verified","RegExp","createRouteRegex","parsePattern","test","routeAuth","getNavLink","reUse","el","Object","assign","removeChild","createElement","toUpperCase","haltedActivate","elToUse","activate","getVariables","connectedCallback","appendChild","disconnectedCallback","routeNotFoundCallback","console","log","callback","routeAuthCallback","clean","routes","error","currentRoutes","getNavLinks","registerUnknowRouteHandler","registerAuthRouteHandler","isVariable","getVariableName","pattern","paths","pathsConfig","index","staticType","variable","regex","pathPattern","openEnd","args","_paths","loggerStatus","message","decorators_1","attribute","property","customElement","instance_1","instance","fetchClient_1","FetchClient","eventAggregator_1","subscribe","unSubscribe","lit_html_1","reRender","ctx","isConnected","__wait","requestAnimationFrame","render","_class","prop","defineProperty","set","oldValue","valuesChanged","replace","toLowerCase","Map","elementName","extended","elementClass","rendermethod","prototype","connectedCallbackMethod","disconnectedCallbackMethod","attributeChangedCallbackMethod","attributeChangedCallback","valuesChangedMethod","updatedMethod","updated","call","eventContext","setTimeout","newValue","instanceMap","has","newclass","config","setConfig","defaultUrl","cache","credentials","headers","method","mode","redirect","referrer","url","fetchUrl","fetchOptions","body","fetch","EventAggregator","channels","channel","Array","isArray","len","func","apply","sharedstate_1","tagservice_1","articleservice_1","default_1","articles","shownList","tags","filterTag","currentPage","limit","sharedState","SharedState","tagService","TagService","articleService","ArticleService","getArticles","getTags","offset","tag","response","getList","totalPages","from","Math","ceil","articlesCount","_val","_route","setListTo","type","html","isAuthenticated","pageNumber","map","tslib_1","__decorate","user_1","setState","currentUser","User","localStorage","user","JSON","parse","stringify","email","token","username","bio","image","apiservice_1","apiService","ApiService","config_1","jwtservice_1","servicehelper_1","queryStringify_1","jwtService","JwtService","http","headersConfig","Content-Type","Accept","getToken","Headers","setHeaders","api_url","urlqueryStringify","status","e","parseError","removeItem","json","Error","_resolve","reject","hasOwnProperty","decode","input","decodeURIComponent","urlQueryParse","query","parser","part","exec","obj","prefix","pairs","key","encodeURIComponent","join","slug","article","delete","put","post","_type","oldV","newV","setPageCb","favorited","favoritesCount","favorite","unfavorite","author","date","createdAt","Date","toLocaleDateString","month","day","year","onToggleFavorited","title","description","tagList","ProfileService","profile","userservice_1","passwordConfirm","emailConfirm","password","errors","userService","UserService","_params","canSave","attemptAuth","err","k","target","value","submitForm","setAuth","purgeAuth","saveToken","saveState","destroyToken","resetState","routeConfig","save","addTag","removeTag","publishArticle","updateHeaders"],"mappings":"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","file":"app","sourcesContent":["import 'tslib';\r\nimport './index.css';\r\nimport './routerConfig';\r\nimport './components/app-main';\r\n","import { getRouter, addRouterConfig } from '@lit-html-free/router';\r\nimport { publish } from '@lit-html-free/core';\r\n\r\n\r\ngetRouter().registerRouteChangeHandler((options: any, activeRouter: any)=> {\r\n    publish('routeChange', {options, activeRouter})\r\n})\r\n\r\naddRouterConfig('main', [\r\n    {\r\n        path: '',\r\n        load: () => import('./routes/home-route'),\r\n        componentName: 'home-comp',\r\n        name: 'HomeBlank',\r\n        isNav: false\r\n    },\r\n    {\r\n        path: 'home',\r\n        componentName: 'home-comp',\r\n        load: () => import('./routes/home-route'),\r\n        name: 'Home'\r\n    },\r\n    {\r\n        path: 'home/type/feed',\r\n        componentName: 'home-comp',\r\n        load: () => import('./routes/home-route'),\r\n        name: 'HomeFeed'\r\n    },\r\n    {\r\n        path: 'home/type/all',\r\n        componentName: 'home-comp',\r\n        load: () => import('./routes/home-route'),\r\n        name: 'HomeAll'\r\n    },\r\n    {\r\n        path: 'home/:tag',\r\n        componentName: 'home-comp',\r\n        load: () => import('./routes/home-route'),\r\n        name: 'HomeTag'\r\n    },\r\n    {\r\n        path: 'profile/:name',\r\n        componentName: 'profile-comp',\r\n        load: () => import('./routes/profile-route'),\r\n        name: 'Profile',\r\n        children: true\r\n    },\r\n    {\r\n        path: 'login',\r\n        componentName: 'auth-comp',\r\n        load: () => import('./routes/auth-route'),\r\n        name: 'Login'\r\n    },\r\n    {\r\n        path: 'register',\r\n        componentName: 'Auth-comp',\r\n        load: () => import('./routes/auth-route'),\r\n        name: 'Register'\r\n    },\r\n    {\r\n        path: 'settings',\r\n        componentName: 'Settings-comp',\r\n        load: () => import('./routes/settings-route'),\r\n        name: 'Settings'\r\n    },\r\n    {\r\n        path: 'editor',\r\n        componentName: 'Editor-comp',\r\n        load: () => import('./routes/editor-route'),\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        path: 'editor/:slug',\r\n        componentName: 'Editor-comp',\r\n        load: () => import('./routes/editor-route'),\r\n        name: 'EditorSlug'\r\n    },\r\n    {\r\n        path: 'article/:slug',\r\n        componentName: 'Article-comp',\r\n        load: () => import('./routes/article-route'),\r\n        name: 'Article'\r\n    }\r\n]);\r\n\r\naddRouterConfig('subProfile', [\r\n    {\r\n        path: 'profile/:name',\r\n        componentName: 'profile-article-route',\r\n        load: () => import('./routes/profile-article-route'),\r\n        name: 'MyPosts'\r\n    },\r\n    {\r\n        path: 'profile/:name/favorites',\r\n        componentName: 'profile-favorites-route',\r\n        load: () => import('./routes/profile-favorites-route'),\r\n        name: 'Favorites'\r\n    }\r\n]);\r\n","import { getRouter } from './router';\r\nimport { logger, } from './helpers';\r\nexport { enableLogger, disableLogger } from './helpers';\r\nexport { getRouter, href, authRouteHandler, unknowRouteHandler, addRouterConfig, goto, navs, removeRouterConfig } from './router';\r\nexport class FreeRouter extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.router = getRouter();\r\n    }\r\n    connectedCallback() {\r\n        logger('FreeRouter-connectedcallback', this.getAttribute('name'));\r\n        this.router.activateRouterElement(this.getAttribute('name'));\r\n    }\r\n    disconnectedcallback() {\r\n        logger('FreeRouter-disconnectedcallback', this.getAttribute('name'));\r\n        this.router.deactivateRouterElement(this.getAttribute('name'));\r\n    }\r\n}\r\nif (!customElements.get('free-router')) {\r\n    customElements.define('free-router', FreeRouter);\r\n}\r\n//# sourceMappingURL=index.js.map","import { parsePattern, createRouteRegex, getVariables, logger } from './helpers';\r\nexport class RouterInternal {\r\n    constructor() {\r\n        this.active = [];\r\n        this.routers = [];\r\n        this.routersConfig = [];\r\n        this.usehash = true;\r\n        this.hashChange = this.hashChange.bind(this);\r\n        window.addEventListener('hashchange', this.hashChange);\r\n    }\r\n    activateRouterElement(name) {\r\n        this.active.push(name);\r\n        if (this.loadingHandlerCallback) {\r\n            this.loadingHandlerCallback(location.hash, this.active[this.active.length - 1]);\r\n        }\r\n        this.dowork().then(() => {\r\n            if (this.foundRoute === false) {\r\n                this.routeNotFound();\r\n            }\r\n            if (this.routeChangeHandlerCallback) {\r\n                this.routeChangeHandlerCallback(this.activeRoute, this.active[this.active.length - 1]);\r\n            }\r\n        });\r\n    }\r\n    deactivateRouterElement(name) {\r\n        let i = this.active.indexOf(name);\r\n        if (i !== -1) {\r\n            this.active.splice(i, 1);\r\n        }\r\n    }\r\n    goto(hash, params = {}) {\r\n        const urls = hash.split('/').filter(x => (x ? true : false));\r\n        let newUrl = '';\r\n        urls.forEach((val, i) => {\r\n            if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n                newUrl = newUrl + params[val.substr(1, val.length)];\r\n            }\r\n            else {\r\n                newUrl = newUrl + `${val}`;\r\n            }\r\n            if (urls.length - 1 !== i) {\r\n                newUrl = newUrl + `/`;\r\n            }\r\n        });\r\n        location.hash = newUrl;\r\n    }\r\n    getNavLinks(routerName, active) {\r\n        let result = [];\r\n        let r_config = this.routersConfig[this.routers.indexOf(active ? this.active[this.active.length - 1] : routerName)];\r\n        r_config.forEach(r => {\r\n            result.push({\r\n                name: r.name,\r\n                isNav: r.isNav === false ? false : true,\r\n                href: (this.usehash ? '#' : '') + r.path,\r\n                data: r.data,\r\n                componentName: r.componentName,\r\n                isAuth: r.isAuth\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n    getNavLink(pathname, routerName, active) {\r\n        let result = {};\r\n        let r_config = this.routersConfig[this.routers.indexOf(active ? this.active[this.active.length - 1] : routerName)];\r\n        r_config.forEach(r => {\r\n            if (r.name === pathname) {\r\n                result = {\r\n                    name: r.name,\r\n                    isNav: r.isNav === false ? false : true,\r\n                    href: (this.usehash ? '#' : '') + r.path,\r\n                    data: r.data,\r\n                    componentName: r.componentName,\r\n                    isAuth: r.isAuth\r\n                };\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    async hashChange() {\r\n        this.lastpop = null;\r\n        logger('router-hashChange', 'start', this.active[this.active.length - 1]);\r\n        if (this.loadingHandlerCallback) {\r\n            this.loadingHandlerCallback(location.hash, this.active[this.active.length - 1]);\r\n        }\r\n        if (this.backEventtriggered) {\r\n            this.backEventtriggered = false;\r\n        }\r\n        else {\r\n            await this.dowork();\r\n            if (this.foundRoute === false) {\r\n                if (this.active.length > 1) {\r\n                    let y = this.active.pop();\r\n                    if (y !== this.lastpop) {\r\n                        this.lastpop = y;\r\n                        await this.dowork();\r\n                    }\r\n                }\r\n                if (this.active.length === 1 && !this.foundRoute) {\r\n                    this.routeNotFound();\r\n                }\r\n            }\r\n            if (this.routeChangeHandlerCallback) {\r\n                this.routeChangeHandlerCallback(this.activeRoute, this.active[this.active.length - 1]);\r\n            }\r\n        }\r\n    }\r\n    async dowork() {\r\n        this.foundRoute = null;\r\n        let hash = location.hash ? location.hash.substring(1, location.hash.length) : '';\r\n        let routerElements = document.getElementsByTagName('free-router');\r\n        let ok = true;\r\n        for (let i = 0; routerElements.length > i; i++) {\r\n            if (routerElements[i].getAttribute('name') === this.active[this.active.length - 1]) {\r\n                let firstchild = routerElements[i].children[0];\r\n                if (firstchild && firstchild.canDeactivate) {\r\n                    ok = await firstchild.canDeactivate();\r\n                    if (ok !== true) {\r\n                        this.backEventtriggered = true;\r\n                        history.back();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (ok === true) {\r\n            this.foundRoute = false;\r\n            logger('router-hashChange', 'routeSearch', this.active[this.active.length - 1]);\r\n            for (let i = 0; routerElements.length > i; i++) {\r\n                if (!this.foundRoute && routerElements[i].getAttribute('name') === this.active[this.active.length - 1]) {\r\n                    let r_config = this.routersConfig[this.routers.indexOf(this.active[this.active.length - 1])];\r\n                    if (r_config) {\r\n                        for (let y = 0; y < r_config.length; y++) {\r\n                            const route = r_config[y];\r\n                            let verified = false;\r\n                            if (hash === '' || route.path === '') {\r\n                                verified = hash === route.path;\r\n                            }\r\n                            else {\r\n                                let regex = new RegExp(createRouteRegex(parsePattern(route.path), route.children));\r\n                                if (regex.test(hash)) {\r\n                                    verified = true;\r\n                                }\r\n                            }\r\n                            if (verified && route.isAuth) {\r\n                                if (!this.routeAuth(this.getNavLink(route.name, this.active[this.active.length - 1]))) {\r\n                                    this.foundRoute = true;\r\n                                    verified = false;\r\n                                    y = r_config.length;\r\n                                }\r\n                            }\r\n                            if (verified) {\r\n                                y = r_config.length;\r\n                                const reUse = this.activeRoute && this.activeRoute.componentName === route.componentName;\r\n                                if (reUse) {\r\n                                    logger('router-hashChange', 'verified, but reuse activated', this.active[this.active.length - 1], hash, route.name);\r\n                                }\r\n                                this.activeRoute = {\r\n                                    name: route.name,\r\n                                    href: route.path,\r\n                                    isNav: route.isNav ? true : false,\r\n                                    data: Object.assign({}, route.data),\r\n                                    componentName: route.componentName\r\n                                };\r\n                                logger('router-hashChange', 'verified', this.active[this.active.length - 1], hash, route.name);\r\n                                this.foundRoute = true;\r\n                                if (route.load && !reUse) {\r\n                                    await route.load();\r\n                                }\r\n                                if (!reUse && routerElements[i].children.length) {\r\n                                    logger('router-hashChange', 'removing child', this.active[this.active.length - 1], hash);\r\n                                    routerElements[i].removeChild(routerElements[i].children[0]);\r\n                                }\r\n                                let el;\r\n                                if (!reUse) {\r\n                                    el = document.createElement(route.componentName.toUpperCase());\r\n                                    logger('router-hashChange', 'chreate element', this.active[this.active.length - 1], hash);\r\n                                }\r\n                                if (this.haltedActivate) {\r\n                                    this.haltedActivate = null;\r\n                                }\r\n                                let elToUse = reUse ? routerElements[i].children[0] : el;\r\n                                if (elToUse.activate) {\r\n                                    let active = this.active[this.active.length - 1];\r\n                                    this.haltedActivate = route.path;\r\n                                    await elToUse.activate(route.path, getVariables(parsePattern(route.path), hash), this.activeRoute);\r\n                                    if (reUse) {\r\n                                        logger('router-hashChange', 'reUse activated');\r\n                                        if (elToUse.connectedCallback) {\r\n                                            elToUse.connectedCallback();\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (this.haltedActivate === route.path) {\r\n                                            logger('router-hashChange', 'append child', this.active[this.active.length - 1], hash);\r\n                                            routerElements[i].appendChild(el);\r\n                                        }\r\n                                        else {\r\n                                            el.disconnectedCallback ? el.disconnectedCallback() : null;\r\n                                            logger('router-hashChange', 'skipping append child', active, hash);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (!reUse) {\r\n                                        logger('router-hashChange', 'append child', this.active[this.active.length - 1], hash);\r\n                                        routerElements[i].appendChild(el);\r\n                                    }\r\n                                    else {\r\n                                        logger('router-hashChange', 'reUse activated');\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                logger('router-hashChange', 'not-verified', this.active[this.active.length - 1], hash, route.name);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    routeNotFound() {\r\n        if (this.routeNotFoundCallback) {\r\n            this.routeNotFoundCallback(location.hash);\r\n        }\r\n        else {\r\n            console.log('route not found', location.hash);\r\n        }\r\n    }\r\n    registerUnknowRouteHandler(callback) {\r\n        this.routeNotFoundCallback = callback;\r\n    }\r\n    routeAuth(options) {\r\n        if (this.routeAuthCallback) {\r\n            return this.routeAuthCallback(options);\r\n        }\r\n        else {\r\n            console.log('no auth function registered', location.hash);\r\n            return true;\r\n        }\r\n    }\r\n    href(name, params, clean) {\r\n        let result = 'unknown';\r\n        this.routersConfig.forEach(x => {\r\n            x.forEach(y => {\r\n                if (y.name === name) {\r\n                    result = y.path;\r\n                }\r\n            });\r\n        });\r\n        if (params) {\r\n            const urls = result.split('/').filter(x => (x ? true : false));\r\n            let newUrl = '';\r\n            urls.forEach((val, i) => {\r\n                if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n                    newUrl = newUrl + params[val.substr(1, val.length)];\r\n                }\r\n                else {\r\n                    newUrl = newUrl + `${val}`;\r\n                }\r\n                if (urls.length - 1 !== i) {\r\n                    newUrl = newUrl + `/`;\r\n                }\r\n            });\r\n            result = newUrl;\r\n        }\r\n        return clean ? result : (this.usehash ? '#' : '') + result;\r\n    }\r\n    registerAuthRouteHandler(callback) {\r\n        this.routeAuthCallback = callback;\r\n    }\r\n    registerLoadingHandler(callback) {\r\n        this.loadingHandlerCallback = callback;\r\n    }\r\n    registerRouteChangeHandler(callback) {\r\n        this.routeChangeHandlerCallback = callback;\r\n    }\r\n    addRouterConfig(name, routes) {\r\n        if (this.routers.indexOf(name) !== -1) {\r\n            console.error('can not have 2 routers with same name');\r\n        }\r\n        else {\r\n            let currentRoutes = [];\r\n            routes.forEach(y => {\r\n                if (this.href(y.name) !== (this.usehash ? '#' : '') + 'unknown') {\r\n                    console.error('you should need to have unique names for routes, please fix:', name, y.name);\r\n                }\r\n                if (currentRoutes.indexOf(y.name) !== -1) {\r\n                    console.error('you have same name on some of routes in new config, please fix:', y.name);\r\n                }\r\n                currentRoutes.push(y.name);\r\n            });\r\n            this.routers.push(name);\r\n            this.routersConfig.push(routes);\r\n        }\r\n    }\r\n    removeRouterConfig(name) {\r\n        let i = this.routers.indexOf(name);\r\n        if (i !== -1) {\r\n            this.routers.splice(i, 1);\r\n            this.routersConfig.splice(i, 1);\r\n        }\r\n    }\r\n}\r\nconst router = new RouterInternal();\r\nexport function getRouter() {\r\n    return router;\r\n}\r\nexport function href(name, params, clean) {\r\n    return router.href(name, params, clean);\r\n}\r\nexport function navs(routerName) {\r\n    return router.getNavLinks(routerName);\r\n}\r\nexport function addRouterConfig(name, routes) {\r\n    return router.addRouterConfig(name, routes);\r\n}\r\nexport function removeRouterConfig(name) {\r\n    return router.removeRouterConfig(name);\r\n}\r\nexport function unknowRouteHandler(callback) {\r\n    return router.registerUnknowRouteHandler(callback);\r\n}\r\nexport function authRouteHandler(callback) {\r\n    return router.registerAuthRouteHandler(callback);\r\n}\r\nexport function goto(hash, params = {}) {\r\n    return router.goto(hash, params);\r\n}\r\n//# sourceMappingURL=router.js.map","const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\r\nconst PATH_SLASH_REGEX = '\\\\/';\r\nconst isVariable = (path) => {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        if (path.split(':').length > 2) {\r\n            console.error(`route argument contains illigal string: ${path}, please fix`);\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n};\r\nconst getVariableName = (path) => {\r\n    return path.substring(1, path.length);\r\n};\r\nexport const parsePattern = (pattern) => {\r\n    const paths = pattern.split('/');\r\n    const pathsConfig = [];\r\n    paths.forEach((path, index) => {\r\n        if (index === paths.length - 1 && path === '' && pattern[pattern.length - 1] === PATH_SLASH_REGEX) {\r\n        }\r\n        else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n};\r\nexport const createRouteRegex = (pathPattern, openEnd) => {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        }\r\n        else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            }\r\n            else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n};\r\nexport const getVariables = (pathPattern, pattern) => {\r\n    const paths = pattern.split('/');\r\n    const args = {};\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i > pathPattern.length - 1) {\r\n            if (!args._paths) {\r\n                args._paths = [];\r\n            }\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    return args;\r\n};\r\nlet loggerStatus = false;\r\nexport const logger = (...message) => {\r\n    if (loggerStatus) {\r\n        console.log('Logger ---', message);\r\n    }\r\n};\r\nexport const enableLogger = () => {\r\n    loggerStatus = true;\r\n};\r\nexport const disableLogger = () => {\r\n    loggerStatus = false;\r\n};\r\n//# sourceMappingURL=helpers.js.map","import 'tslib';\r\nexport { attribute, property, customElement } from './decorators';\r\nexport { instance } from './instance';\r\nexport { FetchClient } from './fetchClient';\r\nexport { publish, subscribe, unSubscribe } from './eventAggregator';\r\n//# sourceMappingURL=index.js.map","import { render } from 'lit-html';\r\nfunction reRender(ctx) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        }\r\n        else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(() => {\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function property() {\r\n    return function reg(_class, prop) {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this['_' + prop];\r\n            },\r\n            set: function (x) {\r\n                const oldValue = this['_' + prop];\r\n                this['_' + prop] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x) {\r\n                    reRender(this);\r\n                }\r\n            }\r\n        });\r\n    };\r\n}\r\nexport function attribute() {\r\n    return function reg(_class, prop) {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this['_' + prop];\r\n            },\r\n            set: function (x) {\r\n                const oldValue = this['_' + prop];\r\n                this['_' + prop] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x) {\r\n                    reRender(this);\r\n                }\r\n            }\r\n        });\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n        if (!_class['_observedAttributesMap']) {\r\n            _class['_observedAttributesMap'] = new Map();\r\n        }\r\n        _class['_observedAttributesMap'].set(attribute, prop);\r\n        if (_class['_observedAttributes']) {\r\n            _class['_observedAttributes'].push(attribute);\r\n        }\r\n        else {\r\n            _class['_observedAttributes'] = [];\r\n            _class['_observedAttributes'].push(attribute);\r\n        }\r\n    };\r\n}\r\nexport function customElement(elementName, extended) {\r\n    return function reg(elementClass) {\r\n        if (!customElements.get(elementName)) {\r\n            const rendermethod = elementClass.prototype.render;\r\n            const connectedCallbackMethod = elementClass.prototype.connectedCallback;\r\n            const disconnectedCallbackMethod = elementClass.prototype.disconnectedCallback;\r\n            const attributeChangedCallbackMethod = elementClass.prototype.attributeChangedCallback;\r\n            const valuesChangedMethod = elementClass.prototype.valuesChanged;\r\n            const updatedMethod = elementClass.prototype.updated;\r\n            Object.defineProperty(elementClass, 'observedAttributes', {\r\n                get: function () {\r\n                    return elementClass.prototype['_observedAttributes'];\r\n                }\r\n            });\r\n            elementClass.prototype.render = function (...result) {\r\n                render(rendermethod.call(this, ...result), this, { eventContext: this });\r\n                if (updatedMethod) {\r\n                    setTimeout(() => {\r\n                        updatedMethod();\r\n                    });\r\n                }\r\n            };\r\n            elementClass.prototype.connectedCallback = function () {\r\n                if (connectedCallbackMethod) {\r\n                    connectedCallbackMethod.call(this);\r\n                }\r\n                reRender(this);\r\n            };\r\n            elementClass.prototype.disconnectedCallback = function () {\r\n                if (disconnectedCallbackMethod) {\r\n                    disconnectedCallbackMethod.call(this);\r\n                }\r\n            };\r\n            elementClass.prototype.attributeChangedCallback = function (name, oldValue, newValue) {\r\n                const nameProp = this['_observedAttributesMap'].get(name);\r\n                this[nameProp] = newValue || '';\r\n                if (attributeChangedCallbackMethod) {\r\n                    attributeChangedCallbackMethod.call(this, name, oldValue, newValue);\r\n                }\r\n                if (valuesChangedMethod) {\r\n                    valuesChangedMethod('attribute', name, oldValue, newValue);\r\n                }\r\n                reRender(this);\r\n            };\r\n            if (extended) {\r\n                customElements.define(elementName, elementClass, extended);\r\n            }\r\n            else {\r\n                customElements.define(elementName, elementClass);\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=decorators.js.map","const instanceMap = new Map();\r\nexport const instance = (_class) => {\r\n    if (instanceMap.has(_class)) {\r\n        return instanceMap.get(_class);\r\n    }\r\n    else {\r\n        const newclass = new _class();\r\n        instanceMap.set(_class, newclass);\r\n        return newclass;\r\n    }\r\n};\r\n//# sourceMappingURL=instance.js.map","export class FetchClient {\r\n    constructor(config = {}) {\r\n        this.config = config;\r\n        this.setConfig(config);\r\n    }\r\n    setConfig(config) {\r\n        if (config.defaultUrl) {\r\n            this.config.defaultUrl = config.defaultUrl;\r\n        }\r\n        if (config.cache) {\r\n            this.config.cache = config.cache;\r\n        }\r\n        if (config.credentials) {\r\n            this.config.credentials = config.credentials;\r\n        }\r\n        if (config.headers) {\r\n            this.config.headers = config.headers;\r\n        }\r\n        if (config.method) {\r\n            this.config.method = config.method;\r\n        }\r\n        if (config.mode) {\r\n            this.config.mode = config.mode;\r\n        }\r\n        if (config.redirect) {\r\n            this.config.redirect = config.redirect;\r\n        }\r\n        if (config.referrer) {\r\n            this.config.referrer = config.referrer;\r\n        }\r\n    }\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    fetch(url, options) {\r\n        const fetchUrl = this.config.defaultUrl ? this.config.defaultUrl + url : url;\r\n        const fetchOptions = {\r\n            body: options.body ? options.body : undefined,\r\n            cache: options.cache || this.config.cache,\r\n            credentials: options.credentials || this.config.credentials,\r\n            headers: options.headers || this.config.headers,\r\n            method: options.method || this.config.method,\r\n            mode: options.mode || this.config.mode,\r\n            redirect: options.redirect || this.config.redirect,\r\n            referrer: options.referrer || this.config.referrer\r\n        };\r\n        return fetch(fetchUrl, fetchOptions);\r\n    }\r\n}\r\n//# sourceMappingURL=fetchClient.js.map","import { instance } from './instance';\r\nclass EventAggregator {\r\n    constructor() {\r\n        this.channels = {};\r\n    }\r\n    publish(channel, ...args) {\r\n        Promise.resolve().then(() => {\r\n            if (Array.isArray(this.channels[channel])) {\r\n                for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                    this.channels[channel][i].func.apply(this, args);\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        });\r\n    }\r\n    unSubscribe(channel, ctx) {\r\n        if (Array.isArray(this.channels[channel])) {\r\n            for (let i = 0, len = this.channels[channel].length; i < len; i++) {\r\n                if (this.channels[channel][i].ctx === ctx) {\r\n                    this.channels[channel].splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    subscribe(channel, ctx, func) {\r\n        if (!Array.isArray(this.channels[channel])) {\r\n            this.channels[channel] = [];\r\n        }\r\n        this.channels[channel].push({ ctx: ctx, func: func });\r\n    }\r\n}\r\nexport function publish(channel, ...args) {\r\n    instance(EventAggregator).publish(channel, ...args);\r\n}\r\nexport function unSubscribe(channel, ctx) {\r\n    instance(EventAggregator).unSubscribe(channel, ctx);\r\n}\r\nexport function subscribe(channel, ctx, func) {\r\n    instance(EventAggregator).subscribe(channel, ctx, func);\r\n}\r\n//# sourceMappingURL=eventAggregator.js.map","import { html } from 'lit-html';\r\nimport { href } from '@lit-html-free/router';\r\nimport { customElement, instance } from '@lit-html-free/core';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\nimport { TagService } from 'src/resources/services/tagservice';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport '../components/article-list';\r\n\r\n@customElement('home-comp')\r\nexport default class extends HTMLElement {\r\n    private sharedState: SharedState;\r\n    public articles: any[] = [];\r\n    public shownList = 'all';\r\n    public tags: any[] = [];\r\n    public filterTag: any = undefined;\r\n    public totalPages: any;\r\n    public currentPage = 1;\r\n    public limit = 10;\r\n    public tagService: TagService;\r\n    public articleService: ArticleService;\r\n    // public haltUpdate = true\r\n\r\n    public connectedCallback() {\r\n        this.sharedState = instance(SharedState);\r\n        this.tagService = instance(TagService);\r\n        this.articleService = instance(ArticleService);\r\n\r\n        this.getArticles();\r\n        this.getTags();\r\n    }\r\n\r\n    public async getArticles() {\r\n        const params = {\r\n            limit: this.limit,\r\n            offset: this.limit * (this.currentPage - 1)\r\n        };\r\n        if (this.filterTag !== undefined) {\r\n            (params as any).tag = this.filterTag;\r\n        }\r\n        const response = await this.articleService.getList(this.shownList, params);\r\n        this.articles.splice(0, this.tags.length);\r\n        this.articles.push(...response.articles);\r\n\r\n        // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n        this.totalPages = Array.from(\r\n            new Array(Math.ceil(response.articlesCount / this.limit)),\r\n            (_val?: any, index?) => index + 1\r\n        );\r\n        this.render();\r\n    }\r\n\r\n    public async getTags() {\r\n        const response = await this.tagService.getList();\r\n        this.tags.splice(0, this.tags.length);\r\n        this.tags.push(...response);\r\n        this.render();\r\n    }\r\n\r\n    activate(_route: string, params: any) {\r\n        if (params.tag) {\r\n            this.setListTo('all', params.tag);\r\n        } else {\r\n            if (_route === 'home/type/feed') {\r\n                this.setListTo('feed');\r\n            } else {\r\n                this.setListTo('all');\r\n            }\r\n        }\r\n    }\r\n\r\n    public setListTo(type: any, tag?: any) {\r\n        /* if (type === 'feed' && !this.sharedState.isAuthenticated) {\r\n                return;\r\n            } */\r\n        if (tag !== this.filterTag) {\r\n            this.currentPage = 1;\r\n        }\r\n        this.shownList = type;\r\n        this.filterTag = tag;\r\n    }\r\n\r\n\r\n    public render() {\r\n        return html`\r\n            <div class=\"home-page\">\r\n                <div class=\"banner\">\r\n                    <div class=\"container\">\r\n                        <h1 class=\"logo-font\">conduit</h1>\r\n                        <p>A place to share your knowledge.</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"container page\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\">\r\n                            <div class=\"feed-toggle\">\r\n                                <ul class=\"nav nav-pills outline-active\">\r\n                                    <!-- if statement -->\r\n                                    ${this.sharedState.isAuthenticated\r\n                                        ? html`\r\n                                              <li class=\"nav-item\">\r\n                                                  <a\r\n                                                      class=\" nav-link ${this.sharedState.isAuthenticated ? '' : 'disabled'} \r\n                                                ${this.shownList === 'feed' ? ' active' : ''}\"\r\n                                                      href=${href('HomeFeed')}\r\n                                                      >Your Feed</a\r\n                                                  >\r\n                                              </li>\r\n                                          `\r\n                                        : ''}\r\n\r\n                                    <li class=\"nav-item\">\r\n                                        <a\r\n                                            class=\"nav-link ${!this.filterTag && this.shownList === 'all' ? 'active' : ''}\"\r\n                                            href=${href('HomeAll')}\r\n                                            >Global Feed</a\r\n                                        >\r\n                                    </li>\r\n                                    <li class=\"nav-item\">\r\n                                        <a class=\"nav-link ${this.filterTag ? 'active' : ''}\"\r\n                                            >${this.filterTag ? '#' + this.filterTag : ''}</a\r\n                                        >\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <article-list\r\n                                .articles=${this.articles}\r\n                                .totalPages=${this.totalPages}\r\n                                .currentPage=${this.currentPage}\r\n                                .setPageCb=${(pageNumber: number)=> {\r\n                                    this.currentPage = pageNumber;\r\n                                    this.getArticles();\r\n                                }}\r\n                            >\r\n                            </article-list>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"sidebar\">\r\n                                <p>Popular Tags</p>\r\n\r\n                                <div class=\"tag-list\">\r\n                                    <!-- repeat -->\r\n                                    ${this.tags.map(tag => {\r\n                                        return html`\r\n                                            <a\r\n                                                class=\"tag-pill tag-default\"\r\n                                                href=${href('HomeTag', {tag:tag})}\r\n                                                >${tag}</a\r\n                                            >\r\n                                        `;\r\n                                    })}\r\n                                    <!-- if statement -->\r\n                                    ${this.tags.length === 0\r\n                                        ? html`\r\n                                              <div>No tags are here... yet.</div>\r\n                                          `\r\n                                        : ''}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n","import { User } from '../models/user';\n\nexport class SharedState {\n    public currentUser: User;\n    public isAuthenticated: boolean;\n\n    constructor() {\n        this.setState();\n    }\n\n    public resetState() {\n        this.currentUser = new User();\n        this.isAuthenticated = false;\n    }\n\n    public setState() {\n        if (window.localStorage['jwtToken']) {\n            const user = window.localStorage[window.localStorage['jwtToken'] + 'currentUser'];\n            if (user) {\n                this.currentUser = new User(JSON.parse(user));\n                this.isAuthenticated = true;\n            } else {\n                this.currentUser = new User();\n                this.isAuthenticated = false;\n            }\n        }\n    }\n\n    public saveState(user: User) {\n        if (user) {\n            window.localStorage[window.localStorage['jwtToken'] + 'currentUser'] = JSON.stringify(user);\n        }\n    }\n}\n","export class User {\n    public email: string;\n    public token: string;\n    public username: string;\n    public bio: string;\n    public image: string;\n\n    constructor(user?: User) {\n        this.email = user ? user.email : '';\n        this.token = user ? user.token : '';\n        this.username = user ? user.username : '';\n        this.bio = user ? user.bio : '';\n        this.image = user ? user.image : '';\n    }\n}\n","import { ApiService } from './apiservice';\r\nimport { instance } from '@lit-html-free/core';\r\n\r\nexport class TagService {\r\n    public apiService: ApiService;\r\n    constructor() {\r\n        this.apiService = instance(ApiService);\r\n    }\r\n\r\n    public async getList() {\r\n        const data = await this.apiService.get('/tags');\r\n\r\n        return data.tags;\r\n    }\r\n}\r\n","import { config } from './config';\r\n\r\nimport { JwtService } from './jwtservice';\r\nimport { status, parseError } from './servicehelper';\r\nimport { instance, FetchClient } from '@lit-html-free/core';\r\nimport { urlqueryStringify } from '../queryStringify';\r\n\r\nexport class ApiService {\r\n    public http: FetchClient;\r\n    public jwtService: JwtService;\r\n\r\n    constructor() {\r\n        this.jwtService = instance(JwtService);\r\n        this.http = new FetchClient();\r\n    }\r\n\r\n    public setHeaders() {\r\n        const headersConfig = {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json'\r\n        };\r\n\r\n        if (this.jwtService.getToken()) {\r\n            headersConfig['Authorization'] = `Token ${this.jwtService.getToken()}`;\r\n        }\r\n\r\n        return new Headers(headersConfig);\r\n    }\r\n\r\n    public async get(path: any, params?: any): Promise<any> {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: this.setHeaders()\r\n        };\r\n\r\n        try {\r\n            const result = await this.http.fetch(`${config.api_url}${path}?${urlqueryStringify(params)}`, options);\r\n\r\n            return status(result);\r\n        } catch (e) {\r\n            return parseError(e);\r\n        }\r\n    }\r\n\r\n    public async put(path: any, body = {}): Promise<any> {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: this.setHeaders(),\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        try {\r\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\r\n\r\n            return status(result);\r\n        } catch (e) {\r\n            return await parseError(e);\r\n        }\r\n    }\r\n\r\n    public async post(path: any, body = {}): Promise<any> {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: this.setHeaders(),\r\n            body: JSON.stringify(body)\r\n        };\r\n\r\n        try {\r\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\r\n\r\n            return status(result);\r\n        } catch (e) {\r\n            return await parseError(e);\r\n        }\r\n    }\r\n\r\n    public async delete(path: any): Promise<any> {\r\n        const options = {\r\n            method: 'DELETE',\r\n            headers: this.setHeaders()\r\n        };\r\n\r\n        try {\r\n            const result = await this.http.fetch(`${config.api_url}${path}`, options);\r\n\r\n            return status(result);\r\n        } catch (e) {\r\n            return await parseError(e);\r\n        }\r\n    }\r\n}\r\n","export const config = {\n    api_url: 'https://conduit.productionready.io/api'\n};\n","export class JwtService {\n    public getToken() {\n        return window.localStorage['jwtToken'];\n    }\n\n    public saveToken(token: any) {\n        window.localStorage['jwtToken'] = token;\n    }\n\n    public destroyToken() {\n        window.localStorage.removeItem('jwtToken');\n    }\n}\n","export function status(response: any) {\n    if (response.status >= 200 && response.status < 400) {\n        return response.json();\n    }\n\n    throw response;\n}\n\nexport function parseError(error: any) {\n    if (!(error instanceof Error)) {\n        return new Promise((_resolve, reject) => reject(error.json()));\n    } else {\n        return Promise.resolve(null);\n    }\n}\n","const has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input: string) {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nexport function urlQueryParse(query: string): Object {\n    const parser = /([^=?&]+)=?([^&]*)/g;\n    const result = {};\n    let part: any;\n\n    //\n    // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n    // the lastIndex property so we can continue executing this loop until we've\n    // parsed all results.\n    //\n\n    // @ts-ignore\n    // tslint:disable-next-line:curly\n    for (;\n        part = parser.exec(query);\n        result[decode(part[1])] = decode(part[2])\n    );\n\n    return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nexport function urlqueryStringify(obj: Object, prefix?: string) {\n    prefix = prefix || '';\n\n    const pairs = [];\n\n    //\n    // Optionally prefix with a '?' if needed\n    //\n    if ('string' !== typeof prefix) {\n        prefix = '?';\n    }\n\n    for (const key in obj) {\n        if (has.call(obj, key)) {\n            pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n        }\n    }\n\n    return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n","import { ApiService } from './apiservice';\r\nimport { instance } from '@lit-html-free/core';\r\n\r\nexport class ArticleService {\r\n    apiService: any;\r\n\r\n    constructor() {\r\n        this.apiService = instance(ApiService);\r\n    }\r\n\r\n    public async getList(type: any, params: any) {\r\n        const data = await this.apiService.get('/articles' + (type === 'feed' ? '/feed' : ''), params);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async get(slug: any) {\r\n        const data = await this.apiService.get('/articles/' + slug);\r\n\r\n        return data.article;\r\n    }\r\n\r\n    public async destroy(slug: any) {\r\n        const result = await this.apiService.delete('/articles/' + slug);\r\n\r\n        return result;\r\n    }\r\n\r\n    public async save(article: any) {\r\n        if (article.slug) {\r\n            // If we're updating an existing article\r\n            const data = await this.apiService.put('/articles/' + article.slug, { article: article });\r\n\r\n            return data.article;\r\n        } else {\r\n            // Otherwise, create a new article\r\n            const data = await this.apiService.post('/articles/', { article: article });\r\n\r\n            return data.article;\r\n        }\r\n    }\r\n\r\n    public async favorite(slug: any) {\r\n        const result = await this.apiService.post('/articles/' + slug + '/favorite');\r\n\r\n        return result;\r\n    }\r\n\r\n    public async unfavorite(slug: any) {\r\n        const result = await this.apiService.delete('/articles/' + slug + '/favorite');\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement, property } from '@lit-html-free/core';\r\nimport './article-preview';\r\n\r\n@customElement('article-list')\r\nexport default class extends HTMLElement {\r\n    @property() public articles: any[] = [];\r\n    @property() public totalPages: any = [];\r\n    @property() public currentPage: number;\r\n    @property() public totalPsetPageCbages: Function;\r\n    public setPageCb: Function;\r\n\r\n    valuesChanged(_type: string, attribute: string, oldV: number, newV: number) {\r\n        if (attribute === 'currentPage' && oldV && oldV !== newV) {\r\n            this.setPageCb(newV);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            ${this.articles.length === 0\r\n                ? html`\r\n                      <div class=\"article-preview\">\r\n                          No articles are here... yet.\r\n                      </div>\r\n                  `\r\n                : ''}\r\n            ${this.articles.map(article => {\r\n                return html`\r\n                    <article-preview .article=${article}></article-preview>\r\n                `;\r\n            })}\r\n            ${this.totalPages && this.totalPages.length\r\n                ? html`\r\n                      <nav>\r\n                          <ul class=\"pagination\">\r\n                              ${this.totalPages.map((pageNumber: number) => {\r\n                                  return html`\r\n                                          <li\r\n                                              class=\"page-item ${pageNumber === this.currentPage ? 'active' : ''}\"\r\n                                              @click=${() => {\r\n                                                  this.currentPage = pageNumber;\r\n                                              }}\"\r\n                                          >\r\n                                              <a class=\"page-link\">${pageNumber}</a>\r\n                                          </li>\r\n                                      `;\r\n                              })}\r\n                          </ul>\r\n                      </nav>\r\n                  `\r\n                : ''}\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\n\r\nimport { customElement, instance, property } from '@lit-html-free/core';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\nimport { href } from '@lit-html-free/router';\r\n\r\nfunction format(date: Date) {\r\n    return new Date(date).toLocaleDateString('en', {\r\n        month: 'long',\r\n        day: '2-digit',\r\n        year: 'numeric'\r\n    });\r\n}\r\n\r\n@customElement('article-preview')\r\nexport default class extends HTMLElement {\r\n    public articleService: ArticleService;\r\n    public sharedState: SharedState;\r\n    @property() public article: any;\r\n\r\n    constructor() {\r\n        super();\r\n        this.articleService = instance(ArticleService);\r\n        this.sharedState = instance(SharedState);\r\n    }\r\n\r\n    public async onToggleFavorited() {\r\n        if (this.sharedState.isAuthenticated) {\r\n            this.article.favorited = !this.article.favorited;\r\n            if (this.article.favorited) {\r\n                this.article.favoritesCount++;\r\n                await this.articleService.favorite(this.article.slug);\r\n            } else {\r\n                this.article.favoritesCount--;\r\n                await this.articleService.unfavorite(this.article.slug);\r\n            }\r\n            this.render();\r\n        } else {\r\n            location.hash = 'login';\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <div class=\"article-preview\">\r\n                <div class=\"article-meta\">\r\n                    <a href=${href('Profile', { name: this.article.author.username })}>\r\n                        <img alt=\"profile-picture\" src=${this.article.author.image ? this.article.author.image : ''} />\r\n                    </a>\r\n\r\n                    <div class=\"info\">\r\n                        <a href=${href('Profile', { name: this.article.author.username })} class=\"author\">\r\n                            ${this.article.author.username}</a\r\n                        >\r\n                        <span class=\"date\">${format(this.article.createdAt)}</span>\r\n                    </div>\r\n\r\n                    <button\r\n                        class=\"btn btn-sm pull-xs-right ${this.article.favorited ? 'btn-primary' : 'btn-outline-primary'}\"\r\n                        @click=${this.onToggleFavorited}\r\n                    >\r\n                        <i class=\"ion-heart\"></i> ${this.article.favoritesCount}\r\n                    </button>\r\n                </div>\r\n\r\n                <a href=${href('Article', { slug: this.article.slug })} class=\"preview-link\">\r\n                    <h1>${this.article.title}</h1>\r\n                    <p>${this.article.description}</p>\r\n                    <span>Read more...</span>\r\n\r\n                    <ul class=\"tag-list\">\r\n                        ${this.article.tagList.map((tag: string) => {\r\n                            return html`\r\n                                <li class=\"tag-default tag-pill tag-outline\">${tag}</li>\r\n                            `;\r\n                        })}\r\n                    </ul>\r\n                </a>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n","import { ApiService } from './apiservice';\r\nimport { instance } from '@lit-html-free/core';\r\n\r\nexport class ProfileService {\r\n    public apiService: ApiService;\r\n    constructor() {\r\n        this.apiService = instance(ApiService);\r\n    }\r\n\r\n    public async get(username: string) {\r\n        const data = await this.apiService.get('/profiles/' + username);\r\n\r\n        return data.profile;\r\n    }\r\n\r\n    public async follow(username: string) {\r\n        const result = await this.apiService.post('/profiles/' + username + '/follow');\r\n\r\n        return result;\r\n    }\r\n\r\n    public async unfollow(username: string) {\r\n        const result = await this.apiService.delete('/profiles/' + username + '/follow');\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement, instance } from '@lit-html-free/core';\r\nimport { UserService } from 'src/resources/services/userservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\nimport { href } from '@lit-html-free/router';\r\n\r\n@customElement('auth-comp')\r\nexport default class extends HTMLElement {\r\n    public userService: UserService;\r\n    public sharedState: SharedState;\r\n    public type = '';\r\n    public username = '';\r\n    public passwordConfirm = '';\r\n    public email = '';\r\n    public emailConfirm = '';\r\n    public password = '';\r\n    public errors: any[] = [];\r\n    public controller: any;\r\n\r\n    constructor() {\r\n        super();\r\n        this.userService = instance(UserService);\r\n        this.sharedState = instance(SharedState);\r\n    }\r\n\r\n    public async activate(_route: string, _params: any, route: any) {\r\n        this.type = route.name;\r\n    }\r\n\r\n    public get canSave() {\r\n        if (this.type === 'Login') {\r\n            return this.email !== '' && this.password !== '';\r\n        } else {\r\n            return (\r\n                this.username !== '' &&\r\n                this.email !== '' &&\r\n                this.password !== '' &&\r\n                this.password === this.passwordConfirm &&\r\n                this.email === this.emailConfirm\r\n            );\r\n        }\r\n    }\r\n\r\n    public async submitForm() {\r\n        this.errors = [];\r\n\r\n        const credentials = {\r\n            username: this.username,\r\n            email: this.email,\r\n            password: this.password\r\n        };\r\n\r\n        try {\r\n            await this.userService.attemptAuth(this.type, credentials);\r\n            location.hash = 'home';\r\n        } catch (e) {\r\n            const err: any = await Promise.resolve(e);\r\n            for (const k in err.errors) {\r\n                if (err.errors && err.errors[k]) {\r\n                    this.errors.push(\r\n                        err.errors[k].map((x: any) => {\r\n                            return k + ': ' + x;\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <div class=\"auth-page\">\r\n                <div class=\"container page\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n                            <h1 class=\"text-xs-center\">Sign ${this.type === 'login' ? 'in' : 'up'}</h1>\r\n                            <p class=\"text-xs-center\">\r\n                                ${this.type === 'Register'\r\n                                    ? html`\r\n                                          <a href=${href('Login')}>Have an account?</a>\r\n                                      `\r\n                                    : html`\r\n                                          <a href=${href('Register')}>Need an account?</a>\r\n                                      `}\r\n                            </p>\r\n\r\n                            <ul class=\"error-messages\">\r\n                                ${this.errors.map(error => {\r\n                                    return html`\r\n                                        <li>\r\n                                            ${error}\r\n                                        </li>\r\n                                    `;\r\n                                })}\r\n                            </ul>\r\n\r\n                            <form>\r\n                                <!-- if statement -->\r\n                                ${this.type === 'Register'\r\n                                    ? html`\r\n                                          <fieldset class=\"form-group\">\r\n                                              <input\r\n                                                  class=\"form-control form-control-lg\"\r\n                                                  type=\"text\"\r\n                                                  autocomplete=\"username\"\r\n                                                  placeholder=\"Your Name\"\r\n                                                  @input=${(e: any) => {\r\n                                                      this.username = e.target.value;\r\n                                                      this.render();\r\n                                                  }}\r\n                                              />\r\n                                          </fieldset>\r\n                                      `\r\n                                    : ''}\r\n\r\n                                <fieldset class=\"form-group\">\r\n                                    <input\r\n                                        class=\"form-control form-control-lg\"\r\n                                        type=\"text\"\r\n                                        autocomplete=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        @input=${(e: any) => {\r\n                                            this.email = e.target.value;\r\n                                            this.render();\r\n                                        }}\r\n                                    />\r\n                                </fieldset>\r\n\r\n                                <!-- if statement -->\r\n                                ${this.type === 'Register'\r\n                                    ? html`\r\n                                          <fieldset class=\"form-group\">\r\n                                              <input\r\n                                                  class=\"form-control form-control-lg\"\r\n                                                  type=\"text\"\r\n                                                  autocomplete=\"new-email\"\r\n                                                  placeholder=\"Confirm Email\"\r\n                                                  @input=${(e: any) => {\r\n                                                      this.emailConfirm = e.target.value;\r\n                                                      this.render();\r\n                                                  }}\r\n                                              />\r\n                                          </fieldset>\r\n                                      `\r\n                                    : ''}\r\n\r\n                                <fieldset class=\"form-group\">\r\n                                    <input\r\n                                        class=\"form-control form-control-lg\"\r\n                                        type=\"password\"\r\n                                        autocomplete=\"current-password\"\r\n                                        placeholder=\"Password\"\r\n                                        @input=${(e: any) => {\r\n                                            this.password = e.target.value;\r\n                                            this.render();\r\n                                        }}\r\n                                    />\r\n                                </fieldset>\r\n\r\n                                <!-- if statement -->\r\n                                ${this.type === 'Register'\r\n                                    ? html`\r\n                                          <fieldset class=\"form-group\">\r\n                                              <input\r\n                                                  class=\"form-control form-control-lg\"\r\n                                                  type=\"password\"\r\n                                                  autocomplete=\"new-password\"\r\n                                                  placeholder=\"Confirm Password\"\r\n                                                  @input=${(e: any) => {\r\n                                                      this.passwordConfirm = e.target.value;\r\n                                                      this.render();\r\n                                                  }}\r\n                                              />\r\n                                          </fieldset>\r\n                                      `\r\n                                    : ''}\r\n\r\n                                <!-- PS! do not use button in forms, need to improve override default -->\r\n                                <input\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                                    @click=${this.submitForm}\r\n                                    .disabled=${!this.canSave}\r\n                                    .value=\"Sign ${this.type === 'Login' ? 'in' : 'up'}\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n","import { ApiService } from './apiservice';\r\nimport { JwtService } from './jwtservice';\r\nimport { SharedState } from '../state/sharedstate';\r\nimport { instance } from '@lit-html-free/core';\r\n\r\nexport class UserService {\r\n    public apiService: ApiService;\r\n    public jwtService: JwtService;\r\n    public sharedState: SharedState;\r\n\r\n    constructor() {\r\n        this.jwtService = instance(JwtService);\r\n        this.sharedState = instance(SharedState);\r\n        this.apiService = instance(ApiService);\r\n    }\r\n\r\n    // Verify JWT in localstorage with server & load user's info.\r\n    // This runs once on application startup.\r\n    public async populate() {\r\n        if (this.jwtService.getToken()) {\r\n            const data = await this.apiService.get('/user');\r\n            this.setAuth(data.user);\r\n        } else {\r\n            // Remove any potential remnants of previous auth states\r\n            this.purgeAuth();\r\n        }\r\n    }\r\n\r\n    public setAuth(user: any) {\r\n        // Save JWT sent from server in localstorage\r\n        this.jwtService.saveToken(user.token);\r\n        this.sharedState.saveState(user);\r\n        this.sharedState.setState();\r\n    }\r\n\r\n    public purgeAuth() {\r\n        // Remove JWT from localstorage\r\n        this.jwtService.destroyToken();\r\n        this.sharedState.resetState();\r\n    }\r\n\r\n    public async attemptAuth(type: any, credentials: any) {\r\n        const route = type === 'Login' ? '/login' : '';\r\n        const data = await this.apiService.post('/users' + route, { user: credentials });\r\n        this.setAuth(data.user);\r\n\r\n        return data;\r\n    }\r\n\r\n    public async update(user: any) {\r\n        const data = await this.apiService.put('/user', { user });\r\n        this.sharedState.currentUser = data.user;\r\n        this.setAuth(data.user) //hmm, I dont get newest data ?\r\n\r\n        return data.user;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement, instance } from '@lit-html-free/core';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport { getRouter } from '@lit-html-free/router';\r\n\r\n@customElement('editor-comp')\r\nexport default class extends HTMLElement {\r\n    public routeConfig: any;\r\n    public slug: any;\r\n    public tag: string;\r\n    public article: any = {\r\n        title: '',\r\n        description: '',\r\n        body: '',\r\n        tagList: []\r\n    };\r\n    public articleService: ArticleService;\r\n\r\n    constructor() {\r\n        super();\r\n        this.articleService = instance(ArticleService);\r\n    }\r\n\r\n    public async activate(_route: string, params: any, routeConfig: any) {\r\n        this.routeConfig = routeConfig;\r\n        this.slug = params.slug;\r\n\r\n        if (this.slug) {\r\n            return (this.article = await this.articleService.get(this.slug));\r\n        } else {\r\n            this.article = {\r\n                title: '',\r\n                description: '',\r\n                body: '',\r\n                tagList: []\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public addTag(tag: any) {\r\n        this.article.tagList.push(tag);\r\n        this.render();\r\n    }\r\n\r\n    public removeTag(tag: any) {\r\n        this.article.tagList.splice(this.article.tagList.indexOf(tag), 1);\r\n        this.render();\r\n    }\r\n\r\n    public async publishArticle() {\r\n        const article = await this.articleService.save(this.article);\r\n        this.slug = article.slug;\r\n        getRouter().goto('article/:slug', { slug: this.slug });\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <div class=\"editor-page\">\r\n                <div class=\"container page\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n                            <form>\r\n                                <fieldset>\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control form-control-lg\"\r\n                                            placeholder=\"Article Title\"\r\n                                            .value=${this.article.title}\r\n                                            @blur=${(e: any) => (this.article.title = e.target.value)}\r\n                                        />\r\n                                    </fieldset>\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"What's this article about?\"\r\n                                            .value=${this.article.description}\r\n                                            @blur=${(e: any) => (this.article.description = e.target.value)}\r\n                                        />\r\n                                    </fieldset>\r\n                                    <fieldset class=\"form-group\">\r\n                                        <textarea\r\n                                            class=\"form-control\"\r\n                                            rows=\"8\"\r\n                                            placeholder=\"Write your article (in markdown)\"\r\n                                            .value=${this.article.body}\r\n                                            @change=${(e: any) => (this.article.body = e.target.value)}\r\n                                        ></textarea>\r\n                                    </fieldset>\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"Enter tags\"\r\n                                            .value=${this.tag || ''}\r\n                                            @blur=${(e: any) => this.addTag(e.target.value)}\r\n                                        />\r\n\r\n                                        <div class=\"tag-list\">\r\n                                            <!-- repeat statement -->\r\n                                            ${this.article.tagList.map((tag: any) => {\r\n                                                console.log(tag);\r\n                                                return html`\r\n                                                    <span class=\"tag-default tag-pill\">\r\n                                                        <i\r\n                                                            class=\"ion-close-round\"\r\n                                                            @click=${() => {\r\n                                                                this.removeTag(tag);\r\n                                                            }}\r\n                                                        ></i>\r\n                                                        ${tag}</span\r\n                                                    >\r\n                                                `;\r\n                                            })}\r\n                                        </div>\r\n                                    </fieldset>\r\n\r\n                                    <input\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-lg pull-xs-right btn-primary\"\r\n                                        type=\"button\"\r\n                                        @click=${this.publishArticle}\r\n                                        value=\"Publish Article\"\r\n                                    />\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport './footer-section';\r\nimport './header-section';\r\nimport { customElement } from '@lit-html-free/core';\r\n\r\n@customElement('app-main')\r\nexport default class extends HTMLElement {\r\n    public render() {\r\n        return html`\r\n            <header-section></header-section>\r\n            <free-router name=\"main\"></free-router>\r\n            <footer-section></footer-section>\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\n\r\nimport { customElement } from '@lit-html-free/core';\r\nimport { href } from '@lit-html-free/router';\r\n\r\n@customElement('footer-section')\r\nexport default class extends HTMLElement {\r\n    public render() {\r\n        return html`\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <a href=${href('Home')} class=\"logo-font\">conduit</a>\r\n\r\n                    <span class=\"attribution\">\r\n                        An interactive learning project from\r\n                        <a href=\"https://thinkster.io\">Thinkster</a>. Code &amp; design licensed under MIT.\r\n                    </span>\r\n                </div>\r\n            </footer>\r\n        `;\r\n    }\r\n}\r\n","import { html } from 'lit-html';\r\nimport { customElement, subscribe, instance } from '@lit-html-free/core';\r\nimport { SharedState } from '../resources/state/sharedstate';\r\nimport { href } from '@lit-html-free/router';\r\n\r\n@customElement('header-section')\r\nexport default class extends HTMLElement {\r\n    public activeRoute: string;\r\n\r\n    connectedCallback() {\r\n        subscribe('routeChange', this, this.updateHeaders.bind(this));\r\n    }\r\n\r\n    updateHeaders(x: any) {\r\n        this.activeRoute = x.name;\r\n        this.render();\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <nav class=\"navbar navbar-light\">\r\n                <div class=\"container\">\r\n                    <a class=\"navbar-brand\" href=${href('Home')}>conduit</a>\r\n                    <ul class=\"nav navbar-nav pull-xs-right\">\r\n                        <li class=\"${'nav-item' + (this.activeRoute === 'home' ? ' active' : '')}\">\r\n                            <a class=\"nav-link\" href=${href('Home')}>Home</a>\r\n                        </li>\r\n\r\n                        ${instance(SharedState).isAuthenticated\r\n                            ? html`\r\n                                  <li class=\"${'nav-item' + (this.activeRoute === 'create' ? ' active' : '')}\">\r\n                                      <a class=\"nav-link\" href=${href('Editor')}> <i class=\"ion-compose\"></i>&nbsp;New Post </a>\r\n                                  </li>\r\n\r\n                                  <li class=\"${'nav-item' + (this.activeRoute === 'settings' ? ' active' : '')}\">\r\n                                      <a class=\"nav-link\" href=${href('Settings')}> <i class=\"ion-gear-a\"></i>&nbsp;Settings </a>\r\n                                  </li>\r\n                              `\r\n                            : ''}\r\n                        ${!instance(SharedState).isAuthenticated\r\n                            ? html`\r\n                                  <li class=\"${'nav-item' + (this.activeRoute === 'login' ? ' active' : '')}\">\r\n                                      <a class=\"nav-link\" href=${href('Login')}><i class=\"ion-compose\"></i>Sign in</a>\r\n                                  </li>\r\n\r\n                                  <li class=\"${'nav-item' + (this.activeRoute === 'register' ? ' active' : '')}\">\r\n                                      <a class=\"nav-link\" href=${href('Register')}><i class=\"ion-compose\"></i>Sign up</a>\r\n                                  </li>\r\n                              `\r\n                            : ''}\r\n                        ${instance(SharedState).isAuthenticated\r\n                            ? html`\r\n                                  <li class=\"${'nav-item' + (this.activeRoute === 'profile' ? ' active' : '')}\">\r\n                                      <a class=\"nav-link\" href=${href('Profile', {name:instance(SharedState).currentUser.username})}\r\n                                          >${instance(SharedState).currentUser.username}</a\r\n                                      >\r\n                                  </li>\r\n                              `\r\n                            : ''}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        `;\r\n    }\r\n}\r\n"]}