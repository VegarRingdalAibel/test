{"version":3,"sources":["/samples/realworld-sample/src/routes/profile-article-route.ts"],"names":["lit_html_1","$fsx","r","core_1","articleservice_1","default_1","HTMLElement","[object Object]","super","this","articles","currentPage","limit","articleService","instance","ArticleService","_x","params","username","name","getArticles","queryParams","offset","author","response","getList","splice","length","push","totalPages","Array","from","Math","ceil","articlesCount","_val","index","render","html","pageNumber","page","tslib_1","__decorate","customElement"],"mappings":"mGAAAA,EAAAC,KAAAC,EAAA,IACAC,EAAAF,KAAAC,EAAA,IACAE,EAAAH,KAAAC,EAAA,IACAD,KAAAC,EAAA,IAGA,IAAAG,EAAA,cAA6BC,YASzBC,cACIC,QARGC,KAAAC,SAAkB,GAGlBD,KAAAE,YAAc,EACdF,KAAAG,MAAQ,GAKXH,KAAKI,eAAiBV,EAAAW,SAASV,EAAAW,gBAG5BR,SAASS,EAAYC,GAGxB,OAFAR,KAAKS,SAAWD,EAAOE,KAEhBV,KAAKW,cAGTb,oBACH,MAAMc,EAAc,CAChBT,MAAOH,KAAKG,MACZU,OAAQb,KAAKG,OAASH,KAAKE,YAAc,GACzCY,OAAQd,KAAKS,UAGXM,QAAiBf,KAAKI,eAAeY,QAAQ,MAAOJ,GAE1DZ,KAAKC,SAASgB,OAAO,EAAGjB,KAAKC,SAASiB,QACtClB,KAAKC,SAASkB,QAAQJ,EAASd,UAG/BD,KAAKoB,WAAaC,MAAMC,KAAK,IAAID,MAAME,KAAKC,KAAKT,EAASU,cAAgBzB,KAAKG,QAAS,CAACuB,EAAMC,IAAUA,EAAQ,GACjH3B,KAAK4B,SAGF9B,SACH,OAAOP,EAAAsC;;4BAEa7B,KAAKC;8BACHD,KAAKoB;8BACLpB,KAAK8B;+BACJ9B,KAAKE;6BACN6B,IACV/B,KAAKE,YAAc6B,EACnB/B,KAAKW;;YA9CzBf,EAAAoC,EAAAC,WAAA,CADCvC,EAAAwC,cAAc","file":"02af25f51-","sourcesContent":["import { html } from 'lit-html';\r\nimport { customElement, instance } from '@lit-html-free/core';\r\nimport { ArticleService } from 'src/resources/services/articleservice';\r\nimport '../components/article-list';\r\n\r\n@customElement('profile-article-route')\r\nexport default class extends HTMLElement {\r\n    public username: any;\r\n    public articles: any[] = [];\r\n    public pageNumber: any;\r\n    public totalPages: any;\r\n    public currentPage = 1;\r\n    public limit = 10;\r\n    public articleService: ArticleService;\r\n\r\n    constructor() {\r\n        super();\r\n        this.articleService = instance(ArticleService);\r\n    }\r\n\r\n    public activate(_x: string, params: any) {\r\n        this.username = params.name;\r\n\r\n        return this.getArticles();\r\n    }\r\n\r\n    public async getArticles() {\r\n        const queryParams = {\r\n            limit: this.limit,\r\n            offset: this.limit * (this.currentPage - 1),\r\n            author: this.username\r\n        };\r\n\r\n        const response = await this.articleService.getList('all', queryParams);\r\n\r\n        this.articles.splice(0, this.articles.length);\r\n        this.articles.push(...response.articles);\r\n\r\n        // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n        this.totalPages = Array.from(new Array(Math.ceil(response.articlesCount / this.limit)), (_val, index) => index + 1);\r\n        this.render();\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <article-list\r\n                .articles=${this.articles}\r\n                .totalPages=${this.totalPages}\r\n                .pageNumber=${this.pageNumber}\r\n                .currentPage=${this.currentPage}\r\n                .setPageCb=${(page: number)=>{\r\n                    this.currentPage = page;\r\n                    this.getArticles();\r\n                }}\r\n            ></article-list>\r\n        `;\r\n    }\r\n}\r\n"]}