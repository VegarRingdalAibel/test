{"version":3,"sources":["/samples/realworld-sample/src/routes/settings-route.ts"],"names":["lit_html_1","$fsx","r","core_1","userservice_1","sharedstate_1","default_1","HTMLElement","[object Object]","super","this","errors","userService","instance","UserService","sharedState","SharedState","update","currentUser","success","render","setTimeout","e","err","Promise","resolve","k","push","map","x","canSave","passwordConfirm","password","purgeAuth","location","hash","html","error","image","target","value","username","bio","email","logout","tslib_1","__decorate","customElement"],"mappings":"mGAAAA,EAAAC,KAAAC,EAAA,IACAC,EAAAF,KAAAC,EAAA,IACAE,EAAAH,KAAAC,EAAA,IACAG,EAAAJ,KAAAC,EAAA,IAGA,IAAAI,EAAA,cAA6BC,YAQzBC,cACIC,QANGC,KAAAC,OAAgB,GAOnBD,KAAKE,YAAcT,EAAAU,SAAST,EAAAU,aAC5BJ,KAAKK,YAAcZ,EAAAU,SAASR,EAAAW,aAGzBR,eACH,UACUE,KAAKE,YAAYK,OAAOP,KAAKK,YAAYG,aAC/CR,KAAKS,QAAU,uBACfT,KAAKU,SACLC,WAAW,KACPX,KAAKS,QAAU,KACfT,KAAKU,UACN,MACL,MAAOE,GACL,MAAMC,QAAiBC,QAAQC,QAAQH,GACvC,IAAK,MAAMI,KAAKH,EAAIZ,OACZY,EAAIZ,QAAUY,EAAIZ,OAAOe,IACzBhB,KAAKC,OAAOgB,KACRJ,EAAIZ,OAAOe,GAAGE,IAAKC,GACRH,EAAI,KAAOG,KAQ1CC,cACI,OAAIpB,KAAKqB,gBACErB,KAAKK,aAAeL,KAAKK,YAAYG,aAAeR,KAAKqB,kBAAoBrB,KAAKsB,SAElFtB,KAAKK,aAAeL,KAAKK,YAAYG,YAI7CV,SACHE,KAAKE,YAAYqB,YACjBC,SAASC,KAAO,OAGb3B,SACH,OAAOR,EAAAoC;;;;;;;;kCAQmB1B,KAAKC,OAAOiB,IAAIS,GACPrC,EAAAoC;;8CAEGC;;;;;;kCAOZ3B,KAAKS;;;;;;;;;;qDAUcT,KAAKK,YAAYG,YAAYoB;qDAC5BhB,IACNZ,KAAKK,YAAYG,YAAYoB,MAAQhB,EAAEiB,OAAOC,MAC9C9B,KAAKU;;;;;;;;;;qDAWAV,KAAKK,YAAYG,YAAYuB;qDAC5BnB,IACNZ,KAAKK,YAAYG,YAAYuB,SAAWnB,EAAEiB,OAAOC,MACjD9B,KAAKU;;;;;;;;;;qDAWAV,KAAKK,YAAYG,YAAYwB;qDAC5BpB,IACNZ,KAAKK,YAAYG,YAAYwB,IAAMpB,EAAEiB,OAAOC,MAC5C9B,KAAKU;;;;;;;;;;qDAWCE,IACNZ,KAAKK,YAAYG,YAAYyB,MAAQrB,EAAEiB,OAAOC,MAC9C9B,KAAKU;;;;;;;;;;qDAWCE,IACNZ,KAAKsB,SAAWV,EAAEiB,OAAOC,MACzB9B,KAAKU;;;;;;;;;;qDAWCE,IACNZ,KAAKqB,gBAAkBT,EAAEiB,OAAOC,MAChC9B,KAAKU;;;;;;;;iDASJV,KAAKO;0DACIP,KAAKoB;;;;;;;4EAOapB,KAAKkC;;;;;;;YAtKjFtC,EAAAuC,EAAAC,WAAA,CADC3C,EAAA4C,cAAc","file":"28b546de-","sourcesContent":["import { html } from 'lit-html';\r\nimport { customElement, instance } from '@lit-html-free/core';\r\nimport { UserService } from 'src/resources/services/userservice';\r\nimport { SharedState } from 'src/resources/state/sharedstate';\r\n\r\n@customElement('settings-comp')\r\nexport default class extends HTMLElement {\r\n    public passwordConfirm: string;\r\n    public password: string;\r\n    public errors: any[] = [];\r\n    public success: string;\r\n    public userService: UserService;\r\n    public sharedState: SharedState;\r\n\r\n    constructor() {\r\n        super();\r\n        this.userService = instance(UserService);\r\n        this.sharedState = instance(SharedState);\r\n    }\r\n\r\n    public async update() {\r\n        try {\r\n            await this.userService.update(this.sharedState.currentUser);\r\n            this.success = 'Updated successfully';\r\n            this.render();\r\n            setTimeout(() => {\r\n                this.success = null;\r\n                this.render();\r\n            }, 1500);\r\n        } catch (e) {\r\n            const err: any = await Promise.resolve(e);\r\n            for (const k in err.errors) {\r\n                if (err.errors && err.errors[k]) {\r\n                    this.errors.push(\r\n                        err.errors[k].map((x: any) => {\r\n                            return k + ': ' + x;\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get canSave() {\r\n        if (this.passwordConfirm) {\r\n            return this.sharedState && this.sharedState.currentUser && this.passwordConfirm === this.password;\r\n        } else {\r\n            return this.sharedState && this.sharedState.currentUser;\r\n        }\r\n    }\r\n\r\n    public logout() {\r\n        this.userService.purgeAuth();\r\n        location.hash = 'home';\r\n    }\r\n\r\n    public render() {\r\n        return html`\r\n            <div class=\"settings-page\">\r\n                <div class=\"container page\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n                            <h1 class=\"text-xs-center\">Your Settings</h1>\r\n\r\n                            <ul class=\"error-messages\">\r\n                                ${this.errors.map(error => {\r\n                                    return html`\r\n                                        <li>\r\n                                            ${error}\r\n                                        </li>\r\n                                    `;\r\n                                })}\r\n                            </ul>\r\n\r\n                            <ul class=\"error-success\">\r\n                                ${this.success}\r\n                            </ul>\r\n\r\n                            <form>\r\n                                <fieldset>\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"URL of profile picture\"\r\n                                            .value=${this.sharedState.currentUser.image}\r\n                                            @input=${(e: any) => {\r\n                                                this.sharedState.currentUser.image = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Your Name\"\r\n                                            autocomplete=\"usename\"\r\n                                            .value=${this.sharedState.currentUser.username}\r\n                                            @input=${(e: any) => {\r\n                                                this.sharedState.currentUser.username = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <textarea\r\n                                            class=\"form-control form-control-lg\"\r\n                                            rows=\"8\"\r\n                                            placeholder=\"Short bio about you\"\r\n                                            autocomplete=\"bio\"\r\n                                            .value=${this.sharedState.currentUser.bio}\r\n                                            @input=${(e: any) => {\r\n                                                this.sharedState.currentUser.bio = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        ></textarea>\r\n                                    </fieldset>\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Email\"\r\n                                            autocomplete=\"email\"\r\n                                            @input=${(e: any) => {\r\n                                                this.sharedState.currentUser.email = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"password\"\r\n                                            autocomplete=\"current-password\"\r\n                                            placeholder=\"Password\"\r\n                                            @input=${(e: any) => {\r\n                                                this.password = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset class=\"form-group\">\r\n                                        <input\r\n                                            class=\"form-control form-control-lg\"\r\n                                            type=\"password\"\r\n                                            autocomplete=\"new-password\"\r\n                                            placeholder=\"Confirm new password\"\r\n                                            @input=${(e: any) => {\r\n                                                this.passwordConfirm = e.target.value;\r\n                                                this.render();\r\n                                            }}\r\n                                        />\r\n                                    </fieldset>\r\n\r\n                                    <!-- PS! do not use button in forms, need to improve override default -->\r\n                                    <input\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-lg btn-primary pull-xs-right\"\r\n                                        @click=${this.update}\r\n                                        .disabled.bind=${!this.canSave}\r\n                                        value=\"Update Settings\"\r\n                                    />\r\n                                </fieldset>\r\n                            </form>\r\n\r\n                            <hr />\r\n                            <button class=\"btn btn-outline-danger\" @click=${this.logout}>\r\n                                Or click here to logout.\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n"]}