{"version":3,"sources":["samples/date/fuseHmrPlugin.ts","packages/core/src/symbols.ts","packages/core/src/logger.ts","packages/core/src/prop.ts","packages/core/src/customElement.ts","packages/core/src/requestRender.ts","packages/core/src/property.ts","packages/core/src/transmitter.ts","packages/core/src/state.ts","packages/core/src/disconnectedCallback.ts","packages/core/src/attribute.ts","packages/core/src/index.ts","samples/date/elements/sample-no1.ts","samples/date/elements/sample-no2.ts","samples/date/elements/sample-default.ts","samples/date/elements/sample-no4.ts","samples/date/hmr.ts","samples/date/elements/sample-no3.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/createRouteRegex.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/getVariableName.ts","packages/router/src/isVariable.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/gotoURL.ts","packages/router/src/getUrlVars.ts","packages/router/src/getVariables.ts","packages/router/src/getRouteParams.ts","packages/router/src/index.ts","samples/date/elements/app-root.ts","packages/date/src/templates/monthHeader.ts","packages/date/src/templates/dayHeader.ts","packages/date/src/templates/weekHeader.ts","packages/date/src/templates/headerRow.ts","packages/date/src/templates/day.ts","packages/date/src/utils/getWeekNumber.ts","packages/date/src/templates/week.ts","packages/date/src/templates/dayRow.ts","packages/date/src/templates/month.ts","packages/date/src/templates/header.ts","packages/date/src/simple-html-date.ts","packages/date/src/index.ts","samples/date/index.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","log","skipElements","symbols_1","WeakMap","skip","context","map","has","count","set","ctx","get","tag","indexOf","id","getID","registerLoggerContext","text","x","Math","floor","length","idOnly","y","console","Array","join","isConnected","_class","prop","Object","defineProperty","tagName","configurable","elementName","extended","elementClass","value","prototype","isArray","concat","Base","constructor","logger_1","render","result","template","call","Promise","resolve","then","templates","lit_html_1","eventContext","updated","requestAnimationFrame","connectedCallback","register","callers","push","disconnectedCallback","forEach","attributeChangedCallback","oldValue","newValue","attribute","replace","toLowerCase","Map","nameProp","valuesChanged","customElements","define","hmrCache","__wait","options","skipRender","requestRender_1","channel","args","i","len","func","apply","setTimeout","events","filter","event","state","keys","Set","addEventListener","newState","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","HTMLElement","core_1","dateconfig","monthsToShow","monthColumns","startMonth","startYear","showWeek","isoWeek","weekHeader","monthHeader","weekStart","rowHeight","monthWidth","monthMargin","hideDimmedDates","style","display","assign","e","target","valueAsNumber","parseInt","m","checked","document","body","innerHTML","custom_elements_hmr_polyfill_1","NONE","pathPattern","openEnd","regex","pattern","index","PATH_SLASH_REGEX_1","path","substring","urlPattern","paths","split","pathsConfig","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","hash","locationhash","location","parseUrlPattern_1","regexString","createRouteRegex_1","RegExp","test","promise","htmlTemplate","part","setValue","commit","importStatement","routeMatch_1","exports","params","query","substr","urls","newUrl","val","undefined","urlparams","URLSearchParams","k","append","toString","string","vars","_m","_paths","_query","getUrlVars_1","getVariables_1","HASH_RENDER_EVENT","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","oldhash","isBackEvent","hashChange","cleanUp","handleEvent","removeEventListener","elements","element","router_1","_context","config","year","month","_year","_month","block","start","newArr","_config","rows","fill","height","row","_x","weekHeader_1","dayHeader_1","currentDate","added","selected","getTime","delete","shiftKey","lastSelected","clear","setDate","getDate","FirstDateOfMonth","Date","lastDayOfMonth","dayOfWeek","getDay","day","dimmedCell","abs","classList","dimmed","clicked","date","dowOffset","newYear","getFullYear","daynum","getTimezoneOffset","weeknum","nYear","nday","firstDayOfMonth","getWeekNumber_1","days","week_1","day_1","width","margin","monthHeaderTemplate","monthHeader_1","headerRowTemplate","headerRow_1","rowTemplates","dayRow_1","currentMonth","currentYear","monthTemplates","columns","month_1","header_1"],"mappings":"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","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\n\nexport default function (payload: HMRPayload, helper: HMRHelper) {\n    const { updates } = payload;\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\n\n    if (helper.isStylesheeetUpdate) {\n        helper.flushModules(updates);\n\n        helper.updateModules();\n\n        helper.callModules(updates);\n    } else {\n        helper.flushAll();\n        helper.updateModules();\n\n        helper.callEntries();\n    }\n}\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\r\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @customElement- decorator\r\n *\r\n */\r\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\r\n    return function reg(elementClass: any) {\r\n        const observedAttributes = elementClass.observedAttributes;\r\n        Object.defineProperty(elementClass, 'observedAttributes', {\r\n            set: function (value) {\r\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\r\n                return true;\r\n            },\r\n            get: function () {\r\n                return elementClass.prototype[getObservedAttributesSymbol()];\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\r\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\r\n                observedAttributes\r\n            );\r\n        }\r\n        // if @attribute is not used we just use the standard if any\r\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\r\n            elementClass.observedAttributes = observedAttributes;\r\n        }\r\n\r\n        const Base: any = class extends elementClass {\r\n            constructor() {\r\n                super();\r\n                logger('constructor', this, super.tagName);\r\n            }\r\n            render(...result: any[]) {\r\n                logger('render', this, super.tagName);\r\n                const template = super.render.call(this, ...result);\r\n                Promise.resolve(template).then((templates) => {\r\n                    render(templates, this as any, { eventContext: this as any });\r\n                    if (super.updated) {\r\n                        //delay so it actually get a chance to update\r\n                        requestAnimationFrame(() => {\r\n                            super.updated();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            connectedCallback() {\r\n                logger('connectedCallback', this, super.tagName);\r\n                if (super.connectedCallback) {\r\n                    super.connectedCallback.call(this);\r\n                }\r\n                this.render(this);\r\n            }\r\n\r\n            register(call: Function) {\r\n                if (this.callers) {\r\n                    this.callers.push(call);\r\n                } else {\r\n                    this.callers = [];\r\n                    this.callers.push(call);\r\n                }\r\n            }\r\n\r\n            disconnectedCallback() {\r\n                logger('disconnectedCallback', this, super.tagName);\r\n                if (this.callers) {\r\n                    this.callers.forEach((call: Function) => call());\r\n                }\r\n                this.callers = [];\r\n                if (super.disconnectedCallback) {\r\n                    super.disconnectedCallback.call(this);\r\n                }\r\n            }\r\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n                logger('attributeChangedCallback', this, super.tagName);\r\n                //get map\r\n\r\n                if (!this[getObservedAttributesMapSymbol()]) {\r\n                    const attribute = name\r\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n                        .replace(/\\s+/g, '-')\r\n                        .toLowerCase();\r\n                    this[getObservedAttributesMapSymbol()] = new Map();\r\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\r\n                }\r\n\r\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\r\n                this[nameProp] = newValue || '';\r\n                // if normal attributeChanged is set\r\n                if (super.attributeChangedCallback) {\r\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\r\n                }\r\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\r\n                if (super.valuesChanged) {\r\n                    super.valuesChanged('attribute', name, oldValue, newValue);\r\n                }\r\n            }\r\n        };\r\n        if (!customElements.get(elementName)) {\r\n            if (extended) {\r\n                customElements.define(elementName, Base, extended);\r\n            } else {\r\n                customElements.define(elementName, Base);\r\n            }\r\n        } else {\r\n            if ((globalThis as any).hmrCache) {\r\n                if (extended) {\r\n                    customElements.define(elementName, Base, extended);\r\n                } else {\r\n                    customElements.define(elementName, Base);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","import { publish } from '.';\r\n\r\nlet state = (window as any).state || {};\r\nconst keys = new Set();\r\ntype valueSetter = (value: any) => void;\r\n\r\n// helper for fusebox hmr event\r\nif (!(window as any).state) {\r\n    window.addEventListener('HMR-FUSEBOX', () => {\r\n        (window as any).state = state;\r\n        console.log('HMR-FUSEBOX', (window as any).state);\r\n    });\r\n}\r\n\r\nexport type stateResult<T> = [T, valueSetter];\r\n\r\n/**\r\n * Get current glabal state\r\n * great for saving state for next time user opens website\r\n */\r\nexport function getState() {\r\n    state;\r\n}\r\n\r\n/**\r\n * overide current state\r\n * great for restoring state time user opens website\r\n */\r\nexport function setState(newState: any) {\r\n    state = newState;\r\n}\r\n\r\n/**\r\n * simple state container\r\n * @param key key used in state container and event\r\n * @param defaultValue default state value\r\n * @param customPublishedTrigger if you do not want it to publish update event\r\n */\r\nexport function stateContainer<T>(\r\n    key: string,\r\n    defaultValue: T,\r\n    customPublishedTrigger?: boolean\r\n): stateResult<T> {\r\n    //set default value if not set\r\n    if (!state.hasOwnProperty(key)) {\r\n        state[key] = defaultValue;\r\n    }\r\n\r\n    const currentState = state[key];\r\n    const setter = function (value: T) {\r\n        state[key] = value;\r\n    };\r\n\r\n    const middleware = function (value: any) {\r\n        setter(value);\r\n        publish(key, value);\r\n    };\r\n\r\n    return [currentState, customPublishedTrigger ? setter : middleware];\r\n}\r\n\r\n/**\r\n * simple warning if you reuse a key by accident\r\n * @param key\r\n */\r\nexport function validateKey(key: string) {\r\n    if (keys.has(key)) {\r\n        throw new Error(`state key used allready, use another name`);\r\n    } else {\r\n        keys.add(key);\r\n        return key;\r\n    }\r\n}\r\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import 'tslib';\nexport { attribute } from './attribute';\nexport { prop } from './prop';\nexport { enableInternalLogger, disableInternalLogger } from './logger';\nexport { property } from './property';\nexport { customElement } from './customElement';\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\nexport { validateKey, stateContainer, stateResult } from './state';\nexport { requestRender } from './requestRender';\nexport { disconnectedCallback } from './disconnectedCallback';\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no1')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample01 `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no2')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample02 `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { IDateConfig } from '@simple-html/date/src/interfaces';\n\n@customElement('sample-default')\nexport default class extends HTMLElement {\n    dateconfig: IDateConfig = {\n        monthsToShow: 12,\n        monthColumns: 3,\n        startMonth: 0, //0-11\n        startYear: 2020,\n        showWeek: false, // not working\n        isoWeek: true, // not working\n        weekHeader: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'], // must be in js order, widget reorder them if you have other start day\n        monthHeader: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ],\n        weekStart: 1,\n        rowHeight: '20px',\n        monthWidth: '220px',\n        monthMargin: '10px',\n        hideDimmedDates: false\n    };\n\n    render() {\n        this.style.display = 'flex';\n        return html`<!-- x -->\n            <div class=\"flex flex-col\">\n                <button\n                    class=\"p-2 m-2 bg-gray-200\"\n                    @click=${() => {\n                        if (this.dateconfig.startMonth === 0) {\n                            this.dateconfig.startMonth = 11;\n                            this.dateconfig.startYear--;\n                        } else {\n                            this.dateconfig.startMonth--;\n                        }\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                        this.render();\n                    }}\n                >\n                    prev\n                </button>\n                <button\n                    class=\"p-2 m-2 bg-gray-200\"\n                    @click=${() => {\n                        if (this.dateconfig.startMonth === 11) {\n                            this.dateconfig.startMonth = 0;\n                            this.dateconfig.startYear++;\n                        } else {\n                            this.dateconfig.startMonth++;\n                        }\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                        this.render();\n                    }}\n                >\n                    next\n                </button>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >monthsToShow:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${this.dateconfig.monthsToShow}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthsToShow = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >columns:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${this.dateconfig.monthColumns}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthColumns = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >weekStart:\n                    <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"6\"\n                        .valueAsNumber=${this.dateconfig.weekStart}\n                        @input=${(e: any) => {\n                            this.dateconfig.weekStart = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >rowHeight:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${parseInt(this.dateconfig.rowHeight)}\n                        @input=${(e: any) => {\n                            this.dateconfig.rowHeight = e.target.valueAsNumber + 'px';\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >monthWidth:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${parseInt(this.dateconfig.monthWidth)}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthWidth = e.target.valueAsNumber + 'px';\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >monthMargin:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${parseInt(this.dateconfig.monthMargin)}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthMargin = e.target.valueAsNumber + 'px';\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n                <div class=\"flex\">\n                    <div class=\"p-2 m-2 bg-gray-200 flex flex-col\">\n                        ${this.dateconfig.monthHeader.map((m, i) => {\n                            console.log(m);\n                            return html`<input\n                                class=\"border\"\n                                type=\"text\"\n                                .value=${m}\n                                @change=${(e: any) => {\n                                    this.dateconfig.monthHeader[i] = e.target.value;\n\n                                    this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                                    this.render();\n                                }}\n                            />`;\n                        })}\n                    </div>\n\n                    <div class=\"p-2 m-2 bg-gray-200 flex flex-col\">\n                        ${this.dateconfig.weekHeader.map((m, i) => {\n                            console.log(m);\n                            return html`<input\n                                class=\"border\"\n                                type=\"text\"\n                                .value=${m}\n                                @change=${(e: any) => {\n                                    this.dateconfig.weekHeader[i] = e.target.value;\n\n                                    this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                                    this.render();\n                                }}\n                            />`;\n                        })}\n                    </div>\n                </div>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >show week(iso week):\n                    <input\n                        type=\"checkbox\"\n                        .checked=${this.dateconfig.showWeek}\n                        @click=${(e: any) => {\n                            this.dateconfig.showWeek = e.target.checked;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >hideDimmedDates:\n                    <input\n                        type=\"checkbox\"\n                        .checked=${this.dateconfig.hideDimmedDates}\n                        @click=${(e: any) => {\n                            this.dateconfig.hideDimmedDates = e.target.checked;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n            </div>\n            <simple-html-date style=\"margin:10px;\" .config=${this.dateconfig}></simple-html-date>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no4')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample04 `;\n    }\n}\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\n\nif (document.body) {\n    // I just want every thing to be rebuild from main element during hmr\n    document.body.innerHTML = '';\n    setTimeout(() => {\n        document.body.innerHTML = '<app-root></app-root>';\n    }, 0);\n}\n\napplyPolyfill(ReflowStrategy.NONE);\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no3')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample03 `;\n    }\n}\n","export const PATH_SLASH_REGEX = '\\\\/';\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\n","export function getVariableName(path: string) {\n    return path.substring(1, path.length);\n}\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\nimport { createRouteRegex } from './createRouteRegex';\n\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\n    if (!hash && (locationhash === '' || locationhash === '#')) {\n        return true;\n    }\n\n    if (locationhash.indexOf('?') !== -1) {\n        locationhash = locationhash.split('?')[0];\n    }\n\n    let openEnd = false;\n    if (hash[hash.length - 1] === '*') {\n        hash = hash.substring(0, hash.length - 1);\n        openEnd = true;\n    }\n    const pattern = parseUrlPattern(hash);\n    const regexString = createRouteRegex(pattern, openEnd);\n    const regex = new RegExp(regexString);\n    return regex.test(locationhash);\n};\n","import { TemplateResult, directive } from 'lit-html';\nimport { routeMatch } from './routeMatch';\n\nexport const resolvePromise = directive(\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\n        Promise.resolve(promise).then(() => {\n            part.setValue(htmlTemplate);\n            part.commit();\n        });\n    }\n);\n\nexport const routeMatchAsync = function (\n    hash = '',\n    importStatement: () => Promise<any>,\n    htmlTemplate: TemplateResult\n) {\n    if (routeMatch(hash)) {\n        return resolvePromise(importStatement(), htmlTemplate);\n    } else {\n        return '';\n    }\n};\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { customElement, requestRender } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { routeMatch } from '@simple-html/router';\n\n@customElement('app-root')\nexport default class extends HTMLElement {\n    elements = ['#default', '#sample1', '#sample2', '#sample3', '#sample4'];\n\n    render() {\n        return html`<section class=\"flex flex-row flex-grow h-full\">\n            <!-- our simple navigation  -->\n            <div class=\"bg-gray-200 flex flex-col\">\n                ${this.elements.map((element) => {\n                    return html`<a\n                       class=\"p-2 m-2 bg-indigo-300\"\n                       href=${element}\n                       @click=${() => requestRender(this)}>\n                        ${element}\n                    </button>`;\n                })}\n            </div>\n\n            <!--  our routes -->\n            ${routeMatch('#default')\n                ? html`<sample-default class=\"flex-grow\"></sample-default>`\n                : ''}\n            ${routeMatch('#sample1') ? html`<sample-no1 class=\"flex-grow\"></sample-no1>` : ''}\n            ${routeMatch('#sample2') ? html`<sample-no2 class=\"flex-grow\"></sample-no2>` : ''}\n            ${routeMatch('#sample3') ? html`<sample-no3 class=\"flex-grow\"></sample-no3>` : ''}\n            ${routeMatch('#sample4') ? html`<sample-no4 class=\"flex-grow\"></sample-no4>` : ''}\n        </section>`;\n    }\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nexport function monthHeader(\n    _context: SimpleHtmlDate,\n    config: IDateConfig,\n    year: number,\n    month: number\n) {\n    return html`<!-- function:monthHeader -->\n        <simple-html-date-month-header>\n            <span>\n                ${config.monthHeader[month]}-${year}\n            </span>\n        </simple-html-date-month-header>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nexport function dayHeader(\n    _context: SimpleHtmlDate,\n    config: IDateConfig,\n    _year: number,\n    _month: number,\n    block: number\n) {\n    let start = config.weekStart;\n    const newArr = [];\n    for (let i = 0; i < 7; i++) {\n        newArr.push(start);\n        start++;\n        if (start > 6) {\n            start = 0;\n        }\n    }\n\n    return html`<!-- function:dayHeader -->\n        <simple-html-date-day-header>\n            ${config.weekHeader[newArr[block]]}\n        </simple-html-date-day-header>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nexport function weekHeader(\n    _context: SimpleHtmlDate,\n    _config: IDateConfig,\n    _year: number,\n    _month: number\n) {\n    return html`<!-- function:weekHeader -->\n        <simple-html-date-week-header>\n            W\n        </simple-html-date-week-header>`;\n}\n","import { html } from 'lit-html';\nimport { IDateConfig } from '../interfaces';\nimport { SimpleHtmlDate } from '../simple-html-date';\nimport { weekHeader } from './weekHeader';\nimport { dayHeader } from './dayHeader';\n\nexport function headerRow(\n    context: SimpleHtmlDate,\n    config: IDateConfig,\n    year: number,\n    month: number\n) {\n    const rows = new Array(8).fill('x');\n    const height = config.rowHeight;\n\n    const row = rows.map((_x, i) => {\n        if (i === 0) {\n            if (config.showWeek) {\n                return weekHeader(context, config, year, month);\n            }\n            return '';\n        } else {\n            return dayHeader(context, config, year, month, i - 1);\n        }\n    });\n\n    return html`<!-- function:headerRow -->\n        <simple-html-date-header-row style=\"height:${height}\">\n            ${row}\n        </simple-html-date-header-row>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nfunction clicked(event: MouseEvent, ctx: SimpleHtmlDate, currentDate: Date) {\n    let added = false;\n    if (ctx.selected.has(currentDate.getTime())) {\n        added = false;\n        ctx.selected.delete(currentDate.getTime());\n    } else {\n        added = true;\n        ctx.selected.add(currentDate.getTime());\n    }\n\n    if (event.shiftKey && ctx.lastSelected) {\n        if (ctx.lastSelected < currentDate) {\n            ctx.selected.clear();\n            ctx.selected.add(ctx.lastSelected.getTime());\n            while (ctx.lastSelected < currentDate) {\n                ctx.lastSelected.setDate(ctx.lastSelected.getDate() + 1);\n                if (!ctx.selected.has(ctx.lastSelected.getTime())) {\n                    ctx.selected.add(ctx.lastSelected.getTime());\n                }\n            }\n        }\n\n        if (ctx.lastSelected > currentDate) {\n            ctx.selected.clear();\n            ctx.selected.add(ctx.lastSelected.getTime());\n            while (ctx.lastSelected > currentDate) {\n                ctx.lastSelected.setDate(ctx.lastSelected.getDate() - 1);\n                if (!ctx.selected.has(ctx.lastSelected.getTime())) {\n                    ctx.selected.add(ctx.lastSelected.getTime());\n                }\n            }\n        }\n    }\n\n    if (added) {\n        ctx.lastSelected = currentDate;\n    } else {\n        ctx.lastSelected = null;\n    }\n}\n\nexport function day(\n    context: SimpleHtmlDate,\n    config: IDateConfig,\n    year: number,\n    month: number,\n    block: number\n) {\n    const FirstDateOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\n    let dayOfWeek = FirstDateOfMonth.getDay() - config.weekStart;\n    if (dayOfWeek < 0) {\n        // if less than 0, we need to push it out 1 week. so we always show entire month\n        dayOfWeek = dayOfWeek + 7;\n    }\n\n    let day = block - dayOfWeek;\n\n    let dimmedCell = false;\n    // if more then last day of month\n    if (day > lastDayOfMonth.getDate()) {\n        day = day - lastDayOfMonth.getDate();\n        dimmedCell = true;\n        if (month === 11) {\n            month = 0;\n            year++;\n        } else {\n            month++;\n        }\n    }\n\n    // if less that first we need to count downwards\n    if (day < 1) {\n        FirstDateOfMonth.setDate(FirstDateOfMonth.getDate() - Math.abs(day) - config.weekStart);\n        day = FirstDateOfMonth.getDate();\n        dimmedCell = true;\n        if (month === 0) {\n            month = 11;\n            year--;\n        } else {\n            month--;\n        }\n    }\n\n    const classList = [];\n\n    if (dimmedCell) {\n        classList.push('simple-html-date-day-dimmed');\n    }\n\n    const currentDate = new Date(year, month, day);\n    this.dimmed = dimmedCell;\n    if (context.selected.has(currentDate.getTime()) && !dimmedCell) {\n        classList.push('simple-html-date-day-selected');\n    }\n\n    if (config.hideDimmedDates && dimmedCell) {\n        day = '' as any;\n        classList.push('simple-html-date-day-hidden');\n    }\n\n    return html`<!-- function:day -->\n        <simple-html-date-day\n            class=${classList.join(' ')}\n            @click=${(e: MouseEvent) => {\n                clicked(e, context, currentDate);\n                context.render();\n            }}\n        >\n            ${day}\n        </simple-html-date-day>`;\n}\n","export function getWeekNumbers(date: Date, isoWeek: boolean) {\n    /*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.epoch-calendar.com */\n\n    const dowOffset = isoWeek ? 1 : 0;\n    const newYear = new Date(date.getFullYear(), 0, 1);\n    let day = newYear.getDay() - dowOffset; //the day of week the year begins on\n    day = day >= 0 ? day : day + 7;\n    const daynum =\n        Math.floor(\n            (date.getTime() -\n                newYear.getTime() -\n                (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) /\n                86400000\n        ) + 1;\n    let weeknum;\n    //if the year starts before the middle of a week\n    if (day < 4) {\n        weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n        if (weeknum > 52) {\n            const nYear = new Date(date.getFullYear() + 1, 0, 1);\n            let nday = nYear.getDay() - dowOffset;\n            nday = nday >= 0 ? nday : nday + 7;\n            /*if the next year starts before the middle of\n                   the week, it is week #1 of that year*/\n            weeknum = nday < 4 ? 1 : 53;\n        }\n    } else {\n        weeknum = Math.floor((daynum + day - 1) / 7);\n    }\n    return weeknum;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\nimport { getWeekNumbers } from '../utils/getWeekNumber';\n\nexport function week(\n    _context: SimpleHtmlDate,\n    config: IDateConfig,\n    year: number,\n    month: number,\n    block: number\n) {\n    const firstDayOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\n\n    let dayOfWeek = firstDayOfMonth.getDay() - (config.isoWeek ? 1 : 0); // we only want monday or sunday\n    if (dayOfWeek < 0) {\n        // if less than 0, we need to push it out 1 week. so we always show entire month\n        dayOfWeek = dayOfWeek + 7;\n    }\n\n    let day = block - dayOfWeek + 1;\n\n    // if more then last day of month\n    if (day > lastDayOfMonth.getDate()) {\n        day = day - lastDayOfMonth.getDate();\n        if (month === 11) {\n            month = 0;\n            year++;\n        } else {\n            month++;\n        }\n    }\n\n    // if less that first we need to count downwards\n    if (day < 1) {\n        firstDayOfMonth.setDate(firstDayOfMonth.getDate() - Math.abs(day) - config.weekStart);\n        day = firstDayOfMonth.getDate();\n        if (month === 0) {\n            month = 11;\n            year--;\n        } else {\n            month--;\n        }\n    }\n\n    return html`<!-- function:week -->\n        <simple-html-date-week>\n            ${getWeekNumbers(new Date(year, month, day), config.isoWeek)}\n        </simple-html-date-week>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\nimport { day } from './day';\nimport { week } from './week';\n\nexport function dayRow(\n    context: SimpleHtmlDate,\n    config: IDateConfig,\n    year: number,\n    month: number,\n    row: number\n) {\n    const rows = new Array(8).fill('x');\n    const height = config.rowHeight;\n\n    const days = rows.map((_x, i) => {\n        if (i === 0) {\n            if (config.showWeek) {\n                return week(context, config, year, month, i + row * 7);\n            }\n            return '';\n        } else {\n            return day(context, config, year, month, i + row * 7);\n        }\n    });\n\n    return html`<!-- function:dayRow -->\n        <simple-html-date-day-row style=\"height:${height}\">\n            ${days}\n        </simple-html-date-day-row>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { monthHeader } from './monthHeader';\nimport { headerRow } from './headerRow';\nimport { dayRow } from './dayRow';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nexport function month(context: SimpleHtmlDate, config: IDateConfig, year: number, month: number) {\n    const width = config.monthWidth;\n    const margin = config.monthMargin;\n\n    const monthHeaderTemplate = monthHeader(context, config, year, month);\n    const headerRowTemplate = headerRow(context, config, year, month);\n\n    const rows = new Array(6).fill('x');\n    const rowTemplates = rows.map((_x, i) => {\n        return dayRow(context, config, year, month, i);\n    });\n\n    return html`<!-- function: month -->\n\n        <simple-html-date-month style=\"width:${width};margin:${margin};\">\n            ${monthHeaderTemplate} ${headerRowTemplate} ${rowTemplates}\n        </simple-html-date-month>`;\n}\n","import { IDateConfig } from '../interfaces';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\nexport function header(_context: SimpleHtmlDate, _config: IDateConfig) {\n    return html`<!-- function:header -->\n        <simple-html-date-header>\n            todo\n        </simple-html-date-header>`;\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { IDateConfig } from './interfaces';\nimport { month } from './templates/month';\nimport { header } from './templates/header';\n\n@customElement('simple-html-date')\nexport class SimpleHtmlDate extends HTMLElement {\n    selected = new Set();\n    lastSelected: Date = null;\n    @property() config: IDateConfig;\n\n    render() {\n        let currentMonth = this.config.startMonth;\n        let currentYear = this.config.startYear;\n        const monthTemplates = [];\n\n        let i = 0;\n        while (i < this.config.monthsToShow) {\n            const columns = [];\n            for (let y = 0; y < this.config.monthColumns; y++) {\n                // add to i so we dont get to many\n                i++;\n                if (i <= this.config.monthsToShow) {\n                    const template = month(this, this.config, currentYear, currentMonth);\n\n                    // push up month\n                    if (currentMonth === 11) {\n                        currentMonth = 0;\n                        currentYear++;\n                    } else {\n                        currentMonth++;\n                    }\n                    columns.push(template);\n                }\n            }\n            monthTemplates.push(html`<!-- month column -->\n                <div class=\"simple-html-date-col\">\n                    ${columns.map((x) => x)}\n                </div>`);\n        }\n\n        return html`<!-- -->\n\n            <!-- main header for entire calender -->\n            ${header(this, this.config)}\n\n            <!-- create a block for each month -->\n            ${monthTemplates.map((x) => {\n                return x;\n            })} `;\n    }\n}\n","import './simple-html-date.css';\nimport './simple-html-date';\n","import './hmr';\nimport './index.css';\n\nimport { enableInternalLogger } from '@simple-html/core';\nenableInternalLogger([\n    'SIMPLE-HTML-DATE-WEEK',\n    'SIMPLE-HTML-DATE-DAY',\n    'SIMPLE-HTML-DATE-DAY-HEADER',\n    'SIMPLE-HTML-DATE-WEEK-HEADER',\n    'SIMPLE-HTML-DATE-MONTH-HEADER',\n    'SIMPLE-HTML-DATE-DAY-ROW',\n    'SIMPLE-HTML-DATE-HEADER-ROW',\n    'SIMPLE-HTML-DATE-MONTH',\n    'SIMPLE-HTML-DATE-HEADER'\n]);\n\n// add our sample parts\nimport './elements/app-root';\nimport './elements/sample-default';\nimport './elements/sample-no1';\nimport './elements/sample-no2';\nimport './elements/sample-no3';\nimport './elements/sample-no4';\n\n// add our your widget ?\nimport '@simple-html/date';\n"]}