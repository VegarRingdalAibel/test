{"version":3,"sources":["samples/date/fuseHmrPlugin.ts","packages/core/src/symbols.ts","packages/core/src/prop.ts","packages/core/src/logger.ts","packages/core/src/requestRender.ts","packages/core/src/property.ts","packages/core/src/customElement.ts","packages/core/src/state.ts","packages/core/src/transmitter.ts","packages/core/src/disconnectedCallback.ts","packages/core/src/attribute.ts","packages/core/src/index.ts","samples/date/elements/sample-no1.ts","samples/date/elements/sample-default.ts","samples/date/elements/sample-no3.ts","samples/date/elements/sample-no2.ts","samples/date/elements/sample-no4.ts","samples/date/hmr.ts","packages/date/src/monthElements/simple-html-date-header.ts","packages/date/src/simple-html-date-input.ts","packages/date/src/monthElements/simple-html-date-month.ts","packages/date/src/monthElements/simple-html-date-month-header.ts","packages/date/src/monthElements/simple-html-date-header-row.ts","packages/date/src/monthElements/simple-html-date-week-header.ts","packages/date/src/monthElements/simple-html-date-day-header.ts","packages/date/src/monthElements/simple-html-date-day-row.ts","packages/date/src/monthElements/simple-html-date-week.ts","packages/date/src/monthElements/simple-html-date-day.ts","packages/date/src/simple-html-date.ts","packages/date/src/index.ts","packages/router/src/gotoURL.ts","packages/router/src/PATH_SLASH_REGEX.ts","packages/router/src/createRouteRegex.ts","packages/router/src/getVariableName.ts","packages/router/src/PATH_ARGUMENT_REGEX.ts","packages/router/src/isVariable.ts","packages/router/src/parseUrlPattern.ts","packages/router/src/routeMatch.ts","packages/router/src/routeMatchAsync.ts","packages/router/src/getUrlVars.ts","packages/router/src/getVariables.ts","packages/router/src/getRouteParams.ts","packages/router/src/index.ts","samples/date/elements/app-root.ts","samples/date/index.ts"],"names":["payload","helper","updates","window","dispatchEvent","CustomEvent","isStylesheeetUpdate","flushModules","updateModules","callModules","flushAll","callEntries","globalThis","_LHF_SYMBOL","_LHF_PROP_SYMBOL","observedAttributesMap","Symbol","observedAttributes","name","logger","loggerCount","transmitter","initSymbolCache","_class","prop","Object","defineProperty","get","symbols_1","tagName","set","x","configurable","log","skipElements","WeakMap","skip","context","map","has","count","ctx","tag","indexOf","id","getID","registerLoggerContext","text","Math","floor","length","idOnly","y","console","Array","join","isConnected","__wait","requestAnimationFrame","Promise","resolve","render","options","logger_1","oldValue","valuesChanged","skipRender","requestRender_1","elementName","extended","elementClass","value","prototype","isArray","concat","Base","constructor","result","template","call","then","templates","lit_html_1","eventContext","updated","connectedCallback","register","callers","push","disconnectedCallback","forEach","attributeChangedCallback","newValue","attribute","replace","toLowerCase","Map","nameProp","customElements","define","hmrCache","state","keys","Set","addEventListener","newState","key","defaultValue","customPublishedTrigger","hasOwnProperty","currentState","setter","middleware","a__1","Error","add","channel","args","i","len","func","apply","setTimeout","events","filter","event","HTMLElement","core_1","dateconfig","monthsToShow","monthColumns","startMonth","startYear","showWeek","isoWeek","weekHeader","monthHeader","weekStart","rowHeight","monthWidth","monthMargin","hideDimmedDates","style","display","assign","e","target","valueAsNumber","parseInt","checked","document","body","innerHTML","custom_elements_hmr_polyfill_1","NONE","HTMLInputElement","getAttribute","setAttribute","extends","ref","removeEventListener","handleEvent","type","width","config","margin","rows","fill","month","year","_x","height","getDayHeaders","blockDay","start","newArr","row","getWeek","date","dowOffset","newYear","Date","getFullYear","day","getDay","daynum","getTime","getTimezoneOffset","weeknum","nYear","nday","FirstDateOfMonth","lastDayOfMonth","dayOfWeek","monthBlock","getDate","setDate","abs","selected","lastSelected","added","currentDate","delete","shiftKey","clear","triggerEvent","dimmedCell","classList","contains","remove","dimmed","eventName","data","bubbles","detail","months","columns","path","params","query","substr","urls","split","newUrl","val","undefined","urlparams","URLSearchParams","k","append","location","hash","toString","pathPattern","openEnd","regex","pattern","index","PATH_SLASH_REGEX_1","substring","urlPattern","paths","pathsConfig","staticType","isVariable_1","variable","getVariableName_1","PATH_ARGUMENT_REGEX_1","locationhash","parseUrlPattern_1","regexString","createRouteRegex_1","RegExp","test","promise","htmlTemplate","part","setValue","commit","importStatement","routeMatch_1","exports","string","vars","_m","_paths","_query","getUrlVars_1","getVariables_1","HASH_RENDER_EVENT","CAN_DEACTIVATE_EVENT","canDeactivate","publishCanDeactivateEvent","oldhash","isBackEvent","hashChange","cleanUp","elements","element","router_1"],"mappings":"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","file":"","sourcesContent":["import { HMRHelper, HMRPayload } from 'fuse-box/types/hmr';\n\nexport default function (payload: HMRPayload, helper: HMRHelper) {\n    const { updates } = payload;\n    window.dispatchEvent(new CustomEvent('HMR-FUSEBOX'));\n\n    if (helper.isStylesheeetUpdate) {\n        helper.flushModules(updates);\n\n        helper.updateModules();\n\n        helper.callModules(updates);\n    } else {\n        helper.flushAll();\n        helper.updateModules();\n\n        helper.callEntries();\n    }\n}\n","export function initSymbolCache() {\r\n    if (!(globalThis as any)._LHF_SYMBOL) {\r\n        (globalThis as any)._LHF_SYMBOL = {};\r\n        (globalThis as any)._LHF_PROP_SYMBOL = {};\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesMapSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributesMap) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributesMap = Symbol('observedAttributesMap');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributesMap;\r\n    }\r\n}\r\n\r\nexport function getObservedAttributesSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.observedAttributes) {\r\n        (globalThis as any)._LHF_SYMBOL.observedAttributes = Symbol('observedAttributes');\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.observedAttributes;\r\n    }\r\n}\r\n\r\nexport function getPropSymbol(name: string) {\r\n    if (!(globalThis as any)._LHF_PROP_SYMBOL[name]) {\r\n        (globalThis as any)._LHF_PROP_SYMBOL[name] = Symbol(name);\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    } else {\r\n        return (globalThis as any)._LHF_PROP_SYMBOL[name];\r\n    }\r\n}\r\n\r\nexport function getLoggerSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.logger) {\r\n        (globalThis as any)._LHF_SYMBOL.logger = Symbol('logger');\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.logger;\r\n    }\r\n}\r\n\r\nexport function getLoggerCountSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.loggerCount) {\r\n        (globalThis as any)._LHF_SYMBOL.loggerCount = Symbol('loggerCount');\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.loggerCount;\r\n    }\r\n}\r\n\r\nexport function getTransmitterSymbol() {\r\n    if (!(globalThis as any)._LHF_SYMBOL.transmitter) {\r\n        (globalThis as any)._LHF_SYMBOL.transmitter = Symbol('transmitter');\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    } else {\r\n        return (globalThis as any)._LHF_SYMBOL.transmitter;\r\n    }\r\n}\r\n\r\ninitSymbolCache();\r\n","import { getPropSymbol } from './symbols';\r\n\r\n/**\r\n * @property prop\r\n * TODO combine this to cover property and attribute decorators\r\n *\r\n *\r\n */\r\nexport function prop(): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                return true;\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { getLoggerSymbol, getLoggerCountSymbol } from './symbols';\r\n\r\n// maybe weird, but I need it to check everything is behaving correctly during render and hmr\r\n// but this will give\r\n\r\nlet log = false;\r\nlet skipElements: string[] = [];\r\n\r\nif (!(globalThis as any)[getLoggerSymbol()]) {\r\n    (globalThis as any)[getLoggerSymbol()] = new WeakMap();\r\n    (globalThis as any)[getLoggerCountSymbol()] = 0;\r\n}\r\n\r\nexport function enableInternalLogger(skip: string[] = []) {\r\n    skipElements = skip;\r\n    log = true;\r\n}\r\n\r\nexport function disableInternalLogger() {\r\n    log = false;\r\n}\r\n\r\nfunction registerLoggerContext(context: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        if (map.has(context)) {\r\n            throw 'contxt duplicate';\r\n        }\r\n\r\n        const count = (globalThis as any)[getLoggerCountSymbol()] + 1;\r\n        (globalThis as any)[getLoggerCountSymbol()] = count;\r\n\r\n        map.set(context, count);\r\n    }\r\n}\r\n\r\nfunction getID(ctx: any) {\r\n    if (log) {\r\n        const map = (globalThis as any)[getLoggerSymbol()];\r\n        return map.get(ctx);\r\n    }\r\n}\r\n\r\nexport function logger(name: string, ctx: any, tag: string) {\r\n    if (log && skipElements.indexOf(tag) === -1) {\r\n        let id = getID(ctx);\r\n        if (!id) {\r\n            registerLoggerContext(ctx);\r\n        }\r\n        id = getID(ctx);\r\n\r\n        // some weird parths, but want it to stay as a table\r\n\r\n        // find text length\r\n        const text = name || '??' + '' + (id || '?');\r\n        const x = 25 - Math.floor(text.length);\r\n\r\n        // find id length\r\n        const idOnly = '' + (id || '?');\r\n        const y = 6 - Math.floor(idOnly.length);\r\n\r\n        // show it\r\n        console.log(\r\n            `@SIMPLE-HTML/core | ${name}${Array(x).join(' ')}| id:${id || '?'}${Array(y).join(\r\n                ' '\r\n            )} | IsConnected:${ctx && ctx.isConnected === true ? 'Y' : 'N'} |  ${tag}`\r\n        );\r\n    }\r\n}\r\n","// simple helper to delay re-render\r\nexport function requestRender(ctx: any) {\r\n    if (ctx.isConnected) {\r\n        if (ctx.__wait) {\r\n        } else {\r\n            ctx.__wait = true;\r\n            requestAnimationFrame(async () => {\r\n                await Promise.resolve(true);\r\n                ctx.render();\r\n                ctx.__wait = false;\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport { getPropSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @property decorator\r\n *\r\n */\r\nexport function property(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: Function, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('property set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n    };\r\n}\r\n","import { render } from 'lit-html';\r\nimport { getObservedAttributesSymbol, getObservedAttributesMapSymbol } from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @customElement- decorator\r\n *\r\n */\r\nexport function customElement(elementName: string, extended?: ElementDefinitionOptions) {\r\n    return function reg(elementClass: any) {\r\n        const observedAttributes = elementClass.observedAttributes;\r\n        Object.defineProperty(elementClass, 'observedAttributes', {\r\n            set: function (value) {\r\n                elementClass.prototype[getObservedAttributesSymbol()] = value;\r\n                return true;\r\n            },\r\n            get: function () {\r\n                return elementClass.prototype[getObservedAttributesSymbol()];\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        if (Array.isArray(observedAttributes) && Array.isArray(elementClass.observedAttributes)) {\r\n            elementClass.observedAttributes = elementClass.observedAttributes.concat(\r\n                observedAttributes\r\n            );\r\n        }\r\n        // if @attribute is not used we just use the standard if any\r\n        if (Array.isArray(observedAttributes) && !Array.isArray(elementClass.observedAttributes)) {\r\n            elementClass.observedAttributes = observedAttributes;\r\n        }\r\n\r\n        const Base: any = class extends elementClass {\r\n            constructor() {\r\n                super();\r\n                logger('constructor', this, super.tagName);\r\n            }\r\n            render(...result: any[]) {\r\n                logger('render', this, super.tagName);\r\n                const template = super.render.call(this, ...result);\r\n                Promise.resolve(template).then((templates) => {\r\n                    render(templates, this as any, { eventContext: this as any });\r\n                    if (super.updated) {\r\n                        //delay so it actually get a chance to update\r\n                        requestAnimationFrame(() => {\r\n                            super.updated();\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            connectedCallback() {\r\n                logger('connectedCallback', this, super.tagName);\r\n                if (super.connectedCallback) {\r\n                    super.connectedCallback.call(this);\r\n                }\r\n                this.render(this);\r\n            }\r\n\r\n            register(call: Function) {\r\n                if (this.callers) {\r\n                    this.callers.push(call);\r\n                } else {\r\n                    this.callers = [];\r\n                    this.callers.push(call);\r\n                }\r\n            }\r\n\r\n            disconnectedCallback() {\r\n                logger('disconnectedCallback', this, super.tagName);\r\n                if (this.callers) {\r\n                    this.callers.forEach((call: Function) => call());\r\n                }\r\n                this.callers = [];\r\n                if (super.disconnectedCallback) {\r\n                    super.disconnectedCallback.call(this);\r\n                }\r\n            }\r\n            attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n                logger('attributeChangedCallback', this, super.tagName);\r\n                //get map\r\n\r\n                if (!this[getObservedAttributesMapSymbol()]) {\r\n                    const attribute = name\r\n                        .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n                        .replace(/\\s+/g, '-')\r\n                        .toLowerCase();\r\n                    this[getObservedAttributesMapSymbol()] = new Map();\r\n                    this[getObservedAttributesMapSymbol()].set(attribute, name);\r\n                }\r\n\r\n                const nameProp = this[getObservedAttributesMapSymbol()].get(name);\r\n                this[nameProp] = newValue || '';\r\n                // if normal attributeChanged is set\r\n                if (super.attributeChangedCallback) {\r\n                    super.attributeChangedCallback.call(this, name, oldValue, newValue);\r\n                }\r\n                //if our simpler method is set (this is used by the @attribute and @property decorators)\r\n                if (super.valuesChanged) {\r\n                    super.valuesChanged('attribute', name, oldValue, newValue);\r\n                }\r\n            }\r\n        };\r\n        if (!customElements.get(elementName)) {\r\n            if (extended) {\r\n                customElements.define(elementName, Base, extended);\r\n            } else {\r\n                customElements.define(elementName, Base);\r\n            }\r\n        } else {\r\n            if ((globalThis as any).hmrCache) {\r\n                if (extended) {\r\n                    customElements.define(elementName, Base, extended);\r\n                } else {\r\n                    customElements.define(elementName, Base);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","import { publish } from '.';\r\n\r\nlet state = (window as any).state || {};\r\nconst keys = new Set();\r\ntype valueSetter = (value: any) => void;\r\n\r\n// helper for fusebox hmr event\r\nif (!(window as any).state) {\r\n    window.addEventListener('HMR-FUSEBOX', () => {\r\n        (window as any).state = state;\r\n        console.log('HMR-FUSEBOX', (window as any).state);\r\n    });\r\n}\r\n\r\nexport type stateResult<T> = [T, valueSetter];\r\n\r\n/**\r\n * Get current glabal state\r\n * great for saving state for next time user opens website\r\n */\r\nexport function getState() {\r\n    state;\r\n}\r\n\r\n/**\r\n * overide current state\r\n * great for restoring state time user opens website\r\n */\r\nexport function setState(newState: any) {\r\n    state = newState;\r\n}\r\n\r\n/**\r\n * simple state container\r\n * @param key key used in state container and event\r\n * @param defaultValue default state value\r\n * @param customPublishedTrigger if you do not want it to publish update event\r\n */\r\nexport function stateContainer<T>(\r\n    key: string,\r\n    defaultValue: T,\r\n    customPublishedTrigger?: boolean\r\n): stateResult<T> {\r\n    //set default value if not set\r\n    if (!state.hasOwnProperty(key)) {\r\n        state[key] = defaultValue;\r\n    }\r\n\r\n    const currentState = state[key];\r\n    const setter = function (value: T) {\r\n        state[key] = value;\r\n    };\r\n\r\n    const middleware = function (value: any) {\r\n        setter(value);\r\n        publish(key, value);\r\n    };\r\n\r\n    return [currentState, customPublishedTrigger ? setter : middleware];\r\n}\r\n\r\n/**\r\n * simple warning if you reuse a key by accident\r\n * @param key\r\n */\r\nexport function validateKey(key: string) {\r\n    if (keys.has(key)) {\r\n        throw new Error(`state key used allready, use another name`);\r\n    } else {\r\n        keys.add(key);\r\n        return key;\r\n    }\r\n}\r\n","import { getTransmitterSymbol } from './symbols';\r\n\r\n// we need this to survive hmr so parts can unsubsribe\r\nif (!(globalThis as any)[getTransmitterSymbol()]) {\r\n    (globalThis as any)[getTransmitterSymbol()] = {};\r\n}\r\n\r\nfunction transmitter() {\r\n    return (globalThis as any)[getTransmitterSymbol()];\r\n}\r\n\r\n// microtask\r\nexport function publish(channel: string, ...args: any[]): void {\r\n    Promise.resolve().then(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// sync\r\nexport function publishSync(channel: string, ...args: any[]): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n            const ctx = transmitter()[channel][i].ctx;\r\n            transmitter()[channel][i].func.apply(ctx, args);\r\n        }\r\n    }\r\n}\r\n\r\n//next task\r\nexport function publishNext(channel: string, ...args: any[]): void {\r\n    setTimeout(() => {\r\n        if (Array.isArray(transmitter()[channel])) {\r\n            for (let i = 0, len = transmitter()[channel].length; i < len; i++) {\r\n                const ctx = transmitter()[channel][i].ctx;\r\n                transmitter()[channel][i].func.apply(ctx, args);\r\n            }\r\n        }\r\n    }, 0);\r\n}\r\n\r\n// sync\r\nexport function unSubscribe(channel: string, ctx: any): void {\r\n    if (Array.isArray(transmitter()[channel])) {\r\n        const events = transmitter()[channel].filter((event: any) => {\r\n            if (event.ctx !== ctx) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        transmitter()[channel] = events;\r\n    }\r\n}\r\n\r\n// sync\r\nexport function subscribe(channel: string, ctx: any, func: Function): void {\r\n    if (!Array.isArray(transmitter()[channel])) {\r\n        transmitter()[channel] = [];\r\n    }\r\n    transmitter()[channel].push({ ctx: ctx, func: func });\r\n}\r\n","/**\r\n * Calls function when element disconnects\r\n * @param ctx SimpleHtml element only\r\n * @param call\r\n */\r\nexport function disconnectedCallback(ctx: HTMLElement, call: Function) {\r\n    (ctx as any).register(call);\r\n}\r\n","import { requestRender } from './requestRender';\r\nimport {\r\n    getObservedAttributesMapSymbol,\r\n    getObservedAttributesSymbol,\r\n    getPropSymbol\r\n} from './symbols';\r\nimport { logger } from './logger';\r\n\r\n/**\r\n * @attibute- decorator\r\n * simple decorator for tracking custom element attribute changes\r\n * PS! do not set value manually, does not do anything\r\n */\r\nexport function attribute(options: { skipRender: boolean } = {} as any): Function {\r\n    return function reg(_class: any, prop: string): void {\r\n        Object.defineProperty(_class, prop, {\r\n            get: function () {\r\n                return this[getPropSymbol(this.tagName + '_' + prop)];\r\n            },\r\n            set: function (x: any) {\r\n                logger('attribute set', this, this.tagName);\r\n\r\n                const oldValue = this[getPropSymbol(this.tagName + '_' + prop)];\r\n                this[getPropSymbol(this.tagName + '_' + prop)] = x;\r\n                if (this.valuesChanged && oldValue !== x) {\r\n                    this.valuesChanged('property', prop, oldValue, x);\r\n                }\r\n                if (oldValue !== x && !options.skipRender) {\r\n                    requestRender(this);\r\n                }\r\n            },\r\n            configurable: true\r\n        });\r\n\r\n        // replace uppercase with lower and add '-'\r\n        const attribute = prop\r\n            .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n            .replace(/\\s+/g, '-')\r\n            .toLowerCase();\r\n\r\n        //create a map so we can find it later\r\n        if (!_class[getObservedAttributesMapSymbol()]) {\r\n            _class[getObservedAttributesMapSymbol()] = new Map();\r\n        }\r\n        _class[getObservedAttributesMapSymbol()].set(attribute, prop);\r\n\r\n        // add to observedAttributes\r\n        if (_class[getObservedAttributesSymbol()]) {\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        } else {\r\n            _class[getObservedAttributesSymbol()] = [];\r\n            _class[getObservedAttributesSymbol()].push(attribute);\r\n        }\r\n    };\r\n}\r\n","import 'tslib';\nexport { attribute } from './attribute';\nexport { prop } from './prop';\nexport { enableInternalLogger, disableInternalLogger } from './logger';\nexport { property } from './property';\nexport { customElement } from './customElement';\nexport { publish, subscribe, unSubscribe, publishNext, publishSync } from './transmitter';\nexport { validateKey, stateContainer, stateResult } from './state';\nexport { requestRender } from './requestRender';\nexport { disconnectedCallback } from './disconnectedCallback';\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no1')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample01 `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { IDateConfig } from '@simple-html/date/src/interfaces';\n\n@customElement('sample-default')\nexport default class extends HTMLElement {\n    dateconfig: IDateConfig = {\n        monthsToShow: 12,\n        monthColumns: 3,\n        startMonth: 0, //0-11\n        startYear: 2020,\n        showWeek: false, // not working\n        isoWeek: true, // not working\n        weekHeader: ['Sun', 'Mon', 'Tue', 'Wen', 'Thr', 'Fri', 'Sat'], // must be in js order, widget reorder them if you have other start day\n        monthHeader: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ],\n        weekStart: 1,\n        rowHeight: '25px',\n        monthWidth: '280px',\n        monthMargin: '10px',\n        hideDimmedDates: false\n    };\n\n    render() {\n        this.style.display = 'flex';\n        return html`<!-- x -->\n            <div class=\"flex flex-col\">\n                <button\n                    class=\"p-2 m-2 bg-gray-200\"\n                    @click=${() => {\n                        if (this.dateconfig.startMonth === 0) {\n                            this.dateconfig.startMonth = 11;\n                            this.dateconfig.startYear--;\n                        } else {\n                            this.dateconfig.startMonth--;\n                        }\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                        this.render();\n                    }}\n                >\n                    prev\n                </button>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >monthsToShow:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${this.dateconfig.monthsToShow}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthsToShow = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >columns:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${this.dateconfig.monthColumns}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthColumns = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >weekStart:\n                    <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"6\"\n                        .valueAsNumber=${this.dateconfig.weekStart}\n                        @input=${(e: any) => {\n                            this.dateconfig.weekStart = e.target.valueAsNumber;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >rowHeight:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${parseInt(this.dateconfig.rowHeight)}\n                        @input=${(e: any) => {\n                            this.dateconfig.rowHeight = e.target.valueAsNumber + 'px';\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >monthWidth:\n                    <input\n                        type=\"number\"\n                        .valueAsNumber=${parseInt(this.dateconfig.monthWidth)}\n                        @input=${(e: any) => {\n                            this.dateconfig.monthWidth = e.target.valueAsNumber + 'px';\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >show week(iso week):\n                    <input\n                        type=\"checkbox\"\n                        .checked=${this.dateconfig.showWeek}\n                        @click=${(e: any) => {\n                            this.dateconfig.showWeek = e.target.checked;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <label class=\"p-2 m-2 bg-gray-200\"\n                    >hideDimmedDates:\n                    <input\n                        type=\"checkbox\"\n                        .checked=${this.dateconfig.hideDimmedDates}\n                        @click=${(e: any) => {\n                            this.dateconfig.hideDimmedDates = e.target.checked;\n\n                            this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                            this.render();\n                        }}\n                /></label>\n\n                <button\n                    class=\"p-2 m-2 bg-gray-200\"\n                    @click=${() => {\n                        if (this.dateconfig.startMonth === 11) {\n                            this.dateconfig.startMonth = 0;\n                            this.dateconfig.startYear++;\n                        } else {\n                            this.dateconfig.startMonth++;\n                        }\n                        this.dateconfig = Object.assign({}, this.dateconfig); //reassign so lit-html knows its a new value... will add methods for this..\n                        this.render();\n                    }}\n                >\n                    next\n                </button>\n            </div>\n            <simple-html-date style=\"margin:10px;\" .config=${this.dateconfig}></simple-html-date>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no3')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample03 `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no2')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample02 `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('sample-no4')\nexport default class extends HTMLElement {\n    render() {\n        return html` sample04 `;\n    }\n}\n","import { applyPolyfill, ReflowStrategy } from 'custom-elements-hmr-polyfill';\n\nif (document.body) {\n    // I just want every thing to be rebuild from main element during hmr\n    document.body.innerHTML = '';\n    setTimeout(() => {\n        document.body.innerHTML = '<app-root></app-root>';\n    }, 0);\n}\n\napplyPolyfill(ReflowStrategy.NONE);\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-header')\nexport default class extends HTMLElement {\n    ref: SimpleHtmlDate;\n\n    render() {\n        return html``;\n    }\n}\n","import { customElement } from '@simple-html/core';\n\n/**\n * this will handle usage as normal datepicker when used with input\n * do we also want to add as normal htmlElement too ?\n */\n@customElement('simple-html-date-input', { extends: 'input' })\nexport class SimpleHtmlDateExtended extends HTMLInputElement {\n    connectedCallback() {\n        if (this.isConnected) {\n            if (this.getAttribute('type') !== 'text') {\n                this.setAttribute('type', 'text');\n            }\n        }\n        this.value = 'test';\n    }\n\n    render() {\n        /**nothing */\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-month')\nexport default class extends HTMLElement {\n    ref: SimpleHtmlDate;\n    @property() month: number;\n    @property() year: number;\n\n    connectedCallback() {\n        this.ref.addEventListener('update', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('update', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'update') {\n            this.style.width = this.ref.config.monthWidth;\n            this.style.margin = this.ref.config.monthMargin;\n        }\n    }\n\n    render() {\n        const rows = new Array(6).fill('x');\n        this.style.width = this.ref.config.monthWidth;\n        this.style.margin = this.ref.config.monthMargin;\n\n        return html`<!---->\n\n            <!--  header for the month -->\n            <simple-html-date-month-header\n                .ref=${this.ref}\n                .month=${this.month}\n                .year=${this.year}\n            ></simple-html-date-month-header>\n\n            <!--  header for the days -->\n            <simple-html-date-header-row .ref=${this.ref}></simple-html-date-header-row>\n\n            <!-- rows to hold the days -->\n            ${rows.map((_x, i) => {\n                return html`<simple-html-date-day-row\n                    .ref=${this.ref}\n                    .month=${this.month}\n                    .year=${this.year}\n                    .row=${i}\n                ></simple-html-date-day-row>`;\n            })} `;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-month-header')\nexport default class extends HTMLElement {\n    @property() month: number;\n    @property() year: number;\n    ref: SimpleHtmlDate;\n\n    render() {\n        return html`<span>${this.ref.config.monthHeader[this.month]}-${this.year}</span>`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-header-row')\nexport default class extends HTMLElement {\n    ref: SimpleHtmlDate;\n    connectedCallback() {\n        this.ref.addEventListener('update', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('update', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'update') {\n            this.render();\n        }\n    }\n\n    render() {\n        const rows = new Array(8).fill('x');\n        this.style.height = this.ref.config.rowHeight;\n\n        return html`<!---->\n\n            <!-- rows to hold the days -->\n            ${rows.map((_x, i) => {\n                if (i === 0) {\n                    if (this.ref.config.showWeek) {\n                        return html`<simple-html-date-week-header\n                            .ref=${this.ref}\n                            .row=${i}\n                        ></simple-html-date-week-header>`;\n                    }\n                    return '';\n                } else {\n                    return html`<simple-html-date-day-header\n                        .ref=${this.ref}\n                        .blockDay=${i - 1}\n                    ></simple-html-date-day-header>`;\n                }\n            })} `;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\n\n@customElement('simple-html-date-week-header')\nexport default class extends HTMLElement {\n    render() {\n        return html`W`;\n    }\n}\n","import { customElement } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-day-header')\nexport default class extends HTMLElement {\n    ref: SimpleHtmlDate;\n    blockDay: number;\n\n    connectedCallback() {\n        this.ref.addEventListener('update', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('update', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'update') {\n            this.render();\n        }\n    }\n\n    getDayHeaders(blockDay: number) {\n        let start = this.ref.config.weekStart;\n        const newArr = [];\n        for (let i = 0; i < 7; i++) {\n            newArr.push(start);\n            start++;\n            if (start > 6) {\n                start = 0;\n            }\n        }\n        return this.ref.config.weekHeader[newArr[blockDay]];\n    }\n\n    render() {\n        this.style.height = this.ref.config.rowHeight;\n        return html`${this.getDayHeaders(this.blockDay)}`;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-day-row')\nexport default class extends HTMLElement {\n    ref: SimpleHtmlDate;\n    @property() row: number;\n    @property() month: number;\n    @property() year: number;\n    connectedCallback() {\n        this.ref.addEventListener('update', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('update', this);\n    }\n\n    handleEvent(e: Event) {\n        if (e.type === 'update') {\n            this.render();\n        }\n    }\n\n    render() {\n        const rows = new Array(8).fill('x');\n        this.style.height = this.ref.config.rowHeight;\n\n        return html`<!---->\n\n            <!-- rows to hold the days -->\n            ${rows.map((_x, i) => {\n                if (i === 0) {\n                    if (this.ref.config.showWeek) {\n                        return html`<simple-html-date-week\n                            .ref=${this.ref}\n                            .monthBlock=${i + this.row * 7}\n                            .month=${this.month}\n                            .year=${this.year}\n                            .row=${i}\n                        ></simple-html-date-week>`;\n                    }\n                    return '';\n                } else {\n                    return html`<simple-html-date-day\n                        .ref=${this.ref}\n                        .month=${this.month}\n                        .year=${this.year}\n                        .monthBlock=${i + this.row * 7}\n                    ></simple-html-date-day>`;\n                }\n            })} `;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n@customElement('simple-html-date-week')\nexport default class extends HTMLElement {\n    monthBlock: number;\n    ref: SimpleHtmlDate;\n    @property() month: number;\n    @property() year: number;\n\n    getWeek(date: Date) {\n        /*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.epoch-calendar.com */\n\n        const dowOffset = this.ref.config.isoWeek ? 1 : 0;\n        const newYear = new Date(date.getFullYear(), 0, 1);\n        let day = newYear.getDay() - dowOffset; //the day of week the year begins on\n        day = day >= 0 ? day : day + 7;\n        const daynum =\n            Math.floor(\n                (date.getTime() -\n                    newYear.getTime() -\n                    (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) /\n                    86400000\n            ) + 1;\n        let weeknum;\n        //if the year starts before the middle of a week\n        if (day < 4) {\n            weeknum = Math.floor((daynum + day - 1) / 7) + 1;\n            if (weeknum > 52) {\n                const nYear = new Date(date.getFullYear() + 1, 0, 1);\n                let nday = nYear.getDay() - dowOffset;\n                nday = nday >= 0 ? nday : nday + 7;\n                /*if the next year starts before the middle of\n                       the week, it is week #1 of that year*/\n                weeknum = nday < 4 ? 1 : 53;\n            }\n        } else {\n            weeknum = Math.floor((daynum + day - 1) / 7);\n        }\n        return weeknum;\n    }\n\n    render() {\n        let year = this.year;\n        let month = this.month;\n        const config = this.ref.config;\n        const FirstDateOfMonth = new Date(year, month, 1);\n        const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\n\n        let dayOfWeek = FirstDateOfMonth.getDay() - (config.isoWeek ? 1 : 0); // we only want monday or sunday\n        if (dayOfWeek < 0) {\n            // if less than 0, we need to push it out 1 week. so we always show entire month\n            dayOfWeek = dayOfWeek + 7;\n        }\n\n        let day = this.monthBlock - dayOfWeek + 1;\n\n        // if more then last day of month\n        if (day > lastDayOfMonth.getDate()) {\n            day = day - lastDayOfMonth.getDate();\n            if (month === 11) {\n                month = 0;\n                year++;\n            } else {\n                month++;\n            }\n        }\n\n        // if less that first we need to count downwards\n        if (day < 1) {\n            FirstDateOfMonth.setDate(FirstDateOfMonth.getDate() - Math.abs(day) - config.weekStart);\n            day = FirstDateOfMonth.getDate();\n            if (month === 0) {\n                month = 11;\n                year--;\n            } else {\n                month--;\n            }\n        }\n\n        return html`${this.getWeek(new Date(year, month, day))}`;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { SimpleHtmlDate } from '../simple-html-date';\n\n// lets keep it simple while we test\nconst selected = new Set();\nlet lastSelected: Date = null;\n\n@customElement('simple-html-date-day')\nexport default class extends HTMLElement {\n    monthBlock: number; // starts with 1\n    ref: SimpleHtmlDate;\n    @property() month: number;\n    @property() year: number;\n    currentDate: Date;\n    dimmed: boolean;\n\n    connectedCallback() {\n        this.ref.addEventListener('update', this);\n        this.addEventListener('click', this);\n    }\n\n    disconnectedCallback() {\n        this.ref.removeEventListener('update', this);\n        this.removeEventListener('click', this);\n    }\n\n    handleEvent(e: MouseEvent) {\n        if (e.type === 'update') {\n            this.render();\n        }\n        let added = false;\n        if (e.type === 'click') {\n            if (selected.has(this.currentDate.getTime())) {\n                added = false;\n                selected.delete(this.currentDate.getTime());\n            } else {\n                added = true;\n                selected.add(this.currentDate.getTime());\n            }\n\n            if (e.shiftKey && lastSelected) {\n                if (lastSelected < this.currentDate) {\n                    selected.clear();\n                    selected.add(lastSelected.getTime());\n                    while (lastSelected < this.currentDate) {\n                        lastSelected.setDate(lastSelected.getDate() + 1);\n                        if (!selected.has(lastSelected.getTime())) {\n                            selected.add(lastSelected.getTime());\n                        }\n                    }\n                }\n\n                if (lastSelected > this.currentDate) {\n                    selected.clear();\n                    selected.add(lastSelected.getTime());\n                    while (lastSelected > this.currentDate) {\n                        lastSelected.setDate(lastSelected.getDate() - 1);\n                        if (!selected.has(lastSelected.getTime())) {\n                            selected.add(lastSelected.getTime());\n                        }\n                    }\n                }\n            }\n\n            if (added) {\n                lastSelected = this.currentDate;\n            } else {\n                lastSelected = null;\n            }\n\n            this.ref.triggerEvent('update');\n        }\n    }\n\n    render() {\n        // lets just add silly datecalc so we get correct days\n        let year = this.year;\n        let month = this.month;\n        const FirstDateOfMonth = new Date(year, month, 1);\n        const lastDayOfMonth = new Date(year, month === 11 ? 0 : month + 1, 0);\n        let dayOfWeek = FirstDateOfMonth.getDay() - this.ref.config.weekStart;\n        if (dayOfWeek < 0) {\n            // if less than 0, we need to push it out 1 week. so we always show entire month\n            dayOfWeek = dayOfWeek + 7;\n        }\n\n        let day = this.monthBlock - dayOfWeek;\n\n        let dimmedCell = false;\n        // if more then last day of month\n        if (day > lastDayOfMonth.getDate()) {\n            day = day - lastDayOfMonth.getDate();\n            dimmedCell = true;\n            if (month === 11) {\n                month = 0;\n                year++;\n            } else {\n                month++;\n            }\n        }\n\n        // if less that first we need to count downwards\n        if (day < 1) {\n            FirstDateOfMonth.setDate(\n                FirstDateOfMonth.getDate() - Math.abs(day) - this.ref.config.weekStart\n            );\n            day = FirstDateOfMonth.getDate();\n            dimmedCell = true;\n            if (month === 0) {\n                month = 11;\n                year--;\n            } else {\n                month--;\n            }\n        }\n\n        if (dimmedCell) {\n            if (!this.classList.contains('simple-html-date-day-dimmed')) {\n                this.classList.add('simple-html-date-day-dimmed');\n            }\n        } else {\n            if (this.classList.contains('simple-html-date-day-dimmed')) {\n                this.classList.remove('simple-html-date-day-dimmed');\n            }\n        }\n\n        this.currentDate = new Date(year, month, day);\n        this.dimmed = dimmedCell;\n        if (selected.has(this.currentDate.getTime())) {\n            if (!this.classList.contains('simple-html-date-day-selected') && !dimmedCell) {\n                this.classList.add('simple-html-date-day-selected');\n            }\n        } else {\n            if (this.classList.contains('simple-html-date-day-selected')) {\n                this.classList.remove('simple-html-date-day-selected');\n            }\n        }\n\n        if (this.classList.contains('simple-html-date-day-selected') && dimmedCell) {\n            this.classList.remove('simple-html-date-day-selected');\n        }\n\n        if (this.ref.config.hideDimmedDates && dimmedCell) {\n            day = '' as any;\n            if (!this.classList.contains('simple-html-date-day-hidden')) {\n                this.classList.add('simple-html-date-day-hidden');\n            }\n        } else {\n            this.classList.remove('simple-html-date-day-hidden');\n        }\n\n        return html`<span>${day}</span>`;\n    }\n}\n","import { customElement, property } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { IDateConfig } from './interfaces';\n\n@customElement('simple-html-date')\nexport class SimpleHtmlDate extends HTMLElement {\n    @property() config: IDateConfig;\n\n    public triggerEvent(eventName: string, data?: any) {\n        const event = new CustomEvent(eventName, {\n            bubbles: true,\n            detail: {\n                data\n            }\n        });\n        this.dispatchEvent(event);\n    }\n\n    valuesChanged() {\n        this.triggerEvent('update');\n    }\n\n    render() {\n        let month = this.config.startMonth;\n        let year = this.config.startYear;\n        const months = [];\n\n        let i = 0;\n        while (i < this.config.monthsToShow) {\n            const columns = [];\n            for (let y = 0; y < this.config.monthColumns; y++) {\n                // add to i so we dont get to many\n                i++;\n                if (i <= this.config.monthsToShow) {\n                    const template = html`<simple-html-date-month\n                        .ref=${this}\n                        .month=${month}\n                        .year=${year}\n                    ></simple-html-date-month>`;\n\n                    // push up month\n                    if (month === 11) {\n                        month = 0;\n                        year = year + 1;\n                    } else {\n                        month = month + 1;\n                    }\n                    columns.push(template);\n                }\n            }\n            months.push(html`<div class=\"simple-html-date-col\">${columns.map((x) => x)}</div>`);\n        }\n\n        return html`<!-- -->\n\n            <!-- main header for entire calender -->\n            <simple-html-date-header .ref=${this}></simple-html-date-header>\n\n            <!-- create a block for each month -->\n            ${months.map((x) => {\n                //generate template\n\n                return x;\n            })} `;\n    }\n}\n","import './simple-html-date.css';\nimport './simple-html-date';\nimport './simple-html-date-input';\n\nimport './monthElements/simple-html-date-header';\nimport './monthElements/simple-html-date-month';\nimport './monthElements/simple-html-date-month-header';\n\nimport './monthElements/simple-html-date-header-row';\nimport './monthElements/simple-html-date-week-header';\nimport './monthElements/simple-html-date-day-header';\n\nimport './monthElements/simple-html-date-day-row';\nimport './monthElements/simple-html-date-week';\nimport './monthElements/simple-html-date-day';\n","export const gotoURL = function (path: string, params: any = {}, query: any = null) {\r\n    if (path[0] === '#') {\r\n        path = path.substr(1, path.length);\r\n    }\r\n\r\n    const urls = path.split('/').filter((x) => (x ? true : false));\r\n    let newUrl = '';\r\n    urls.forEach((val, i) => {\r\n        if (val[0] === ':' && params[val.substr(1, val.length)] !== undefined) {\r\n            newUrl = newUrl + params[val.substr(1, val.length)];\r\n        } else {\r\n            newUrl = newUrl + `${val}`;\r\n        }\r\n        if (urls.length - 1 !== i) {\r\n            newUrl = newUrl + `/`;\r\n        }\r\n    });\r\n\r\n    // make sure we have the # - is removed in the start...\r\n    newUrl = `#${newUrl}`;\r\n\r\n    let urlparams;\r\n    if (query) {\r\n        urlparams = new URLSearchParams();\r\n        for (const k in query) {\r\n            if (query[k]) {\r\n                urlparams.append(k, query[k]);\r\n            }\r\n        }\r\n        location.hash = `${newUrl}?${urlparams.toString()}`;\r\n    } else {\r\n        location.hash = newUrl;\r\n    }\r\n};\r\n","export const PATH_SLASH_REGEX = '\\\\/';\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\n\r\nexport function createRouteRegex(pathPattern: pathPatternType[], openEnd: boolean) {\r\n    let regex = '';\r\n    pathPattern.forEach((pattern, index) => {\r\n        if ((pathPattern.length > 1 && index === 0) || pathPattern.length === 1) {\r\n            regex = '^' + pattern.regex;\r\n        } else {\r\n            if (pattern.regex === PATH_SLASH_REGEX) {\r\n                regex = regex + pattern.regex;\r\n            } else {\r\n                regex = regex + PATH_SLASH_REGEX + pattern.regex;\r\n            }\r\n        }\r\n        if (!openEnd && pathPattern.length - 1 === index) {\r\n            regex = regex + '($|/$)';\r\n        }\r\n    });\r\n    return regex;\r\n}\r\n","export function getVariableName(path: string) {\n    return path.substring(1, path.length);\n}\n","export const PATH_ARGUMENT_REGEX = '[a-zA-Z0-9\\\\_\\\\-\\\\:]+';\n","/**\r\n * check if sting starts with : and does not contain more then 1\r\n */\r\nexport function isVariable(path: string): boolean {\r\n    if (path && typeof path === 'string' && path[0] === ':') {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { PATH_ARGUMENT_REGEX } from './PATH_ARGUMENT_REGEX';\r\nimport { PATH_SLASH_REGEX } from './PATH_SLASH_REGEX';\r\nimport { getVariableName } from './getVariableName';\r\nimport { isVariable } from './isVariable';\r\n\r\nexport function parseUrlPattern(urlPattern: string) {\r\n    const paths = urlPattern.split('/');\r\n    const pathsConfig: pathPatternType[] = [];\r\n    paths.forEach((path, index) => {\r\n        if (\r\n            index === paths.length - 1 &&\r\n            path === '' &&\r\n            urlPattern[urlPattern.length - 1] === PATH_SLASH_REGEX\r\n        ) {\r\n        } else {\r\n            pathsConfig.push({\r\n                staticType: !isVariable(path),\r\n                variable: isVariable(path) ? getVariableName(path) : null,\r\n                regex: isVariable(path) ? PATH_ARGUMENT_REGEX : path\r\n            });\r\n        }\r\n    });\r\n    return pathsConfig;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\nimport { createRouteRegex } from './createRouteRegex';\n\nexport const routeMatch = function (hash = '', locationhash = window.location.hash) {\n    if (!hash && (locationhash === '' || locationhash === '#')) {\n        return true;\n    }\n\n    if (locationhash.indexOf('?') !== -1) {\n        locationhash = locationhash.split('?')[0];\n    }\n\n    let openEnd = false;\n    if (hash[hash.length - 1] === '*') {\n        hash = hash.substring(0, hash.length - 1);\n        openEnd = true;\n    }\n    const pattern = parseUrlPattern(hash);\n    const regexString = createRouteRegex(pattern, openEnd);\n    const regex = new RegExp(regexString);\n    return regex.test(locationhash);\n};\n","import { TemplateResult, directive } from 'lit-html';\nimport { routeMatch } from './routeMatch';\n\nexport const resolvePromise = directive(\n    (promise: Promise<null>, htmlTemplate: TemplateResult) => (part: any) => {\n        Promise.resolve(promise).then(() => {\n            part.setValue(htmlTemplate);\n            part.commit();\n        });\n    }\n);\n\nexport const routeMatchAsync = function (\n    hash = '',\n    importStatement: () => Promise<any>,\n    htmlTemplate: TemplateResult\n) {\n    if (routeMatch(hash)) {\n        return resolvePromise(importStatement(), htmlTemplate);\n    } else {\n        return '';\n    }\n};\n","export function getUrlVars(string: string) {\r\n    const vars = {};\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n    //@ts-ignore\r\n    string.replace(/[?&]+([^=&]+)=([^&]*)/gi, (_m, key, value) => {\r\n        vars[key] = value;\r\n    });\r\n    return vars;\r\n}\r\n","import { pathPatternType } from './pathPatternType';\r\nimport { getUrlVars } from './getUrlVars';\r\n\r\nexport function getVariables(pathPattern: pathPatternType[], pattern: string) {\r\n    // split away the query params if any\r\n    const paths = pattern.split('?')[0].split('/');\r\n    const args: any = { _paths: [] };\r\n    paths.forEach((path, i) => {\r\n        if (pathPattern[i] && pathPattern[i].variable) {\r\n            args[pathPattern[i].variable] = path;\r\n        }\r\n        if (i >= pathPattern.length - 1) {\r\n            args._paths.push(path);\r\n        }\r\n    });\r\n    args._query = getUrlVars(pattern);\r\n    return args;\r\n}\r\n","import { parseUrlPattern } from './parseUrlPattern';\r\nimport { getVariables } from './getVariables';\r\n\r\nexport const getRouteParams = function (hash: string, locationhash = window.location.hash) {\r\n    const pattern = parseUrlPattern(hash);\r\n    return getVariables(pattern, locationhash);\r\n};\r\n","import { publish, subscribe, unSubscribe } from '@simple-html/core';\r\n// exports\r\nexport { routeMatch } from './routeMatch';\r\nexport { routeMatchAsync } from './routeMatchAsync';\r\nexport { gotoURL } from './gotoURL';\r\nexport { getRouteParams } from './getRouteParams';\r\n\r\n/**\r\n * Simple functions used for subcribing hash event\r\n */\r\n\r\nconst HASH_RENDER_EVENT = 'HASH_RENDER_EVENT';\r\nexport function subscribeHashEvent(ctx: any, call: Function) {\r\n    subscribe(HASH_RENDER_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeHashEvent(ctx: any) {\r\n    unSubscribe(HASH_RENDER_EVENT, ctx);\r\n}\r\n\r\nexport function publishHashEvent() {\r\n    publish(HASH_RENDER_EVENT);\r\n}\r\n\r\n/**\r\n * Simple functions used for can deactivate event\r\n */\r\n\r\nconst CAN_DEACTIVATE_EVENT = 'CAN_DEACTIVATE_EVENT';\r\nexport function subscribeCanDeactivateEvent(ctx: any, call: Function) {\r\n    subscribe(CAN_DEACTIVATE_EVENT, ctx, call);\r\n}\r\n\r\nexport function unSubscribeCanDeactivateEvent(ctx: any) {\r\n    unSubscribe(CAN_DEACTIVATE_EVENT, ctx);\r\n}\r\n\r\nexport function publishCanDeactivateEvent() {\r\n    publish(CAN_DEACTIVATE_EVENT);\r\n}\r\n\r\nexport let canDeactivateCallers: any[] = [];\r\nconst canDeactivate = function () {\r\n    return new Promise(async (resolve) => {\r\n        canDeactivateCallers = [];\r\n        publishCanDeactivateEvent();\r\n\r\n        setTimeout(async () => {\r\n            let result = true;\r\n            for (let i = 0; i < canDeactivateCallers.length; i++) {\r\n                const y = await Promise.resolve(canDeactivateCallers[i]);\r\n                if (y === false) {\r\n                    result = y;\r\n                }\r\n            }\r\n            resolve(result);\r\n        }, 0);\r\n    });\r\n};\r\n\r\n// you call this during a CAN_DEACTIVATE_EVENT to stop navigation\r\nexport const stopCanDeactivate = function (promise: Promise<boolean>) {\r\n    canDeactivateCallers.push(promise);\r\n};\r\n\r\n/**\r\n * starts router\r\n */\r\n\r\nexport function init() {\r\n    let oldhash = window.location.hash;\r\n    let isBackEvent = false;\r\n\r\n    const hashChange = function () {\r\n        if (!isBackEvent) {\r\n            canDeactivate().then((result) => {\r\n                if (result) {\r\n                    oldhash = window.location.hash;\r\n                    publish(HASH_RENDER_EVENT);\r\n                } else {\r\n                    isBackEvent = true;\r\n                    window.location.hash = oldhash;\r\n                }\r\n            });\r\n        } else {\r\n            isBackEvent = false;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('hashchange', hashChange);\r\n\r\n    // clean up during HMR\r\n    const cleanUp = {\r\n        handleEvent: function () {\r\n            window.removeEventListener('HMR-FUSEBOX', cleanUp);\r\n            window.removeEventListener('hashchange', hashChange);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('HMR-FUSEBOX', cleanUp);\r\n}\r\n","import { customElement, requestRender } from '@simple-html/core';\nimport { html } from 'lit-html';\nimport { routeMatch } from '@simple-html/router';\n\n@customElement('app-root')\nexport default class extends HTMLElement {\n    elements = ['#default', '#sample1', '#sample2', '#sample3', '#sample4'];\n\n    render() {\n        return html`<section class=\"flex flex-row flex-grow h-full\">\n            <!-- our simple navigation  -->\n            <div class=\"bg-gray-200 flex flex-col\">\n                ${this.elements.map((element) => {\n                    return html`<a\n                       class=\"p-2 m-2 bg-indigo-300\"\n                       href=${element}\n                       @click=${() => requestRender(this)}>\n                        ${element}\n                    </button>`;\n                })}\n            </div>\n\n            <!--  our routes -->\n            ${routeMatch('#default')\n                ? html`<sample-default class=\"flex-grow\"></sample-default>`\n                : ''}\n            ${routeMatch('#sample1') ? html`<sample-no1 class=\"flex-grow\"></sample-no1>` : ''}\n            ${routeMatch('#sample2') ? html`<sample-no2 class=\"flex-grow\"></sample-no2>` : ''}\n            ${routeMatch('#sample3') ? html`<sample-no3 class=\"flex-grow\"></sample-no3>` : ''}\n            ${routeMatch('#sample4') ? html`<sample-no4 class=\"flex-grow\"></sample-no4>` : ''}\n        </section>`;\n    }\n}\n","import './hmr';\nimport './index.css';\n\nimport { enableInternalLogger } from '@simple-html/core';\nenableInternalLogger([\n    'SIMPLE-HTML-DATE-WEEK',\n    'SIMPLE-HTML-DATE-DAY',\n    'SIMPLE-HTML-DATE-DAY-HEADER',\n    'SIMPLE-HTML-DATE-WEEK-HEADER',\n    'SIMPLE-HTML-DATE-MONTH-HEADER',\n    'SIMPLE-HTML-DATE-DAY-ROW',\n    'SIMPLE-HTML-DATE-HEADER-ROW',\n    'SIMPLE-HTML-DATE-MONTH',\n    'SIMPLE-HTML-DATE-HEADER'\n]);\n\n// add our sample parts\nimport './elements/app-root';\nimport './elements/sample-default';\nimport './elements/sample-no1';\nimport './elements/sample-no2';\nimport './elements/sample-no3';\nimport './elements/sample-no4';\n\n// add our your widget ?\nimport '@simple-html/date';\n"]}