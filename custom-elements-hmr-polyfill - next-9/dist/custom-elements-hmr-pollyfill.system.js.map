{"version":3,"file":"custom-elements-hmr-pollyfill.system.js","sources":["ES6/reflow-strategy/rerenderInnerHTML.js","ES6/polyfill/hmrCache.js","ES6/polyfill/patch.js","ES6/polyfill/applyPolyfill.js","ES6/polyfill/overrideCustomElementDefine.js","ES6/polyfill/createHookClass.js","ES6/polyfill/constructInstance.js","ES6/polyfill/onCustomElementChange.js","ES6/polyfill/reflowStrategy.js","ES6/polyfill/createHookElementChangeListener.js"],"sourcesContent":["export function rerenderInnerHTML() {\r\n    if (document.body) {\r\n        requestAnimationFrame(() => {\r\n            // re-render the whole DOM\r\n            // this will make less calls to connectedCallback/disconnectedCallback on replaced child node when created.\r\n            const oldBodyHtml = document.body.innerHTML;\r\n            document.body.innerHTML = '';\r\n            document.body.innerHTML = oldBodyHtml;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=rerenderInnerHTML.js.map","export function initCache() {\r\n    if (!globalThis.hmrCache) {\r\n        globalThis.hmrCache = {};\r\n        globalThis.hmrCacheSymbolAttributes = {};\r\n        globalThis.hmrCacheSymbolObserver = {};\r\n    }\r\n}\r\nexport function getMostRecentImpl(elementName) {\r\n    return globalThis.hmrCache[elementName];\r\n}\r\nexport function setMostRecentImpl(elementName, impl) {\r\n    globalThis.hmrCache[elementName] = impl;\r\n}\r\nexport function isCacheInitialized() {\r\n    return globalThis.hmrCache.initialized;\r\n}\r\nexport function setCacheAsInitialized() {\r\n    globalThis.hmrCache.initialized = true;\r\n}\r\nexport function getSymbolAttributes(elementName) {\r\n    if (!globalThis.hmrCacheSymbolAttributes[elementName]) {\r\n        globalThis.hmrCacheSymbolAttributes[elementName] = Symbol('observedAttributesArray');\r\n        return globalThis.hmrCacheSymbolAttributes[elementName];\r\n    }\r\n    else {\r\n        return globalThis.hmrCacheSymbolAttributes[elementName];\r\n    }\r\n}\r\nexport function getSymbolObserver(elementName) {\r\n    if (!globalThis.hmrCacheSymbolObserver[elementName]) {\r\n        globalThis.hmrCacheSymbolObserver[elementName] = Symbol('observedAttributesObserver');\r\n        return globalThis.hmrCacheSymbolObserver[elementName];\r\n    }\r\n    else {\r\n        return globalThis.hmrCacheSymbolObserver[elementName];\r\n    }\r\n}\r\n//# sourceMappingURL=hmrCache.js.map","export function patch(recentImpl, targetImpl, BLACKLISTED_PATCH_METHODS) {\r\n    const ownPropertyNamesProto = Object.getOwnPropertyNames(recentImpl);\r\n    const whitelistedPrototypePropertyNamesProto = ownPropertyNamesProto.filter((propertyName) => {\r\n        return BLACKLISTED_PATCH_METHODS.indexOf(propertyName) === -1;\r\n    });\r\n    for (let i = 0; i < whitelistedPrototypePropertyNamesProto.length; i++) {\r\n        const propertyDescriptor = Object.getOwnPropertyDescriptor(recentImpl, whitelistedPrototypePropertyNamesProto[i]);\r\n        if (propertyDescriptor) {\r\n            if (propertyDescriptor.configurable) {\r\n                Object.defineProperty(targetImpl, whitelistedPrototypePropertyNamesProto[i], propertyDescriptor);\r\n            }\r\n            else {\r\n                console.warn('[custom-element-hmr-polyfill]', `${whitelistedPrototypePropertyNamesProto[i]} is not configurable, skipping`);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=patch.js.map","import { initCache } from './hmrCache';\r\nimport { overrideCustomElementDefine } from './overrideCustomElementDefine';\r\nimport { onCustomElementChange } from './onCustomElementChange';\r\nimport { createHookElementChangeListener } from './createHookElementChangeListener';\r\nimport { ReflowStrategy } from './reflowStrategy';\r\nexport function applyPolyfill(reflowStrategy = ReflowStrategy.NONE, reflowDelayMs = 250, onCustomElementChangeListener) {\r\n    initCache();\r\n    overrideCustomElementDefine();\r\n    onCustomElementChange(createHookElementChangeListener(reflowStrategy, reflowDelayMs, onCustomElementChangeListener));\r\n}\r\n//# sourceMappingURL=applyPolyfill.js.map","import { setMostRecentImpl, isCacheInitialized, setCacheAsInitialized, getMostRecentImpl, getSymbolAttributes } from './hmrCache';\r\nimport { createHookClass } from './createHookClass';\r\nimport { constructInstance } from './constructInstance';\r\nexport function overrideCustomElementDefine() {\r\n    if (!isCacheInitialized()) {\r\n        // make sure the override happens only once\r\n        setCacheAsInitialized();\r\n        const originalDefineFn = CustomElementRegistry.prototype.define;\r\n        CustomElementRegistry.prototype.define = function (elementName, impl, options) {\r\n            const registeredCustomElement = customElements.get(elementName);\r\n            // save and clear attribute so we are in control\r\n            impl[getSymbolAttributes(elementName)] = impl.observedAttributes;\r\n            // update cache before proxy since we need it in the createHookClass\r\n            // this will only be a issue when bundle is loaded after body\r\n            setMostRecentImpl(elementName, impl);\r\n            if (!registeredCustomElement) {\r\n                const hookClass = new Proxy(createHookClass(elementName, impl), {\r\n                    construct: function (element, args, newTarget) {\r\n                        const mostRecentImpl = getMostRecentImpl(elementName);\r\n                        return constructInstance(mostRecentImpl, args, newTarget);\r\n                    }\r\n                });\r\n                originalDefineFn.apply(this, [elementName, hookClass, options]);\r\n            }\r\n            else {\r\n                const onCustomElementChange = globalThis.hmrCache.onCustomElementChange;\r\n                if (onCustomElementChange && typeof onCustomElementChange === 'function') {\r\n                    onCustomElementChange(elementName, impl, options);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=overrideCustomElementDefine.js.map","import { getMostRecentImpl, getSymbolAttributes, getSymbolObserver } from './hmrCache';\r\nexport function createHookClass(elementName, originalImpl) {\r\n    return class extends originalImpl {\r\n        static get observedAttributes() {\r\n            return [];\r\n        }\r\n        connectedCallback() {\r\n            const Impl = getMostRecentImpl(elementName);\r\n            const mostRecentImpl = Impl.prototype;\r\n            const attributes = Impl[getSymbolAttributes(elementName)];\r\n            const observerOptions = {\r\n                childList: false,\r\n                attributes: true,\r\n                attributeOldValue: true,\r\n                subtree: false\r\n            };\r\n            const callback = (mutationList) => {\r\n                mutationList.forEach(mutation => {\r\n                    if (mostRecentImpl.attributeChangedCallback &&\r\n                        attributes &&\r\n                        attributes.indexOf(mutation.attributeName) !== -1) {\r\n                        // call back\r\n                        mostRecentImpl.attributeChangedCallback.apply(this, [\r\n                            mutation.attributeName,\r\n                            mutation.oldValue,\r\n                            mutation.target.getAttribute(mutation.attributeName)\r\n                        ]);\r\n                    }\r\n                });\r\n            };\r\n            // call initial callback when class is created\r\n            if (attributes) {\r\n                if (Array.isArray(attributes)) {\r\n                    attributes.forEach(attributeName => {\r\n                        mostRecentImpl.attributeChangedCallback.apply(this, [\r\n                            attributeName,\r\n                            null,\r\n                            this.getAttribute(attributeName)\r\n                        ]);\r\n                    });\r\n                }\r\n                else {\r\n                    console.warn(`observedAttributes in ${elementName} is not array, please fix`);\r\n                }\r\n            }\r\n            // create and observe\r\n            this[getSymbolObserver(elementName)] = new MutationObserver(callback);\r\n            this[getSymbolObserver(elementName)].observe(this, observerOptions);\r\n            if (mostRecentImpl.connectedCallback) {\r\n                mostRecentImpl.connectedCallback.apply(this, arguments);\r\n            }\r\n        }\r\n        disconnectedCallback() {\r\n            // cleanup\r\n            this[getSymbolObserver(elementName)].disconnect();\r\n            this[getSymbolObserver(elementName)] = null;\r\n            const mostRecentImpl = getMostRecentImpl(elementName).prototype;\r\n            if (mostRecentImpl.disconnectedCallback) {\r\n                mostRecentImpl.disconnectedCallback.apply(this, arguments);\r\n            }\r\n        }\r\n        adoptedCallback() {\r\n            const mostRecentImpl = getMostRecentImpl(elementName).prototype;\r\n            if (mostRecentImpl.adoptedCallback) {\r\n                mostRecentImpl.adoptedCallback.apply(this, arguments);\r\n            }\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=createHookClass.js.map","import { patch } from './patch';\r\nexport const BLACKLISTED_PROTOTYPE_PATCH_METHODS = [\r\n/*\r\n// we dont need these anymore...\r\n'constructor',\r\n'connectedCallback',\r\n'disconnectedCallback',\r\n'adoptedCallback',\r\n'attributeChangedCallback'  */\r\n];\r\nexport const BLACKLISTED_STATIC_PATCH_METHODS = ['name', 'prototype', 'length'];\r\nexport function constructInstance(mostRecentImpl, args, newTarget) {\r\n    // Constructed instance points to outdated impl details.\r\n    // PROTO check\r\n    let check = window[mostRecentImpl.__proto__.name];\r\n    if (check) {\r\n        check = window[mostRecentImpl.__proto__.name].prototype instanceof Element;\r\n    }\r\n    if (!check) {\r\n        patch(mostRecentImpl.__proto__.prototype, newTarget.prototype, BLACKLISTED_PROTOTYPE_PATCH_METHODS);\r\n        // here we will update static variables/methods of \"__proto__\"\r\n        patch(mostRecentImpl.__proto__, newTarget, BLACKLISTED_STATIC_PATCH_METHODS);\r\n    }\r\n    // PROTOTYPE\r\n    patch(mostRecentImpl.prototype, newTarget.prototype, BLACKLISTED_PROTOTYPE_PATCH_METHODS);\r\n    // here we will update static variables/methods of class\r\n    patch(mostRecentImpl, mostRecentImpl, BLACKLISTED_STATIC_PATCH_METHODS);\r\n    const customElementInstance = Reflect.construct(mostRecentImpl, args, newTarget);\r\n    return customElementInstance;\r\n}\r\n//# sourceMappingURL=constructInstance.js.map","import { initCache } from './hmrCache';\r\nexport const onCustomElementChange = (changeListener) => {\r\n    initCache();\r\n    if (!globalThis.hmrCache.onCustomElementChange) {\r\n        globalThis.hmrCache.onCustomElementChange = changeListener;\r\n    }\r\n};\r\n//# sourceMappingURL=onCustomElementChange.js.map","export var ReflowStrategy;\r\n(function (ReflowStrategy) {\r\n    ReflowStrategy[\"RERENDER_INNER_HTML\"] = \"rerenderInnnerHTML\";\r\n    ReflowStrategy[\"NONE\"] = \"none\";\r\n})(ReflowStrategy || (ReflowStrategy = {}));\r\n//# sourceMappingURL=reflowStrategy.js.map","import { ReflowStrategy } from './reflowStrategy';\r\nimport { rerenderInnerHTML } from '../reflow-strategy/rerenderInnerHTML';\r\nexport const createHookElementChangeListener = (reflowStrategy = ReflowStrategy.RERENDER_INNER_HTML, reflowDelayMs = 250, onCustomElementChangeListener) => {\r\n    let timer;\r\n    let elementsChanged = [];\r\n    if (!onCustomElementChangeListener) {\r\n        onCustomElementChangeListener = () => { };\r\n    }\r\n    return (elementName, impl, options) => {\r\n        onCustomElementChangeListener(elementName, impl, options);\r\n        if (reflowStrategy && reflowStrategy === ReflowStrategy.RERENDER_INNER_HTML) {\r\n            elementsChanged.push(elementName);\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                rerenderInnerHTML();\r\n                elementsChanged = [];\r\n            }, reflowDelayMs);\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=createHookElementChangeListener.js.map"],"names":["rerenderInnerHTML","document","body","requestAnimationFrame","oldBodyHtml","innerHTML","initCache","globalThis","hmrCache","hmrCacheSymbolAttributes","hmrCacheSymbolObserver","getMostRecentImpl","elementName","getSymbolAttributes","Symbol","getSymbolObserver","patch","recentImpl","targetImpl","BLACKLISTED_PATCH_METHODS","whitelistedPrototypePropertyNamesProto","Object","getOwnPropertyNames","filter","propertyName","indexOf","i","length","propertyDescriptor","getOwnPropertyDescriptor","configurable","defineProperty","console","warn","reflowStrategy","ReflowStrategy","NONE","reflowDelayMs","onCustomElementChangeListener","initialized","originalDefineFn","CustomElementRegistry","prototype","define","impl","options","registeredCustomElement","customElements","get","observedAttributes","setMostRecentImpl","onCustomElementChange","hookClass","Proxy","originalImpl","[object Object]","Impl","mostRecentImpl","attributes","Array","isArray","forEach","attributeName","attributeChangedCallback","apply","this","getAttribute","MutationObserver","mutationList","mutation","oldValue","target","observe","childList","attributeOldValue","subtree","connectedCallback","arguments","disconnect","disconnectedCallback","adoptedCallback","createHookClass","construct","element","args","newTarget","check","window","__proto__","name","Element","BLACKLISTED_PROTOTYPE_PATCH_METHODS","BLACKLISTED_STATIC_PATCH_METHODS","Reflect","constructInstance","overrideCustomElementDefine","createHookElementChangeListener","changeListener","RERENDER_INNER_HTML","timer","elementsChanged","push","clearTimeout","setTimeout"],"mappings":"uEAAO,SAASA,IACRC,SAASC,MACTC,sBAAsB,KAGlB,MAAMC,EAAcH,SAASC,KAAKG,UAClCJ,SAASC,KAAKG,UAAY,GAC1BJ,SAASC,KAAKG,UAAYD,ICP/B,SAASE,IACPC,WAAWC,WACZD,WAAWC,SAAW,GACtBD,WAAWE,yBAA2B,GACtCF,WAAWG,uBAAyB,IAGrC,SAASC,EAAkBC,GAC9B,OAAOL,WAAWC,SAASI,GAWxB,SAASC,EAAoBD,GAChC,OAAKL,WAAWE,yBAAyBG,GAK9BL,WAAWE,yBAAyBG,IAJ3CL,WAAWE,yBAAyBG,GAAeE,OAAO,2BACnDP,WAAWE,yBAAyBG,IAM5C,SAASG,EAAkBH,GAC9B,OAAKL,WAAWG,uBAAuBE,GAK5BL,WAAWG,uBAAuBE,IAJzCL,WAAWG,uBAAuBE,GAAeE,OAAO,8BACjDP,WAAWG,uBAAuBE,IC/B1C,SAASI,EAAMC,EAAYC,EAAYC,GAC1C,MACMC,EADwBC,OAAOC,oBAAoBL,GACYM,OAAQC,IACb,IAArDL,EAA0BM,QAAQD,IAE7C,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAuCO,OAAQD,IAAK,CACpE,MAAME,EAAqBP,OAAOQ,yBAAyBZ,EAAYG,EAAuCM,IAC1GE,IACIA,EAAmBE,aACnBT,OAAOU,eAAeb,EAAYE,EAAuCM,GAAIE,GAG7EI,QAAQC,KAAK,gCAAiC,GAAGb,EAAuCM,6ECPjG,SAAuBQ,EAAiBC,EAAeC,KAAMC,EAAgB,IAAKC,GACrFhC,ICHG,WACH,IHUOC,WAAWC,SAAS+B,YGVA,CHa3BhC,WAAWC,SAAS+B,aAAc,EGV9B,MAAMC,EAAmBC,sBAAsBC,UAAUC,OACzDF,sBAAsBC,UAAUC,OAAS,SAAU/B,EAAagC,EAAMC,GAClE,MAAMC,EAA0BC,eAAeC,IAAIpC,GAMnD,GAJAgC,EAAK/B,EAAoBD,IAAgBgC,EAAKK,mBHDnD,SAA2BrC,EAAagC,GAC3CrC,WAAWC,SAASI,GAAegC,EGG3BM,CAAkBtC,EAAagC,GAC1BE,EASA,CACD,MAAMK,EAAwB5C,WAAWC,SAAS2C,sBAC9CA,GAA0D,mBAA1BA,GAChCA,EAAsBvC,EAAagC,EAAMC,OAZnB,CAC1B,MAAMO,EAAY,IAAIC,MCf/B,SAAyBzC,EAAa0C,GACzC,OAAO,cAAcA,EACjBL,gCACI,MAAO,GAEXM,oBACI,MAAMC,EAAO7C,EAAkBC,GACzB6C,EAAiBD,EAAKd,UACtBgB,EAAaF,EAAK3C,EAAoBD,IAsBxC8C,IACIC,MAAMC,QAAQF,GACdA,EAAWG,QAAQC,IACfL,EAAeM,yBAAyBC,MAAMC,KAAM,CAChDH,EACA,KACAG,KAAKC,aAAaJ,OAK1B9B,QAAQC,KAAK,yBAAyBrB,+BAI9CqD,KAAKlD,EAAkBH,IAAgB,IAAIuD,iBA9BzBC,IACdA,EAAaP,QAAQQ,IACbZ,EAAeM,0BACfL,IACgD,IAAhDA,EAAWjC,QAAQ4C,EAASP,gBAE5BL,EAAeM,yBAAyBC,MAAMC,KAAM,CAChDI,EAASP,cACTO,EAASC,SACTD,EAASE,OAAOL,aAAaG,EAASP,qBAsBtDG,KAAKlD,EAAkBH,IAAc4D,QAAQP,KArCrB,CACpBQ,WAAW,EACXf,YAAY,EACZgB,mBAAmB,EACnBC,SAAS,IAkCTlB,EAAemB,mBACfnB,EAAemB,kBAAkBZ,MAAMC,KAAMY,WAGrDtB,uBAEIU,KAAKlD,EAAkBH,IAAckE,aACrCb,KAAKlD,EAAkBH,IAAgB,KACvC,MAAM6C,EAAiB9C,EAAkBC,GAAa8B,UAClDe,EAAesB,sBACftB,EAAesB,qBAAqBf,MAAMC,KAAMY,WAGxDtB,kBACI,MAAME,EAAiB9C,EAAkBC,GAAa8B,UAClDe,EAAeuB,iBACfvB,EAAeuB,gBAAgBhB,MAAMC,KAAMY,aDhDfI,CAAgBrE,EAAagC,GAAO,CAC5DsC,UAAW,SAAUC,EAASC,EAAMC,GAEhC,OERjB,SAA2B5B,EAAgB2B,EAAMC,GAGpD,IAAIC,EAAQC,OAAO9B,EAAe+B,UAAUC,MACxCH,IACAA,EAAQC,OAAO9B,EAAe+B,UAAUC,MAAM/C,qBAAqBgD,SAElEJ,IACDtE,EAAMyC,EAAe+B,UAAU9C,UAAW2C,EAAU3C,UAAWiD,GAE/D3E,EAAMyC,EAAe+B,UAAWH,EAAWO,IAO/C,OAJA5E,EAAMyC,EAAef,UAAW2C,EAAU3C,UAAWiD,GAErD3E,EAAMyC,EAAgBA,EAAgBmC,GACRC,QAAQX,UAAUzB,EAAgB2B,EAAMC,GFR3CS,CADgBnF,EAAkBC,GACAwE,EAAMC,MAGvD7C,EAAiBwB,MAAMC,KAAM,CAACrD,EAAawC,EAAWP,ODflEkD,GACA5C,EAAsB6C,EAAgC9D,EAAgBG,EAAeC,2BGPlF,MAAMqD,EAAsC,GAStCC,EAAmC,CAAC,OAAQ,YAAa,UCT/D,MAAMzC,EAAyB8C,IAClC3F,IACKC,WAAWC,SAAS2C,wBACrB5C,WAAWC,SAAS2C,sBAAwB8C,QCJzC9D,GACX,SAAWA,GACPA,EAAoC,oBAAI,qBACxCA,EAAqB,KAAI,OAF7B,CAGGA,IAAmBA,qBAAiB,MCFhC,MAAM6D,EAAkC,CAAC9D,EAAiBC,EAAe+D,oBAAqB7D,EAAgB,IAAKC,KACtH,IAAI6D,EACAC,EAAkB,GAItB,OAHK9D,IACDA,EAAgC,QAE7B,CAAC1B,EAAagC,EAAMC,KACvBP,EAA8B1B,EAAagC,EAAMC,GAC7CX,GAAkBA,IAAmBC,EAAe+D,sBACpDE,EAAgBC,KAAKzF,GACrB0F,aAAaH,GACbA,EAAQI,WAAW,KACfvG,IACAoG,EAAkB,IACnB/D"}